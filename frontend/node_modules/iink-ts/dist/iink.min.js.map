{"version":3,"file":"iink.min.js","sources":["../src/logger/logger.ts","../src/logger/loggerManager.ts","../src/utils/DeferredPromise.ts","../src/utils/geometry.ts","../src/utils/version.ts","../src/utils/crypto.ts","../src/utils/units.ts","../src/utils/uuid.ts","../src/utils/merge.ts","../src/utils/quadratics.ts","../src/configuration/GrabberConfiguration.ts","../src/configuration/recognition/EraserConfiguration.ts","../src/configuration/recognition/DiagramConfiguration.ts","../src/configuration/recognition/ExportConfiguration.ts","../src/configuration/recognition/MarginConfiguration.ts","../src/configuration/recognition/MathConfiguration.ts","../src/configuration/recognition/RawContentConfiguration.ts","../src/configuration/recognition/RecognitionRendererConfiguration.ts","../src/configuration/recognition/TextConfiguration.ts","../src/configuration/recognition/ConvertionConfiguration.ts","../src/configuration/RecognitionConfiguration.ts","../src/configuration/RenderingConfiguration.ts","../src/configuration/ServerConfiguration.ts","../src/configuration/TriggerConfiguration.ts","../src/configuration/UndoRedoConfiguration.ts","../src/configuration/Configuration.ts","../src/configuration/LoggerConfiguration.ts","../src/Constants.ts","../src/event/InternalEvent.ts","../src/event/PublicEvent.ts","../src/grabber/PointerEventGrabber.ts","../src/style/PenStyle.ts","../src/style/Theme.ts","../node_modules/json-css/lib/jsoncss.min.js","../src/style/StyleHelper.ts","../src/primitive/Symbol.ts","../src/style/StyleManager.ts","../src/primitive/Stroke.ts","../src/model/Model.ts","../src/recognizer/RestRecognizer.ts","../src/recognizer/WSRecognizer.ts","../src/renderer/canvas/CanvasRendererShape.ts","../src/renderer/canvas/CanvasRendererStroke.ts","../src/renderer/canvas/CanvasRendererText.ts","../src/renderer/canvas/CanvasRenderer.ts","../src/renderer/svg/SVGStroker.ts","../src/renderer/svg/WSSVGRenderer.ts","../src/undo-redo/UndoRedoContext.ts","../src/undo-redo/UndoRedoManager.ts","../src/behaviors/RestBehaviors.ts","../src/behaviors/WSBehaviors.ts","../src/smartguide/SmartGuide.ts","../src/Editor.ts","../src/utils/font.ts","../src/utils/language.ts","../src/utils/math.ts"],"sourcesContent":["import { LoggerClass, LoggerLevel } from \"../Constants\"\n\n/**\n * @group Logger\n */\nexport class Logger\n{\n  instanceName: LoggerClass\n  level: LoggerLevel\n\n  constructor(instanceName: LoggerClass, level: LoggerLevel)\n  {\n    this.instanceName = instanceName\n    this.level = level\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  debug(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.DEBUG >= this.level) {\n      const dataLog = {\n        from: `${this.instanceName}.${functionName}`,\n        message: data,\n      }\n      console.debug(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  info(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.INFO >= this.level) {\n      const dataLog = {\n        from: `${this.instanceName}.${functionName}`,\n        message: data,\n      }\n      console.info(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  warn(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.WARN >= this.level) {\n      const dataLog = {\n        from: `${this.instanceName}.${functionName}`,\n        message: data,\n      }\n      console.warn(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error(functionName: string, ...error: any)\n  {\n    const dataLog = {\n      from: `${this.instanceName}.${functionName}`,\n      error,\n    }\n    console.error(dataLog)\n  }\n}\n","import { LoggerClass, LoggerLevel } from \"../Constants\"\nimport { TLoggerConfiguration } from \"../configuration\"\nimport { Logger } from \"./logger\"\n\n/**\n * @group Logger\n */\nexport class LoggerManager\n{\n  static #loggerMap: Map<LoggerClass, Logger> = new Map()\n\n  static getLogger(name: LoggerClass): Logger\n  {\n    if (!this.#loggerMap.has(name)) {\n      this.#loggerMap.set(name, new Logger(name, LoggerLevel.ERROR))\n    }\n    return this.#loggerMap.get(name) as Logger\n  }\n\n  static setLoggerLevel(config: TLoggerConfiguration)\n  {\n    Object.keys(config).forEach((lc) =>\n    {\n      LoggerManager.getLogger(lc as LoggerClass).level = config[lc as LoggerClass]\n    })\n  }\n}\n","\n/**\n * @group Utils\n */\nexport class DeferredPromise<T> {\n  promise: Promise<T>\n  resolve!: (value: T) => void\n  reject!: (value: Error | string) => void\n\n  isFullFilled: boolean\n  isPending: boolean\n\n\n  constructor()\n  {\n    this.isFullFilled = false\n    this.isPending = true\n\n    this.promise = new Promise((resolve, reject) =>\n    {\n      this.reject = async (v: unknown) =>\n      {\n        this.isFullFilled = true\n        this.isPending = false\n        return reject(v)\n      }\n      this.resolve = async (v: unknown) =>\n      {\n        this.isFullFilled = true\n        this.isPending = false\n        return resolve(v as T)\n      }\n    })\n  }\n}\n","import { TPoint, TSegment } from \"../primitive\"\n\n/**\n * @group Utils\n */\nexport function computeDistance(p1: TPoint, p2: TPoint): number\n{\n  const distance = Math.hypot(p2.y - p1.y, p2.x - p1.x)\n  return isNaN(distance) ? 0 : distance\n}\n\n/**\n * @group Utils\n */\nexport function computeAngleAxeRadian(begin: TPoint, end: TPoint): number\n{\n  return Math.atan2(end.y - begin.y, end.x - begin.x)\n}\n\n/**\n * @group Utils\n */\nexport function createPointsOnSegment(p1: TPoint, p2: TPoint, spaceBetweenPoint = 1): TPoint[]\n{\n  const points: TPoint[] = []\n  const globalDistance = computeDistance(p1, p2)\n  let spaceWithP1 = spaceBetweenPoint\n  while (spaceWithP1 < globalDistance) {\n    const p = {\n      x: p1.x + (spaceWithP1 * (p2.x - p1.x)) / globalDistance,\n      y: p1.y + (spaceWithP1 * (p2.y - p1.y)) / globalDistance\n    }\n    points.push(p)\n    spaceWithP1 += spaceBetweenPoint\n  }\n  return points\n}\n\n/**\n * @group Utils\n */\nexport function scalaire(v1: TPoint, v2: TPoint): number\n{\n  return v1.x * v2.x + v1.y * v2.y\n}\n\n/**\n * @group Utils\n */\nexport function computeNearestPointOnSegment(p: TPoint, seg: TSegment): TPoint\n{\n  const vectP1P = { x: p.x - seg.p1.x, y: p.y - seg.p1.y }\n  const vectP1P2 = { x: seg.p2.x - seg.p1.x, y: seg.p2.y - seg.p1.y }\n  const scalaireP1P_P1P2 = scalaire(vectP1P, vectP1P2)\n  const scalaireP1P2_P1P2 = scalaire(vectP1P2, vectP1P2)\n\n  const t = Math.min(1, Math.max(0, scalaireP1P_P1P2 / scalaireP1P2_P1P2))\n  return { x: seg.p1.x + (vectP1P2.x * t), y: seg.p1.y + (vectP1P2.y * t) }\n}\n\n/**\n * @group Utils\n */\nexport function computeDistanceBetweenPointAndSegment(p: TPoint, seg: TSegment): number\n{\n  return computeDistance(p, computeNearestPointOnSegment(p, seg))\n}\n","\n/**\n * @group Utils\n */\nexport const isVersionSuperiorOrEqual = (source: string, target: string): boolean =>\n{\n  const sourceParts = source.split(\".\")\n  const targetParts = target.split(\".\")\n\n  for (let i = 0; i < targetParts.length; i++) {\n    const a = Number(targetParts[i])\n    const b = Number(sourceParts[i])\n    if (a > b) return false\n    if (a < b) return true\n  }\n  return true\n}\n","/**\n * @group Utils\n */\nexport async function computeHmac(message: string, applicationKey: string, hmacKey: string): Promise<string>\n{\n  const enc = new TextEncoder()\n  const messageEncoded = enc.encode(message)\n  const keyEncoded = enc.encode(applicationKey + hmacKey)\n\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    keyEncoded,\n    {\n      name: \"HMAC\",\n      hash: { name: \"SHA-512\" }\n    },\n    false,\n    [\"sign\"]\n  )\n\n  const signature = await crypto.subtle.sign(\n    \"HMAC\",\n    key,\n    messageEncoded\n  )\n\n  const buffer = new Uint8Array(signature)\n  return Array.prototype.map.call(buffer, x => x.toString(16).padStart(2, \"0\")).join(\"\")\n}\n","\n/**\n * @group Utils\n */\nexport function convertMillimeterToPixel(mm: number): number\n{\n  return mm * 96 / 25.4\n}\n\n/**\n * @group Utils\n */\nexport function convertPixelToMillimeter(px: number): number\n{\n  return px / 96 * 25.4\n}\n","\n/**\n * @group Utils\n */\nexport function createUUID(): string\n{\n  let dt = Date.now()\n  const uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c)\n  {\n    const r = (dt + Math.random() * 16) % 16 | 0\n    dt = Math.floor(dt / 16)\n    return (c == \"x\" ? r : (r & 0x3 | 0x8)).toString(16)\n  })\n  return uuid\n}\n","\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const mergeDeep = (target: any, ...sources: any[]): any =>\n{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const isObject = (item: any) =>\n  {\n    return (item && typeof item === \"object\" && !Array.isArray(item))\n  }\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, { [key]: {} })\n        }\n        mergeDeep(target[key], source[key])\n      }\n      else if (Array.isArray(target[key]) && Array.isArray(source[key])) {\n        target[key].concat(source[key])\n      }\n      else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n  else if (Array.isArray(target) && Array.isArray(source)) {\n    target = target.concat(source)\n  }\n  else if (source) {\n    target = source\n  }\n\n  return mergeDeep(target, ...sources)\n}\n","import { TPoint, TPointer } from \"../primitive\"\n\n/**\n * @group Utils\n */\nexport function computeLinksPointers(point: TPointer, angle: number, width: number): TPoint[]\n{\n  const radius = point.p * width\n  return [\n    {\n      x: (point.x - (Math.sin(angle) * radius)),\n      y: (point.y + (Math.cos(angle) * radius))\n    },\n    {\n      x: (point.x + (Math.sin(angle) * radius)),\n      y: (point.y - (Math.cos(angle) * radius))\n    }\n  ]\n}\n\n/**\n * @group Utils\n */\nexport function computeMiddlePointer(point1: TPointer, point2: TPointer): TPointer\n{\n  return {\n    x: ((point2.x + point1.x) / 2),\n    y: ((point2.y + point1.y) / 2),\n    p: ((point2.p + point1.p) / 2),\n    t: ((point2.t + point1.t) / 2)\n  }\n}\n","\n/**\n * @group Configuration\n */\nexport type TListenerConfiguration = {\n  capture: boolean\n  passive: boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultListenerConfiguration: TListenerConfiguration = {\n  capture: false,\n  passive: true\n}\n\n\n/**\n * @group Configuration\n */\nexport type TGrabberConfiguration = {\n  listenerOptions: TListenerConfiguration\n  xyFloatPrecision: number\n  timestampFloatPrecision: number\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultGrabberConfiguration: TGrabberConfiguration = {\n  listenerOptions: DefaultListenerConfiguration,\n  xyFloatPrecision: 0,\n  timestampFloatPrecision: 0\n}\n","\n/**\n * @group Configuration\n */\nexport type TEraserConfiguration = {\n  \"erase-precisely\": boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultEraserConfiguration: TEraserConfiguration = {\n  \"erase-precisely\": false\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\nimport { TTextConfConfiguration } from \"./TextConfiguration\"\n\n/**\n * @group Configuration\n */\nexport type TDiagramConvertConfiguration = {\n  edge?: boolean\n  node?: boolean\n  text?: boolean\n  \"match-text-size\"?: boolean\n}\n\n/**\n * @group Configuration\n */\nexport type TDiagramConfiguration = {\n  mimeTypes: (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n  \"enable-sub-blocks\"?: boolean\n  text?: TTextConfConfiguration\n  convert?: TDiagramConvertConfiguration\n  \"session-time\"?: number\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultDiagramConvertConfiguration: TDiagramConvertConfiguration = {\n  \"match-text-size\": true\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultDiagramConfiguration: TDiagramConfiguration = {\n  convert: DefaultDiagramConvertConfiguration,\n  eraser: DefaultEraserConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\n/**\n * @group Configuration\n */\nexport type TImageViewportConfiguration = {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\n/**\n * @group Configuration\n */\nexport type TImageConfiguration = {\n  guides: boolean\n  viewport: TImageViewportConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport type TJiixConfiguration = {\n  \"bounding-box\"?: boolean\n  strokes: boolean\n  text?: {\n    chars: boolean\n    words: boolean\n  }\n  style?: boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultJiixConfiguration: TJiixConfiguration = {\n  \"bounding-box\": false,\n  strokes: false,\n  text: {\n    chars: false,\n    words: true\n  },\n}\n\n/**\n * @group Configuration\n */\nexport type TMathMLFlavor = {\n  name: string\n}\n\n/**\n * @group Configuration\n */\nexport type TMathMLExport = {\n  flavor: TMathMLFlavor\n}\n\n/**\n * @group Configuration\n */\nexport type TExportConfiguration = {\n  \"image-resolution\"?: number\n  image?: TImageConfiguration\n  jiix?: TJiixConfiguration\n  mathml?: TMathMLExport\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultExportConfiguration: TExportConfiguration = {\n  \"image-resolution\": 300,\n  jiix: DefaultJiixConfiguration\n}\n","\n/**\n * @group Configuration\n */\nexport type TMarginConfiguration = {\n  bottom: number\n  left: number\n  right: number\n  top: number\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultMarginConfiguration: TMarginConfiguration = {\n  top: 20,\n  left: 10,\n  right: 10,\n  bottom: 10\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Configuration\n */\nexport type TRoundingMode = \"half up\" | \"truncate\"\n\n/**\n * @group Configuration\n */\nexport type TAngleUnit = \"deg\" | \"rad\"\n\n/**\n * @group Configuration\n */\nexport type TSolverOptions = \"algebraic\" | \"numeric\"\n\n/**\n * @group Configuration\n */\nexport type TSolverConfiguration = {\n  enable?: boolean\n  \"fractional-part-digits\"?: number\n  \"decimal-separator\"?: string\n  \"rounding-mode\"?: TRoundingMode\n  \"angle-unit\"?: TAngleUnit\n  options?: TSolverOptions\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultSolverConfiguration: TSolverConfiguration = {\n  enable: true,\n  \"fractional-part-digits\": 3,\n  \"decimal-separator\": \".\",\n  \"rounding-mode\": \"half up\",\n  \"angle-unit\": \"deg\"\n}\n\n/**\n * @group Configuration\n */\nexport type TUndoRedoMode = \"stroke\" | \"session\"\n\n/**\n * @group Configuration\n */\nexport type TMathUndoRedoConfiguration = {\n  mode: TUndoRedoMode\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultMathUndoRedoConfiguration: TMathUndoRedoConfiguration = {\n  mode: \"stroke\"\n}\n\n/**\n * @group Configuration\n */\nexport type TMathConfiguration = {\n  mimeTypes: (\"application/x-latex\" | \"application/mathml+xml\" | \"application/vnd.myscript.jiix\")[]\n  solver?: TSolverConfiguration\n  margin: TMarginConfiguration\n  \"undo-redo\"?: TMathUndoRedoConfiguration\n  customGrammar?: string\n  customGrammarId?: string\n  customGrammarContent?: string\n  eraser?: TEraserConfiguration\n  \"session-time\"?: number\n  \"recognition-timeout\"?: number\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultMathConfiguration: TMathConfiguration = {\n  solver: DefaultSolverConfiguration,\n  margin: DefaultMarginConfiguration,\n  eraser: DefaultEraserConfiguration,\n  \"undo-redo\": DefaultMathUndoRedoConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\nimport { TTextConfConfiguration } from \"./TextConfiguration\"\n\n/**\n * @group Configuration\n */\nexport type TRawContentRecognitionConfiguration = {\n  text: boolean\n  shape: boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultRawContentRecognitionConfiguration: TRawContentRecognitionConfiguration = {\n  text: true,\n  shape: true\n}\n\n/**\n * @group Configuration\n */\nexport type TRawContentConfiguration = {\n  text?: TTextConfConfiguration\n  \"session-time\"?: number\n  recognition?: TRawContentRecognitionConfiguration\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultRawContentConfiguration: TRawContentConfiguration = {\n  recognition: DefaultRawContentRecognitionConfiguration,\n  eraser: DefaultEraserConfiguration\n}\n","\n/**\n * @group Configuration\n */\nexport type TRecognitionRendererDebugConfiguration = {\n  \"draw-text-boxes\": boolean\n  \"draw-image-boxes\": boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultDebugConfiguration: TRecognitionRendererDebugConfiguration = {\n  \"draw-text-boxes\": false,\n  \"draw-image-boxes\": false\n}\n\n/**\n * @group Configuration\n */\nexport type TRecognitionRendererConfiguration = {\n  debug: TRecognitionRendererDebugConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultRecognitionRendererConfiguration: TRecognitionRendererConfiguration = {\n  debug: DefaultDebugConfiguration\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Configuration\n */\nexport type TTextGuidesConfiguration = {\n  enable: boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultTextGuidesConfiguration: TTextGuidesConfiguration = {\n  enable: true\n}\n\n/**\n * @group Configuration\n */\nexport type TTextConfConfiguration = {\n  customResources?: string[]\n  customLexicon?: string[]\n  addLKText?: boolean\n}\n\n/**\n * @group Configuration\n */\nexport type TTextConfiguration = {\n  text?: boolean\n  mimeTypes: (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n  margin: TMarginConfiguration\n  guides?: TTextGuidesConfiguration\n  configuration?: TTextConfConfiguration\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultTextConfiguration: TTextConfiguration = {\n  guides: DefaultTextGuidesConfiguration,\n  eraser: DefaultEraserConfiguration,\n  margin: DefaultMarginConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","export type TConvertionConfiguration = {\n    force?: {\n        \"on-stylesheet-change\": boolean\n    }\n}\n\nexport const DefaultConvertionConfiguration: TConvertionConfiguration = {\n    force: {\n        \"on-stylesheet-change\": false\n    }\n}","import {\n  TDiagramConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRawContentConfiguration,\n  TRecognitionRendererConfiguration,\n  TTextConfiguration,\n  TConvertionConfiguration,\n  DefaultDiagramConfiguration,\n  DefaultExportConfiguration,\n  DefaultRecognitionRendererConfiguration,\n  DefaultRawContentConfiguration,\n  DefaultMathConfiguration,\n  DefaultTextConfiguration,\n  DefaultConvertionConfiguration,\n} from \"./recognition\"\n\n/**\n * @group Configuration\n */\nexport type TRecognitionType = \"TEXT\" | \"MATH\" | \"DIAGRAM\" | \"Raw Content\"\n\n/**\n * @group Configuration\n */\nexport type TConverstionState = \"DIGITAL_EDIT\" | \"HANDWRITING\"\n\n/**\n * @group Configuration\n */\nexport type TRecognitionConfiguration = {\n  type: TRecognitionType\n  alwaysConnected: boolean\n  lang: string\n  math: TMathConfiguration\n  text: TTextConfiguration\n  diagram: TDiagramConfiguration\n  renderer: TRecognitionRendererConfiguration\n  export: TExportConfiguration\n  \"raw-content\": TRawContentConfiguration\n  gesture: { enable: boolean }\n  convert: TConvertionConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultRecognitionConfiguration: TRecognitionConfiguration = {\n  diagram: DefaultDiagramConfiguration,\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  \"raw-content\": DefaultRawContentConfiguration,\n  renderer: DefaultRecognitionRendererConfiguration,\n  text: DefaultTextConfiguration,\n  type: \"TEXT\",\n  alwaysConnected: true,\n  lang: \"en_US\",\n  gesture: {\n    enable: true\n  },\n  convert: DefaultConvertionConfiguration,\n}\n","\n/**\n * @group Configuration\n */\nexport type TGuidesConfiguration = {\n  enable: boolean,\n  gap: number\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultGuidesConfiguration: TGuidesConfiguration = {\n  enable: true,\n  gap: 50\n}\n\n/**\n * @group Configuration\n */\nexport type TSmartGuidesConfiguration = {\n  enable: boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultSmartGuidesConfiguration: TSmartGuidesConfiguration = {\n  enable: true,\n}\n\n/**\n * @group Configuration\n */\nexport type TRenderingConfiguration = {\n  minHeight: number\n  minWidth: number\n  smartGuide: TSmartGuidesConfiguration\n  guides: TGuidesConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultRenderingConfiguration: TRenderingConfiguration = {\n  guides: DefaultGuidesConfiguration,\n  smartGuide: DefaultSmartGuidesConfiguration,\n  minHeight: 100,\n  minWidth: 100,\n}\n","\n/**\n * @group Configuration\n */\nexport type TProtocol = \"WEBSOCKET\" | \"REST\"\n\n/**\n * @group Configuration\n */\nexport type TSchene = \"https\" | \"http\"\n\n/**\n * @group Configuration\n */\nexport type TServerConfiguration = {\n  protocol: TProtocol,\n  scheme: TSchene,\n  host: string\n  applicationKey: string\n  hmacKey: string\n  version: string\n  useWindowLocation?: boolean\n  websocket: {\n    pingEnabled: boolean\n    pingDelay: number\n    maxPingLostCount: number\n    autoReconnect: boolean\n    maxRetryCount: number\n    fileChunkSize: number\n  }\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultServerConfiguration: TServerConfiguration = {\n  protocol: \"WEBSOCKET\",\n  scheme: \"https\",\n  host: \"cloud.myscript.com\",\n  applicationKey: \"\",\n  hmacKey: \"\",\n  version: \"2.3.0\",\n  useWindowLocation: false,\n  websocket: {\n    pingEnabled: true,\n    pingDelay: 30000,\n    maxPingLostCount: 10,\n    autoReconnect: true,\n    maxRetryCount: 2,\n    fileChunkSize: 300000\n  }\n}\n","/**\n * @group Configuration\n * @remarks\n * Configure when the action is triggered.\n *\n * POINTER_UP :   Action is triggered on every PenUP.\n *                This is the recommended mode for CDK V3 WebSocket recognitions.\n *\n * QUIET_PERIOD : Action is triggered after a quiet period in milli-seconds on every pointer up.\n *                The value is set to 1000 for example recognition will be triggered when the user stops writing for 1 seconds.\n *                This is the recommended mode for all REST discoveries.\n *\n * DEMAND :       Action is triggered on external demande\n */\n export type TTriggerConfiguration = {\n  exportContent: \"QUIET_PERIOD\" | \"POINTER_UP\" | \"DEMAND\"\n  exportContentDelay: number\n  resizeTriggerDelay: number\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultTriggerConfiguration: TTriggerConfiguration = {\n  exportContent: \"POINTER_UP\",\n  exportContentDelay: 1000,\n  resizeTriggerDelay: 100\n}\n","\n/**\n * @group Configuration\n */\nexport type TUndoRedoConfiguration = {\n  maxStackSize: number\n}\n\n/**\n * @group Event\n */\nexport const DefaultUndoRedoConfiguration: TUndoRedoConfiguration = {\n  maxStackSize: 100\n}\n","\nimport { LoggerClass } from \"../Constants\"\nimport { LoggerManager } from \"../logger\"\nimport { PartialDeep, mergeDeep } from \"../utils\"\nimport { DefaultGrabberConfiguration, TGrabberConfiguration } from \"./GrabberConfiguration\"\nimport { DefaultRecognitionConfiguration, TRecognitionConfiguration } from \"./RecognitionConfiguration\"\nimport { DefaultRenderingConfiguration, TRenderingConfiguration } from \"./RenderingConfiguration\"\nimport { DefaultServerConfiguration, TServerConfiguration } from \"./ServerConfiguration\"\nimport { DefaultTriggerConfiguration, TTriggerConfiguration } from \"./TriggerConfiguration\"\nimport { DefaultUndoRedoConfiguration, TUndoRedoConfiguration } from \"./UndoRedoConfiguration\"\n\n/**\n * @group Configuration\n */\nexport type TConfiguration = {\n  server: TServerConfiguration\n  recognition: TRecognitionConfiguration\n  grabber: TGrabberConfiguration\n  rendering: TRenderingConfiguration\n  triggers: TTriggerConfiguration\n  \"undo-redo\": TUndoRedoConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultConfiguration: TConfiguration = {\n  server: DefaultServerConfiguration,\n  recognition: DefaultRecognitionConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  rendering: DefaultRenderingConfiguration,\n  triggers: DefaultTriggerConfiguration,\n  \"undo-redo\": DefaultUndoRedoConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport class Configuration implements TConfiguration\n{\n  #logger = LoggerManager.getLogger(LoggerClass.CONFIGURATION)\n\n  grabber: TGrabberConfiguration\n  recognition: TRecognitionConfiguration\n  rendering: TRenderingConfiguration\n  server: TServerConfiguration\n  triggers: TTriggerConfiguration\n  \"undo-redo\": TUndoRedoConfiguration\n\n  constructor(configuration?: PartialDeep<TConfiguration>)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.grabber = JSON.parse(JSON.stringify(DefaultConfiguration.grabber))\n    this.recognition = JSON.parse(JSON.stringify(DefaultConfiguration.recognition))\n    this.rendering = JSON.parse(JSON.stringify(DefaultConfiguration.rendering))\n    this.server = JSON.parse(JSON.stringify(DefaultConfiguration.server))\n    this.triggers = JSON.parse(JSON.stringify(DefaultConfiguration.triggers))\n\n    this.overrideDefaultConfiguration(configuration)\n  }\n\n  overrideDefaultConfiguration(configuration?: PartialDeep<TConfiguration>): void\n  {\n    this.#logger.info(\"overrideDefaultConfiguration\", { configuration })\n    const defaultConf = JSON.parse(JSON.stringify(DefaultConfiguration))\n    this.grabber = mergeDeep({}, defaultConf.grabber, configuration?.grabber)\n    this.recognition = mergeDeep({}, defaultConf.recognition, configuration?.recognition)\n    this.rendering = mergeDeep({}, defaultConf.rendering, configuration?.rendering)\n    this.server = mergeDeep({}, defaultConf.server, configuration?.server)\n    this.triggers = mergeDeep({}, defaultConf.triggers, configuration?.triggers)\n    this[\"undo-redo\"] = mergeDeep({}, defaultConf[\"undo-redo\"], configuration?.[\"undo-redo\"])\n\n    this.recognition.text.mimeTypes = configuration?.recognition?.text?.mimeTypes || defaultConf.recognition.text.mimeTypes\n    this.recognition.math.mimeTypes = configuration?.recognition?.math?.mimeTypes || defaultConf.recognition.math.mimeTypes\n    this.recognition.diagram.mimeTypes = configuration?.recognition?.diagram?.mimeTypes || defaultConf.recognition.diagram.mimeTypes\n\n    if (this.server?.useWindowLocation) {\n      this.server.scheme = window.location.protocol.indexOf(\"s\") > -1 ? \"https\" : \"http\"\n      this.server.host = window.location.host\n    }\n\n    if (\n      this.server.protocol === \"REST\" &&\n      this.triggers.exportContent === \"POINTER_UP\"\n    ) {\n      this.triggers.exportContent = \"QUIET_PERIOD\"\n      this.triggers.exportContentDelay = Math.max(this.triggers.exportContentDelay, 50)\n    }\n\n    if (\n      this.server.protocol === \"WEBSOCKET\" &&\n      this.recognition.type === \"TEXT\"\n    ) {\n      if (\n        this.rendering.smartGuide.enable &&\n        !this.recognition.text.mimeTypes.includes(\"application/vnd.myscript.jiix\")\n      ) {\n        // mimeType required for smartGuide\n        this.recognition.text.mimeTypes.push(\"application/vnd.myscript.jiix\")\n      }\n    } else {\n      // smartGuide enable only on websocket text\n      this.rendering.smartGuide.enable = false\n    }\n    this.#logger.debug(\"overrideDefaultConfiguration\", { configuration: this })\n  }\n}\n","import { LoggerClass, LoggerLevel } from \"../Constants\"\n\n/**\n * @group Configuration\n */\nexport type TLoggerConfiguration = {\n  [key in keyof typeof LoggerClass]: LoggerLevel\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultLoggerConfiguration: TLoggerConfiguration = {\n  [LoggerClass.EDITOR]: LoggerLevel.ERROR,\n  [LoggerClass.BEHAVIORS]: LoggerLevel.ERROR,\n  [LoggerClass.RECOGNIZER]: LoggerLevel.ERROR,\n  [LoggerClass.GRABBER]: LoggerLevel.ERROR,\n  [LoggerClass.RENDERER]: LoggerLevel.ERROR,\n  [LoggerClass.CONFIGURATION]: LoggerLevel.ERROR,\n  [LoggerClass.PUBLIC_EVENT]: LoggerLevel.ERROR,\n  [LoggerClass.INTERNAL_EVENT]: LoggerLevel.ERROR,\n  [LoggerClass.MODEL]: LoggerLevel.ERROR,\n  [LoggerClass.STROKE]: LoggerLevel.ERROR,\n  [LoggerClass.SMARTGUIDE]: LoggerLevel.ERROR,\n  [LoggerClass.STYLE]: LoggerLevel.ERROR,\n  [LoggerClass.UNDO_REDO]: LoggerLevel.ERROR\n}\n","/**\n * @group Constants\n * @remarks List all errors generated by the backend with their descriptions\n */\nexport const Error = {\n  NO_ACTIVITY: \"Session closed due to no activity.\",\n  WRONG_CREDENTIALS: \"Application credentials are invalid. Please check or regenerate your application key and hmackey.\",\n  TOO_OLD: \"Session is too old. Max Session Duration Reached.\",\n  UNKNOW: \"An unknown error has occurred.\",\n  ABNORMAL_CLOSURE: \"MyScript recognition server is not reachable.\",\n  CANT_ESTABLISH: \"Unable to establish a connection to MyScript recognition server. Check the host and your connectivity.\",\n  GOING_AWAY: \"MyScript recognition server is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.\",\n  PROTOCOL_ERROR: \"MyScript recognition server terminated the connection due to a protocol error.\",\n  UNSUPPORTED_DATA: \"MyScript recognition server terminated the connection because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)\",\n  INVALID_FRAME_PAULOAD: \"MyScript recognition server terminated the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).\",\n  POLICY_VIOLATION: \"MyScript recognition server terminated the connection because it received a message that violates its policy.\",\n  MESSAGE_TOO_BIG: \"MyScript recognition server terminated the connection because a data frame was received that is too large.\",\n  INTERNAL_ERROR: \"MyScript recognition server terminated the connection because it encountered an unexpected condition that prevented it from fulfilling the request.\",\n  SERVICE_RESTART: \"MyScript recognition server terminated the connection because it is restarting.\",\n  TRY_AGAIN: \"MyScript recognition server terminated the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.\",\n  BAD_GATEWAY: \"MyScript recognition server was acting as a gateway or proxy and received an invalid response from the upstream server.\",\n  TLS_HANDSHAKE: \"MyScript recognition server connection was closed due to a failure to perform a TLS handshake\"\n} as const\n\n/**\n * @group Constants\n * @group Event\n * @description Lists all events that can be listened to on the editor or DOM element\n */\nexport const EventType = {\n  /**\n   * @description event emitted when history has changed i.e. the context of undo-redo\n   */\n  CHANGED: \"changed\",\n  /**\n   * @description event emitted when clearing is complete\n   */\n  CLEARED: \"cleared\",\n  /**\n   * @description event emitted after the conversion is complete\n   */\n  CONVERTED: \"converted\",\n  /**\n   * @description event emitted when the editor encounters an error\n   */\n  ERROR: \"error\",\n  /**\n   * @description event emitted on click on pointer events\n   */\n  POINTEREVENTS: \"pointer_events\",\n  /**\n   * @description event emitted after the end of the export\n   */\n  EXPORTED: \"exported\",\n  /**\n   * @description event emitted after the end of the import\n   */\n  IMPORTED: \"imported\",\n  /**\n   * @description event emitted when the server is idle after a job\n   */\n  IDLE: \"idle\",\n  /**\n   * @description event emitted after full editor initialization\n   */\n  LOADED: \"loaded\",\n} as const\n\n/**\n * @group Constants\n * @group Event\n * @description Lists all internal library events\n */\nexport const InternalEventType = {\n  SVG_PATCH: \"internal_svg_patch\",\n  EXPORTED: \"internal_exported\",\n  CLEAR_MESSAGE: \"internal_clear_message\",\n  ERROR: \"internal_error\",\n  NOTIF: \"internal_notif\",\n  IMPORT_JIIX: \"internal_import_jiix\",\n  CONVERT: \"internal_convert\",\n  CLEAR: \"internal_clear\",\n  CONTEXT_CHANGE: \"internal_context_change\",\n  IDLE: \"internal_idle\",\n  WS_CLOSED: \"internal_websocket_closed\"\n} as const\n\n/**\n * @group Editor\n * @group Constants\n * @group Model/Export\n * @description List all supported MIME types for export. Please note, the MIME types supported depend on the recognition type configured\n */\nexport const enum ExportType {\n  JIIX = \"application/vnd.myscript.jiix\",\n  TEXT = \"text/plain\",\n  LATEX = \"application/x-latex\",\n  MATHML = \"application/mathml+xml\",\n  SVG = \"image/svg+xml\",\n  OFFICE_DOCUMENT = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n}\n\n/**\n * @group Constants\n * @group Editor\n * @description List the possibilities of interactions\n */\nexport const enum Intention\n{\n  Write = \"write\",\n  Erase = \"erase\",\n}\n\n/**\n * @group Constants\n * @group Logger\n */\nexport const enum LoggerLevel\n{\n  DEBUG = \"1\",\n  INFO = \"2\",\n  WARN = \"3\",\n  ERROR = \"4\"\n}\n\n/**\n * @group Constants\n * @group Logger\n */\nexport const enum LoggerClass\n{\n  EDITOR = \"EDITOR\",\n  RECOGNIZER = \"RECOGNIZER\",\n  GRABBER = \"GRABBER\",\n  BEHAVIORS = \"BEHAVIORS\",\n  CONFIGURATION = \"CONFIGURATION\",\n  PUBLIC_EVENT = \"PUBLIC_EVENT\",\n  MODEL = \"MODEL\",\n  RENDERER = \"RENDERER\",\n  SMARTGUIDE = \"SMARTGUIDE\",\n  STYLE = \"STYLE\",\n  UNDO_REDO = \"UNDO_REDO\",\n  STROKE = \"STROKE\",\n  INTERNAL_EVENT = \"INTERNAL_EVENT\"\n}\n","import { InternalEventType, LoggerClass } from \"../Constants\"\nimport { TConverstionState } from \"../configuration\"\nimport { LoggerManager } from \"../logger\"\nimport { TExport, TJIIXExport } from \"../model\"\nimport { TWSMessageEventSVGPatch } from \"../recognizer\"\nimport { TUndoRedoContext } from \"../undo-redo\"\n\n/**\n * @group Event\n */\nexport class InternalEvent extends EventTarget\n{\n  static #instance: InternalEvent\n  #abortController: AbortController\n  #logger = LoggerManager.getLogger(LoggerClass.INTERNAL_EVENT)\n\n  private constructor()\n  {\n    super()\n    this.#logger.info(\"constructor\")\n    this.#abortController = new AbortController()\n  }\n\n  public static getInstance(): InternalEvent\n  {\n    if (!InternalEvent.#instance) {\n      InternalEvent.#instance = new InternalEvent()\n    }\n\n    return InternalEvent.#instance\n  }\n\n  removeAllListeners(): void\n  {\n    this.#logger.info(\"removeAllListeners\")\n    this.#abortController.abort()\n    this.#abortController = new AbortController()\n  }\n\n  #emit(type: string, data?: unknown): void\n  {\n    this.dispatchEvent(new CustomEvent(type, Object.assign({ bubbles: true, composed: true }, data ? { detail: data } : undefined)))\n  }\n\n  emitSVGPatch(patchChange: TWSMessageEventSVGPatch): void\n  {\n    this.#logger.info(\"emitSVGPatch\", { patchChange })\n    this.#emit(InternalEventType.SVG_PATCH, patchChange)\n  }\n  addSVGPatchListener(callback: (contentChange: TWSMessageEventSVGPatch) => void): void\n  {\n    this.#logger.info(\"addSVGPatchListener\", { callback })\n    this.addEventListener(InternalEventType.SVG_PATCH, (evt: unknown) => callback(((evt as CustomEvent).detail as TWSMessageEventSVGPatch)), { signal: this.#abortController.signal })\n  }\n\n  emitExported(exports: TExport): void\n  {\n    this.#logger.info(\"emitExported\", { exports })\n    this.#emit(InternalEventType.EXPORTED, exports)\n  }\n  addExportedListener(callback: (exports: TExport) => void): void\n  {\n    this.#logger.info(\"addExportedListener\", { callback })\n    this.addEventListener(InternalEventType.EXPORTED, (evt: unknown) => callback(((evt as CustomEvent).detail as TExport)), { signal: this.#abortController.signal })\n  }\n\n  emitClearMessage(): void\n  {\n    this.#logger.info(\"emitClearMessage\")\n    this.#emit(InternalEventType.CLEAR_MESSAGE)\n  }\n  addClearMessageListener(callback: () => void): void\n  {\n    this.#logger.info(\"addClearMessageListener\", { callback })\n    this.addEventListener(InternalEventType.CLEAR_MESSAGE, () => callback(), { signal: this.#abortController.signal })\n  }\n\n  emitError(err: Error): void\n  {\n    this.#logger.info(\"emitError\", { err })\n    this.#emit(InternalEventType.ERROR, err)\n  }\n\n  addErrorListener(callback: (err: Error) => void): void\n  {\n    this.#logger.info(\"addErrorListener\", { callback })\n    this.addEventListener(InternalEventType.ERROR, (evt: unknown) => callback(((evt as CustomEvent).detail as Error)), { signal: this.#abortController.signal })\n  }\n\n  emitWSClosed(): void\n  {\n    this.#logger.info(\"emitWSClosed\")\n    this.#emit(InternalEventType.WS_CLOSED)\n  }\n  addWSClosedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addWSClosedListener\", { callback })\n    this.addEventListener(InternalEventType.WS_CLOSED, () => callback(), { signal: this.#abortController.signal })\n  }\n\n  emitNotif(notif: { message: string, timeout?: number }): void\n  {\n    this.#logger.info(\"emitWNotif\", { notif })\n    this.#emit(InternalEventType.NOTIF, notif)\n  }\n  addNotifListener(callback: (notif: { message: string, timeout?: number }) => void): void\n  {\n    this.#logger.info(\"addNotifListener\", { callback })\n    this.addEventListener(InternalEventType.NOTIF, (evt: unknown) => callback(((evt as CustomEvent).detail as { message: string, timeout?: number })), { signal: this.#abortController.signal })\n  }\n\n  emitImportJIIX(jiix: TJIIXExport): void\n  {\n    this.#logger.info(\"emitImportJIIX\", { jiix })\n    this.#emit(InternalEventType.IMPORT_JIIX, jiix)\n  }\n  addImportJIIXListener(callback: (jiix: TJIIXExport) => void): void\n  {\n    this.#logger.info(\"addImportJIIXListener\", { callback })\n    this.addEventListener(InternalEventType.IMPORT_JIIX, (evt: unknown) => callback(((evt as CustomEvent).detail as TJIIXExport)), { signal: this.#abortController.signal })\n  }\n\n  emitConvert(conversionState: TConverstionState = \"DIGITAL_EDIT\"): void\n  {\n    this.#logger.info(\"emitConvert\", { conversionState })\n    this.#emit(InternalEventType.CONVERT, conversionState)\n  }\n  addConvertListener(callback: (params?: { conversionState?: TConverstionState, mimeTypes?: string[] }) => void): void\n  {\n    this.#logger.info(\"addConvertListener\", { callback })\n    this.addEventListener(InternalEventType.CONVERT, (evt: unknown) => callback(((evt as CustomEvent).detail as { conversionState?: TConverstionState, mimeTypes?: string[] })), { signal: this.#abortController.signal })\n  }\n\n  emitClear(): void\n  {\n    this.#logger.info(\"emitClear\")\n    this.#emit(InternalEventType.CLEAR)\n  }\n  addClearListener(callback: () => void): void\n  {\n    this.#logger.info(\"addClearListener\", { callback })\n    this.addEventListener(InternalEventType.CLEAR, () => callback(), { signal: this.#abortController.signal })\n  }\n\n  emitContextChange(context: TUndoRedoContext): void\n  {\n    this.#logger.info(\"emitContextChange\", { context })\n    this.#emit(InternalEventType.CONTEXT_CHANGE, context)\n  }\n  addContextChangeListener(callback: (context: TUndoRedoContext) => void): void\n  {\n    this.#logger.info(\"addContextChangeListener\", { callback })\n    this.addEventListener(InternalEventType.CONTEXT_CHANGE, (evt: unknown) => callback(((evt as CustomEvent).detail as TUndoRedoContext)), { signal: this.#abortController.signal })\n  }\n\n  emitIdle(idle: boolean): void\n  {\n    this.#logger.info(\"emitIdle\", { idle })\n    this.#emit(InternalEventType.IDLE, idle)\n  }\n  addIdleListener(callback: (idle: boolean) => void): void\n  {\n    this.#logger.info(\"addIdleListener\", { callback })\n    this.addEventListener(InternalEventType.IDLE, (evt: unknown) => callback(((evt as CustomEvent).detail as boolean)), { signal: this.#abortController.signal })\n  }\n\n}\n","import { EventType, LoggerClass } from \"../Constants\"\nimport { LoggerManager } from \"../logger\"\nimport { IModel, TExport } from \"../model\"\nimport { TUndoRedoContext } from \"../undo-redo\"\n\n/**\n * @group Event\n */\nexport class PublicEvent extends EventTarget\n{\n  static #instance: PublicEvent\n  #element?: HTMLElement\n  #logger = LoggerManager.getLogger(LoggerClass.PUBLIC_EVENT)\n\n  private constructor()\n  {\n    super()\n  }\n\n  public static getInstance(): PublicEvent\n  {\n    if (!PublicEvent.#instance) {\n      PublicEvent.#instance = new PublicEvent()\n    }\n\n    return PublicEvent.#instance\n  }\n\n  setElement(el: HTMLElement)\n  {\n    this.#logger.info(\"setElement\", { el })\n    this.#element = el\n  }\n\n  #emit(type: string, data?: unknown): void\n  {\n    const evt = new CustomEvent(type, Object.assign({ bubbles: true, composed: true }, data ? { detail: data } : undefined))\n    this.dispatchEvent(evt)\n    this.#element?.dispatchEvent(evt)\n  }\n\n  emitLoaded(): void\n  {\n    this.#logger.info(\"emitLoaded\")\n    this.#emit(EventType.LOADED)\n  }\n\n  emitExported(exports: TExport): void\n  {\n    this.#logger.info(\"emitExported\", { exports })\n    this.#emit(EventType.EXPORTED, exports)\n  }\n\n  emitChanged(undoRedoContext: TUndoRedoContext): void\n  {\n    this.#logger.info(\"emitChanged\", { undoRedoContext })\n    this.#emit(EventType.CHANGED, {\n      ...undoRedoContext,\n      canClear: !undoRedoContext.empty\n    })\n  }\n\n  emitIdle(idle: boolean): void\n  {\n    this.#logger.info(\"emitIdle\", { idle })\n    this.#emit(EventType.IDLE, idle)\n  }\n\n  emitCleared(model?: IModel): void\n  {\n    this.#logger.info(\"emitCleared\", { model })\n    this.#emit(EventType.CLEARED, model)\n  }\n\n  emitConverted(exports: TExport): void\n  {\n    this.#logger.info(\"emitConverted\", { exports })\n    this.#emit(EventType.CONVERTED, exports)\n  }\n\n  emitImported(exports: TExport): void\n  {\n    this.#logger.info(\"emitImported\", { exports })\n    this.#emit(EventType.IMPORTED, exports)\n  }\n}\n","import { LoggerClass } from \"../Constants\"\nimport { TGrabberConfiguration } from \"../configuration\"\nimport { LoggerManager } from \"../logger\"\nimport { TPointer } from \"../primitive\"\nimport { IGrabber } from \"./IGrabber\"\n\n/**\n * @group Grabber\n */\nexport class PointerEventGrabber implements IGrabber\n{\n  protected configuration: TGrabberConfiguration\n\n  protected domElement!: HTMLElement\n\n  protected activePointerId?: number\n\n  protected prevent = (e: Event) => e.preventDefault()\n  #logger = LoggerManager.getLogger(LoggerClass.GRABBER)\n\n  onPointerDown!: (evt: PointerEvent, point: TPointer) => void\n  onPointerMove!: (evt: PointerEvent, point: TPointer) => void\n  onPointerUp!: (evt: PointerEvent, point: TPointer) => void\n\n  constructor(configuration: TGrabberConfiguration)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n  }\n\n  protected roundFloat(oneFloat: number, requestedFloatPrecision: number): number\n  {\n    if (requestedFloatPrecision >= 0) {\n      const floatPrecision: number = Math.pow(10, requestedFloatPrecision)\n      return Math.round(oneFloat / floatPrecision) * floatPrecision\n    }\n    this.#logger.debug(\"roundFloat\", { oneFloat, requestedFloatPrecision })\n    return oneFloat\n  }\n\n  protected extractPoint(event: MouseEvent | TouchEvent): TPointer\n  {\n    let clientX: number, clientY: number\n    if (\"changedTouches\" in event) {\n      ({ clientX, clientY } = event.changedTouches[0])\n    } else {\n      ({ clientX, clientY } = event)\n    }\n    const rect: DOMRect = this.domElement.getBoundingClientRect()\n    const pointer = {\n      x: this.roundFloat(clientX - rect.left - this.domElement.clientLeft + this.domElement.scrollLeft, this.configuration.xyFloatPrecision),\n      y: this.roundFloat(clientY - rect.top - this.domElement.clientTop + this.domElement.scrollTop, this.configuration.xyFloatPrecision),\n      t: this.roundFloat(Date.now(), this.configuration.timestampFloatPrecision),\n      p: (event as PointerEvent).pressure || 1,\n    }\n    this.#logger.debug(\"extractPoint\", { event, pointer })\n    return pointer\n  }\n\n  protected pointerDownHandler = (evt: PointerEvent) =>\n  {\n    this.#logger.info(\"pointerDown\", { evt })\n\n    // exit if not a left click or multi-touch\n    if (evt.button !== 0 || evt.buttons !== 1) {\n      return\n    }\n\n    this.activePointerId = evt.pointerId\n\n    if (this.onPointerDown) {\n      const point = this.extractPoint(evt)\n      this.onPointerDown(evt, point)\n    }\n  }\n\n  protected pointerMoveHandler = (evt: PointerEvent) =>\n  {\n    this.#logger.info(\"pointerMove\", { evt })\n    if (this.activePointerId != undefined && this.activePointerId === evt.pointerId) {\n      if ((evt.target as HTMLElement).classList.contains(\"smartguide\")) {\n        this.pointerUpHandler(evt)\n        return\n      }\n      if (this.onPointerMove) {\n        const point = this.extractPoint(evt)\n        this.onPointerMove(evt, point)\n      }\n    }\n  }\n\n  protected pointerUpHandler = (evt: PointerEvent) =>\n  {\n    this.#logger.info(\"pointerUp\", { evt })\n    if (this.activePointerId != undefined && this.activePointerId === evt.pointerId) {\n      this.activePointerId = undefined\n      evt.stopPropagation()\n      if (this.onPointerUp) {\n        const point = this.extractPoint(evt)\n        this.onPointerUp(evt, point)\n      }\n    }\n  }\n\n  private pointerOutHandler = (evt: PointerEvent) =>\n  {\n    if (\n      this.activePointerId != undefined && this.activePointerId === evt.pointerId &&\n      !this.domElement.contains(evt.target as HTMLElement)\n    ) {\n      evt.stopPropagation()\n      this.activePointerId = undefined\n      if (this.onPointerUp) {\n        const point = this.extractPoint(evt)\n        this.onPointerUp(evt, point)\n      }\n    }\n  }\n\n  attach(domElement: HTMLElement)\n  {\n    this.#logger.info(\"attach\", { domElement })\n    if (this.domElement) {\n      this.detach()\n    }\n    this.domElement = domElement\n    this.domElement.addEventListener(\"pointerdown\", this.pointerDownHandler, this.configuration.listenerOptions)\n    this.domElement.addEventListener(\"pointermove\", this.pointerMoveHandler, this.configuration.listenerOptions)\n    this.domElement.addEventListener(\"pointerup\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement.addEventListener(\"pointerleave\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement.addEventListener(\"pointercancel\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement.addEventListener(\"pointerout\", this.pointerOutHandler, this.configuration.listenerOptions)\n\n    this.domElement.addEventListener(\"touchmove\", this.prevent)\n\n    // FIXME investigate why this is needed for iOS devices\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    document.documentElement.addEventListener(\"pointerdown\", () => { })\n  }\n\n  detach()\n  {\n    this.#logger.info(\"detach\")\n    this.domElement?.removeEventListener(\"pointerdown\", this.pointerDownHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"pointermove\", this.pointerMoveHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"pointerup\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"pointerleave\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"pointercancel\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"pointerout\", this.pointerOutHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"touchmove\", this.prevent)\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    document.documentElement.removeEventListener(\"pointerdown\", () => { })\n  }\n}\n","import { TStyle } from \"./Style\"\n\n/**\n * @group Style\n * @property {String} -myscript-pen-width=1 Width of strokes and primitives in mm (no other unit is supported yet)\n * @property {String} -myscript-pen-fill-style=none\n * @property {String} -myscript-pen-fill-color=#FFFFFF00 Color filled inside the area delimited by strokes and primitives\n */\nexport type TPenStyle = TStyle & {\n  \"-myscript-pen-width\"?: number\n  \"-myscript-pen-fill-style\"?: string\n  \"-myscript-pen-fill-color\"?: string\n}\n\n/**\n * @group Style\n */\nexport const DefaultPenStyle: TPenStyle = {\n\n}\n","import { TPenStyle } from \"./PenStyle\"\n\n/**\n * @group Style\n */\nexport type TThemeMath = {\n  \"font-family\": string\n}\n\n/**\n * @group Style\n */\nexport type TThemeMathSolved = {\n  \"font-family\": string\n  color: string\n}\n\n/**\n * @group Style\n */\nexport type TThemeText = {\n  \"font-family\": string,\n  \"font-size\": number\n}\n\n/**\n * @group Style\n */\nexport type TTheme = {\n  ink: TPenStyle\n  \".math\": TThemeMath\n  \".math-solved\": TThemeMathSolved\n  \".text\": TThemeText\n  [key: string]: unknown\n}\n\n/**\n * @group Style\n */\nexport const DefaultTheme: TTheme = {\n  ink: {\n    color: \"#000000\",\n    width: 1,\n    \"-myscript-pen-width\": 1,\n    \"-myscript-pen-fill-style\": \"none\",\n    \"-myscript-pen-fill-color\": \"#FFFFFF00\"\n  },\n  \".math\": {\n    \"font-family\": \"STIXGeneral\"\n  },\n  \".math-solved\": {\n    \"font-family\": \"STIXGeneral\",\n    color: \"#A8A8A8FF\"\n  },\n  \".text\": {\n    \"font-family\": \"MyScriptInter\",\n    \"font-size\": 10\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.JsonCSS=e():t.JsonCSS=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=1)}([function(t,e,n){\"use strict\";function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(e,\"__esModule\",{value:!0});var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i=function t(e){var n=this;o(this,t),this.toJSON=function(t){if(\"string\"!=typeof t)return console.error(\"Need a CSS string but given \",void 0===t?\"undefined\":r(t),t),\"Not a valid CSS..!\";var e={},o=void 0,i=void 0,u=void 0;try{t.split(\"{\").forEach(function(t){if(i=t.trim())if(-1===i.indexOf(\"}\"))e[i]={},o=i;else{i.substring(0,i.indexOf(\"}\")).split(\";\").forEach(function(t){(u=t.split(\":\"))&&2===u.length&&(e[o][u[0].trim().replace(/^\\\"|\\\"$/g,\"\")]=n._trimSemiColon(u[1].trim().replace(/^\\\"|\\\"$/g,\"\")))});try{o=i.split(\"}\")[1].trim(),o&&(e[o]={})}catch(t){}}})}catch(t){return\"Not a valid CSS..!\"}return e},this.toCSS=function(t){if(\"object\"!==(void 0===t?\"undefined\":r(t)))return console.error(\"Need a JSON object but given \",void 0===t?\"undefined\":r(t),t),\"Not a valid JSON..!\";var e=\"\";try{for(var n in t)if(t.hasOwnProperty(n)){e+=n+\" {\\n\";for(var o in t[n])t[n].hasOwnProperty(o)&&(e+=o+\": \"+t[n][o]+\";\\n\");e+=\"}\\n\"}}catch(t){return\"Not a valid JSON..!\"}return e},this._trimSemiColon=function(t){return\";\"===t.slice(-1)?t.slice(0,n.length-1):t}};e.default=i},function(t,e,n){\"use strict\";t.exports=n(0).default}])});","import JsonCSS from \"json-css\"\nimport { TTheme } from \"./Theme\"\nimport { TPenStyle } from \"./PenStyle\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst parser: any = new JsonCSS()\n\n/**\n * @group Style\n */\nexport const StyleHelper = {\n  themeToCSS(json: TTheme): string\n  {\n    return parser.toCSS(json) as string\n    // css = css.replace( /[\\r\\n]+/gm, \"\" )\n    // return css\n  },\n  themeToJSON(style: string): TTheme\n  {\n    const theme = parser.toJSON(style) as TTheme\n    theme[\".text\"][\"font-size\"] = Number(theme[\".text\"][\"font-size\"])\n    theme.ink[\"-myscript-pen-width\"] = Number(theme.ink[\"-myscript-pen-width\"])\n    theme.ink.width = Number(theme.ink.width)\n    return theme\n  },\n  penStyleToCSS (penStyle: TPenStyle): string {\n    let css = parser.toCSS({ css: penStyle }) as string\n    css = css.substring(6, css.length - 3)\n    return css\n  },\n  penStyleToJSON (penStyleString: string): TPenStyle {\n    const penStyle = parser.toJSON(`css {${penStyleString}}`).css as TPenStyle\n    if (penStyle.width) {\n      penStyle.width = Number(penStyle.width)\n    } else {\n      delete penStyle.width\n    }\n    if (penStyle[\"-myscript-pen-width\"]) {\n      penStyle[\"-myscript-pen-width\"] = Number(penStyle[\"-myscript-pen-width\"])\n    } else {\n      delete penStyle[\"-myscript-pen-width\"]\n    }\n    return penStyle\n  },\n\n  stringToJSON(style: string): {[key: string]: string}\n  {\n    return parser.toJSON(`css {${style}}`).css\n  },\n  JSONToString(style: {[key: string]: string}): string\n  {\n    return Object.entries(style).map(([k, v]) => `${k}:${v}`).join(\";\")\n  }\n}\n","import { TStyle } from \"../style\"\nimport { createUUID } from \"../utils\"\n\nexport const enum SymbolType\n{\n  Stroke = \"stroke\",\n  Shape = \"shape\",\n  Text = \"text\"\n}\n\n/**\n * @group Primitive\n */\nexport type TSymbol = {\n  id: string\n  creationTime: number\n  modificationDate: number\n  type: SymbolType | string\n  style: TStyle\n}\n\n/**\n * @group Primitive\n */\nexport abstract class AbstractSymbol\n{\n  id: string\n  creationTime: number\n  modificationDate: number\n  type: SymbolType\n  style: TStyle\n\n  constructor(type: SymbolType, style: TStyle)\n  {\n    this.creationTime = Date.now()\n    this.id = `${type}-${createUUID()}`\n    this.modificationDate = this.creationTime\n    this.type = type\n    this.style = style\n  }\n\n  abstract getClone(): AbstractSymbol\n}\n","import { LoggerClass } from \"../Constants\"\nimport { LoggerManager } from \"../logger\"\nimport { PartialDeep, mergeDeep } from \"../utils\"\nimport { DefaultPenStyle, TPenStyle } from \"./PenStyle\"\nimport { DefaultTheme, TTheme } from \"./Theme\"\n\n/**\n * @group Style\n */\nexport class StyleManager\n{\n  #penStyle!: TPenStyle\n  #theme!: TTheme\n  #penStyleClasses!: string\n  #currentPenStyle!: TPenStyle\n  #logger =  LoggerManager.getLogger(LoggerClass.STYLE)\n\n  constructor(penStyle?: PartialDeep<TPenStyle>, theme?: PartialDeep<TTheme>)\n  {\n    this.#logger.info(\"constructor\", { penStyle, theme })\n    this.setTheme(theme)\n    this.setPenStyleClasses()\n    this.setPenStyle(penStyle)\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.#currentPenStyle || this.#penStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.#penStyle\n  }\n  setPenStyle(style?: PartialDeep<TPenStyle>)\n  {\n    this.#logger.info(\"setPenStyle\", { style })\n    this.#penStyle = mergeDeep(structuredClone(DefaultPenStyle), style || {}) as TPenStyle\n    this.#currentPenStyle = style || (this.theme[`.${ this.#penStyleClasses }`]) as TPenStyle\n    this.#logger.debug(\"setPenStyle\", this.#currentPenStyle)\n  }\n\n  get theme(): TTheme\n  {\n    return this.#theme\n  }\n  setTheme(theme?: PartialDeep<TTheme>)\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    this.#theme = mergeDeep(structuredClone(DefaultTheme), theme || {}) as TTheme\n    this.#logger.debug(\"setTheme\", this.#theme)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.#penStyleClasses\n  }\n  setPenStyleClasses(penStyleClass = \"\")\n  {\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClass })\n    this.#penStyleClasses = penStyleClass\n    this.#currentPenStyle = (this.theme[`.${ this.#penStyleClasses }`]) as TPenStyle\n    this.#logger.debug(\"setPenStyleClasses\", this.#currentPenStyle)\n  }\n\n}\n","import { LoggerClass } from \"../Constants\"\nimport { LoggerManager } from \"../logger\"\nimport { DefaultPenStyle, TPenStyle } from \"../style\"\nimport { PartialDeep } from \"../utils\"\nimport { TPointer } from \"./Point\"\nimport { AbstractSymbol, SymbolType, TSymbol } from \"./Symbol\"\n\n/**\n * @group Primitive\n */\nexport type TStrokeToSend = {\n  id: string\n  pointerType: string\n  x: number[]\n  y: number[]\n  t: number[]\n  p: number[]\n}\n\n/**\n * @group Primitive\n */\nexport type TStrokeGroupToSend = {\n  penStyle?: string\n  strokes: TStrokeToSend[]\n}\n\n/**\n * @group Primitive\n */\nexport type TStroke = TSymbol & {\n  pointerId: number\n  pointerType: string\n  pointers: TPointer[]\n  length: number\n}\n\n/**\n * @group Primitive\n */\nexport type TStrokeGroup = {\n  penStyle: TPenStyle\n  strokes: Stroke[]\n}\n\n/**\n * @group Primitive\n */\nexport class Stroke extends AbstractSymbol implements TStroke\n{\n  #logger = LoggerManager.getLogger(LoggerClass.STROKE)\n\n  pointerId: number\n  pointerType: string\n  pointers: TPointer[]\n  length: number\n  style: TPenStyle\n\n  constructor(style: TPenStyle, pointerId: number, pointerType = \"pen\")\n  {\n    super(SymbolType.Stroke, style)\n    this.#logger.info(\"constructor\", { style, pointerId, pointerType })\n\n    this.style = style\n    this.pointerId = pointerId\n    this.pointerType = pointerType\n    this.pointers = []\n    this.length = 0\n  }\n\n  getClone(): Stroke\n  {\n    const clone = new Stroke(this.style, this.pointerId, this.pointerType)\n    clone.id = this.id\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    clone.length = this.length\n    return clone\n  }\n\n  formatToSend(): TStrokeToSend\n  {\n    const json: TStrokeToSend = {\n      id: this.id,\n      pointerType: this.pointerType,\n      p: [],\n      t: [],\n      x: [],\n      y: []\n    }\n    this.pointers.forEach(p => {\n      json.p.push(p.p)\n      json.t.push(p.t)\n      json.x.push(p.x)\n      json.y.push(p.y)\n    })\n    return json\n  }\n}\n\n/**\n * @group Primitive\n * @group Utils\n */\nexport function convertPartialStrokesToStrokes(json: PartialDeep<TStroke>[]): Stroke[]\n{\n  const errors: string[] = []\n  const strokes: Stroke[] = []\n  json.forEach((j, ji) => {\n    let flag = true\n    const stroke = new Stroke(j.style || DefaultPenStyle, j.pointerId || 1)\n    if (j.id) stroke.id = j.id\n    if (!j.pointers?.length) {\n      errors.push(`stroke ${ji + 1} has not pointers`)\n      flag = false\n      return\n    }\n    j.pointers?.forEach((pp, pIndex) => {\n      if (!pp) {\n        errors.push(`stroke ${ji + 1} has no pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      const pointer: TPointer = {\n        p: pp.p || 1,\n        t: pp.t || pIndex,\n        x: 0,\n        y: 0\n      }\n      if (pp?.x == undefined || pp?.x == null) {\n        errors.push(`stroke ${ji + 1} has no x at pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      else {\n        pointer.x = pp.x\n      }\n      if (pp?.y == undefined || pp?.y == null) {\n        errors.push(`stroke ${ji + 1} has no y at pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      else {\n        pointer.y = pp.y\n      }\n      if (flag) {\n        stroke.pointers.push(pointer)\n      }\n    })\n    if (flag) {\n      strokes.push(stroke)\n    }\n  })\n\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"))\n  }\n\n  return strokes\n}\n","import { LoggerClass } from \"../Constants\"\nimport { LoggerManager } from \"../logger\"\nimport { TPenStyle } from \"../style\"\nimport { computeDistance } from \"../utils\"\nimport { TExport } from \"./Export\"\nimport { IModel, TRecognitionPositions } from \"./IModel\"\nimport { Stroke, TPoint, TPointer } from \"../primitive\"\n\n/**\n * @group Model\n */\nexport class Model implements IModel\n{\n  readonly creationTime: number\n  modificationDate: number\n  positions: TRecognitionPositions\n  currentSymbol?: Stroke\n  symbols: Stroke[]\n  exports?: TExport\n  converts?: TExport\n  width: number\n  height: number\n  rowHeight: number\n  idle: boolean\n  #logger = LoggerManager.getLogger(LoggerClass.MODEL)\n\n  constructor(width = 100, height = 100, rowHeight = 0, creationDate = Date.now())\n  {\n    this.#logger.info(\"constructor\", { width, height, creationDate })\n    this.creationTime = creationDate\n    this.modificationDate = creationDate\n    this.width = width\n    this.height = height\n    this.rowHeight = rowHeight\n    this.symbols = []\n    this.positions = {\n      lastSentPosition: 0,\n      lastReceivedPosition: 0\n    }\n    this.idle = true\n  }\n\n  protected computePressure(distance: number, globalDistance: number): number\n  {\n    let ratio = 1.0\n    if (distance === globalDistance) {\n      ratio = 1.0\n    } else if (distance < 10) {\n      ratio = 0.2 + Math.pow(0.1 * distance, 0.4)\n    } else if (distance > globalDistance - 10) {\n      ratio = 0.2 + Math.pow(0.1 * (globalDistance - distance), 0.4)\n    }\n    const pressure = ratio * Math.max(0.1, 1.0 - (0.1 * Math.sqrt(distance)))\n    return isNaN(pressure) ? 0.5 : Math.round(pressure * 100) / 100\n  }\n\n  protected filterPointByAcquisitionDelta(stroke: Stroke, point: TPointer, lastPointer?: TPointer): boolean\n  {\n    const delta: number = (2 + ((stroke.style[\"-myscript-pen-width\"] || 0) / 4))\n    return !lastPointer ||\n      stroke.pointers.length === 0 ||\n      Math.abs(lastPointer.x - point.x) >= delta ||\n      Math.abs(lastPointer.y - point.y) >= delta\n  }\n\n  getStrokeFromPoint(point: TPoint): Stroke[]\n  {\n    this.#logger.info(\"getStrokeFromPoint\", { point })\n    const isBetween = (val: number, min: number, max: number): boolean => (val >= min && val <= max)\n\n    const _strokeList: Stroke[] = []\n    this.symbols.forEach((stroke) =>\n    {\n      for (let i = 0; i < stroke.pointers.length; i++) {\n        const strokePointer = stroke.pointers[i]\n        if (\n          isBetween(strokePointer.x, point.x - 5, point.x + 5) &&\n          isBetween(strokePointer.y, point.y - 5, point.y + 5)\n        ) {\n          _strokeList.push(stroke)\n          break\n        }\n        else {\n          if (computeDistance(point, strokePointer) < 10) {\n            _strokeList.push(stroke)\n            break\n          }\n        }\n      }\n    })\n    this.#logger.debug(\"getStrokeFromPoint\", { strokes: _strokeList })\n    return _strokeList\n  }\n\n  addPoint(stroke: Stroke, pointer: TPointer): void\n  {\n    this.#logger.debug(\"addPoint\", { stroke, pointer })\n    const lastPointer = stroke.pointers.at(-1)\n    if (this.filterPointByAcquisitionDelta(stroke, pointer, lastPointer)) {\n      const distance = lastPointer ? computeDistance(pointer, lastPointer) : 0\n      stroke.length += distance\n      pointer.p = this.computePressure(distance, stroke.length)\n      stroke.pointers.push(pointer)\n      stroke.modificationDate = Date.now()\n    }\n  }\n\n  addStroke(stroke: Stroke): void\n  {\n    this.#logger.info(\"addStroke\", { stroke })\n    this.symbols.push(stroke)\n    this.modificationDate = Date.now()\n    this.converts = undefined\n    this.exports = undefined\n  }\n\n  updateStroke(updatedStroke: Stroke): void\n  {\n    this.#logger.info(\"updateStroke\", { updatedStroke })\n    const strokeIndex = this.symbols.findIndex((s: Stroke): boolean => s.id === updatedStroke.id)\n    if (strokeIndex !== -1) {\n      updatedStroke.modificationDate = Date.now()\n      this.symbols.splice(strokeIndex, 1, updatedStroke)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"updateStroke\", this.symbols)\n  }\n\n  removeStroke(id: string): void\n  {\n    this.#logger.info(\"removeStroke\", { id })\n    const strokeIndex = this.symbols.findIndex(s => s.id === id)\n    if (strokeIndex !== -1) {\n      this.positions.lastSentPosition--\n      this.positions.lastReceivedPosition--\n      this.symbols.splice(strokeIndex, 1)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"removeStroke\", this.symbols)\n  }\n\n  removeStrokesFromPoint(point: TPoint): string[]\n  {\n    this.#logger.info(\"removeStrokesFromPoint\", { point })\n    const strokes = this.getStrokeFromPoint(point)\n    strokes.forEach(strokeToRemove =>\n    {\n      this.removeStroke(strokeToRemove.id)\n    })\n    this.#logger.debug(\"removeStrokesFromPoint\", strokes.map(s => s.id))\n    return strokes.map(s => s.id)\n  }\n\n  extractUnsentStrokes(): Stroke[]\n  {\n    return this.symbols.slice(this.positions.lastSentPosition)\n  }\n\n  initCurrentStroke(point: TPointer, pointerId: number, pointerType: string, style: TPenStyle, dpi = 96): void\n  {\n    this.#logger.info(\"initCurrentStroke\", { point, pointerId, pointerType, style, dpi })\n    if (style[\"-myscript-pen-width\"]) {\n      const pxWidth = (style[\"-myscript-pen-width\"] * dpi) / 25.4\n      style.width = pxWidth / 2\n    }\n    this.modificationDate = Date.now()\n    this.exports = undefined\n    this.currentSymbol = new Stroke(style, pointerId, pointerType)\n    this.#logger.debug(\"initCurrentStroke\", this.currentSymbol)\n    this.addPoint(this.currentSymbol, point)\n  }\n\n  appendToCurrentStroke(point: TPointer): void\n  {\n    this.#logger.info(\"appendToCurrentStroke\", { point })\n    if (this.currentSymbol) {\n      this.addPoint(this.currentSymbol, point)\n    }\n    this.#logger.debug(\"appendToCurrentStroke\", this.currentSymbol)\n  }\n\n  endCurrentStroke(point: TPointer): void\n  {\n    this.#logger.info(\"endCurrentStroke\", { point })\n    if (this.currentSymbol) {\n      this.addPoint(this.currentSymbol, point)\n      this.addStroke(this.currentSymbol)\n      this.currentSymbol = undefined\n    }\n    this.#logger.debug(\"endCurrentStroke\", this.currentSymbol)\n  }\n\n  updatePositionSent(position: number = this.symbols.length): void\n  {\n    this.#logger.info(\"updatePositionSent\", { position })\n    this.positions.lastSentPosition = position\n    this.#logger.debug(\"updatePositionSent\", this.positions.lastSentPosition)\n  }\n\n  updatePositionReceived(): void\n  {\n    this.#logger.info(\"updatePositionReceived\")\n    this.positions.lastReceivedPosition = this.positions.lastSentPosition\n    this.#logger.debug(\"updatePositionReceived\", this.positions.lastReceivedPosition)\n  }\n\n  mergeExport(exports: TExport)\n  {\n    this.#logger.info(\"mergeExport\", { exports })\n    if (this.exports) {\n      Object.assign(this.exports, exports)\n    } else {\n      this.exports = exports\n    }\n    this.#logger.debug(\"mergeExport\", this.exports)\n  }\n\n  mergeConvert(converts: TExport)\n  {\n    this.#logger.info(\"mergeConvert\", { converts })\n    if (this.converts) {\n      Object.assign(this.converts, converts)\n    } else {\n      this.converts = converts\n    }\n    this.#logger.debug(\"mergeConvert\", this.converts)\n  }\n\n  getClone(): Model\n  {\n    this.#logger.info(\"getClone\")\n    const clonedModel = new Model(this.width, this.height, this.rowHeight, this.creationTime)\n    clonedModel.modificationDate = JSON.parse(JSON.stringify(this.modificationDate))\n    clonedModel.currentSymbol = this.currentSymbol ? this.currentSymbol.getClone() : undefined\n    clonedModel.symbols = this.symbols.map(s => s.getClone())\n    clonedModel.positions = JSON.parse(JSON.stringify(this.positions))\n    clonedModel.exports = this.exports ? JSON.parse(JSON.stringify(this.exports)) : undefined\n    clonedModel.converts = this.converts ? JSON.parse(JSON.stringify(this.converts)) : undefined\n    clonedModel.idle = this.idle\n    this.#logger.debug(\"getClone\", { clonedModel })\n    return clonedModel\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.modificationDate = Date.now()\n    this.currentSymbol = undefined\n    this.symbols = []\n    this.positions.lastSentPosition = 0\n    this.positions.lastReceivedPosition = 0\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n  }\n}\n","import { LoggerClass, Error as ErrorConst } from \"../Constants\"\nimport { TConverstionState, TDiagramConfiguration, TExportConfiguration, TMathConfiguration, TRawContentConfiguration, TRecognitionConfiguration, TServerConfiguration, TTextConfiguration } from \"../configuration\"\nimport { LoggerManager } from \"../logger\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { TStrokeGroup, TStrokeGroupToSend } from \"../primitive\"\nimport { StyleHelper, TPenStyle } from \"../style\"\nimport { computeHmac, isVersionSuperiorOrEqual } from \"../utils\"\n\ntype ApiError = {\n  code?: string\n  message: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRestPostConfiguration = {\n  lang: string,\n  diagram?: TDiagramConfiguration,\n  math?: TMathConfiguration,\n  \"raw-content\"?: TRawContentConfiguration,\n  text?: TTextConfiguration,\n  export: TExportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TRestPostData = {\n  configuration: TRestPostConfiguration,\n  xDPI: number,\n  yDPI: number,\n  contentType: string,\n  conversionState?: TConverstionState\n  height: number,\n  width: number,\n  strokeGroups: TStrokeGroupToSend[]\n}\n\n/**\n * @group Recognizer\n */\nexport class RestRecognizer\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RECOGNIZER)\n\n  protected serverConfiguration: TServerConfiguration\n  protected recognitionConfiguration: TRecognitionConfiguration\n\n  constructor(serverConfig: TServerConfiguration, recognitionConfig: TRecognitionConfiguration)\n  {\n    this.#logger.info(\"constructor\", { serverConfig, recognitionConfig })\n    this.serverConfiguration = serverConfig\n    this.recognitionConfiguration = recognitionConfig\n  }\n\n  get url()\n  {\n    return `${ this.serverConfiguration.scheme }://${ this.serverConfiguration.host }/api/v4.0/iink/batch`\n  }\n\n  get postConfig(): TRestPostConfiguration\n  {\n    switch (this.recognitionConfiguration.type) {\n      case \"DIAGRAM\":\n        return {\n          lang: this.recognitionConfiguration.lang,\n          diagram: this.recognitionConfiguration.diagram,\n          export: this.recognitionConfiguration.export\n        }\n      case \"MATH\":\n        return {\n          lang: this.recognitionConfiguration.lang,\n          math: this.recognitionConfiguration.math,\n          export: this.recognitionConfiguration.export\n        }\n      case \"Raw Content\":\n        return {\n          lang: this.recognitionConfiguration.lang,\n          \"raw-content\": this.recognitionConfiguration[\"raw-content\"],\n          export: this.recognitionConfiguration.export\n        }\n      case \"TEXT\":\n        return {\n          lang: this.recognitionConfiguration.lang,\n          text: this.recognitionConfiguration.text,\n          export: this.recognitionConfiguration.export\n        }\n      default:\n        throw new Error(`get postConfig error Recognition type unkow \"${ this.recognitionConfiguration.type }\"`)\n        break\n    }\n  }\n\n  protected buildData(model: Model): TRestPostData\n  {\n    this.#logger.info(\"buildData\", { model })\n    const isPenStyleEqual = (ps1: TPenStyle, ps2: TPenStyle) =>\n    {\n      return ps1 && ps2 && ps1[\"-myscript-pen-fill-color\"] === ps2[\"-myscript-pen-fill-color\"] &&\n        ps1[\"-myscript-pen-fill-style\"] === ps2[\"-myscript-pen-fill-style\"] &&\n        ps1[\"-myscript-pen-width\"] === ps2[\"-myscript-pen-width\"] &&\n        ps1.color === ps2.color &&\n        ps1.width === ps2.width\n    }\n\n    const strokeGroupByPenStyle: TStrokeGroup[] = []\n    model.symbols.forEach((s) =>\n    {\n      const groupIndex = strokeGroupByPenStyle.findIndex(sg => isPenStyleEqual(sg.penStyle, s.style))\n      if (groupIndex > -1) {\n        strokeGroupByPenStyle[groupIndex].strokes.push(s)\n      } else {\n        strokeGroupByPenStyle.push({\n          penStyle: s.style,\n          strokes: [s]\n        })\n      }\n    })\n\n    const strokeGroupsToSend: TStrokeGroupToSend[] = []\n    strokeGroupByPenStyle.forEach((group: TStrokeGroup) =>\n    {\n      const newPenStyle = JSON.stringify(group.penStyle) === \"{}\" ? undefined : StyleHelper.penStyleToCSS(group.penStyle as TPenStyle)\n      const newGroup = {\n        penStyle: newPenStyle,\n        strokes: group.strokes.map(s => s.formatToSend())\n      }\n      strokeGroupsToSend.push(newGroup)\n    })\n\n    const contentType: string = this.recognitionConfiguration.type === \"Raw Content\" ?\n      \"Raw Content\" :\n      this.recognitionConfiguration.type.charAt(0).toUpperCase() + this.recognitionConfiguration.type.slice(1).toLowerCase()\n\n    const data = {\n      configuration: this.postConfig,\n      xDPI: 96,\n      yDPI: 96,\n      contentType,\n      height: model.height,\n      width: model.width,\n      strokeGroups: strokeGroupsToSend\n    }\n    this.#logger.debug(\"buildData\", { data })\n    return data\n  }\n\n  protected async post(data: unknown, mimeType: string): Promise<unknown>\n  {\n    this.#logger.info(\"post\", { data, mimeType })\n    const headers = new Headers()\n    headers.append(\"Accept\", \"application/json,\" + mimeType)\n    headers.append(\"applicationKey\", this.serverConfiguration.applicationKey)\n    try {\n      const hmac = await computeHmac(JSON.stringify(data), this.serverConfiguration.applicationKey, this.serverConfiguration.hmacKey)\n      headers.append(\"hmac\", hmac)\n    } catch (error) {\n      this.#logger.error(\"post.computeHmac\", error)\n    }\n    headers.append(\"Content-Type\", \"application/json\")\n\n    if (isVersionSuperiorOrEqual(this.serverConfiguration.version, \"2.0.4\")) {\n      headers.append(\"myscript-client-name\", \"iink-ts\")\n      headers.append(\"myscript-client-version\", \"1.0.5\")\n    }\n\n    const reqInit: RequestInit = {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(data)\n    }\n    const request = new Request(this.url, reqInit)\n    const response: Response = await fetch(request)\n    if (response.ok) {\n      const contentType = response.headers.get(\"content-type\")\n      let result: unknown\n      switch (contentType) {\n        case \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\n        case \"image/png\":\n        case \"image/jpeg\":\n          result = await response.blob()\n          break\n        case \"application/json\":\n          result = await response.json()\n          break\n        case \"application/vnd.myscript.jiix\":\n          result = await response.clone().json().catch(async () => await response.text())\n          break\n        default:\n          result = await response.text()\n          break\n      }\n      this.#logger.debug(\"post\", { result })\n      return result\n    } else {\n      const err = await response.json() as ApiError\n      this.#logger.error(\"post\", { err })\n      throw err\n    }\n  }\n\n  protected async tryFetch(data: TRestPostData, mimeType: string): Promise<TExport | never>\n  {\n    this.#logger.debug(\"tryFetch\", { data, mimeType })\n    return this.post(data, mimeType)\n      .then((res) =>\n      {\n        const exports: TExport = {}\n        exports[mimeType] = res as TJIIXExport | string | Blob\n        this.#logger.debug(\"tryFetch\", { exports })\n        return exports\n      })\n      .catch((err) =>\n      {\n        this.#logger.error(\"tryFetch\", { data, mimeType, err })\n        let message = err.message || ErrorConst.UNKNOW\n        if (!err.code) {\n          message = ErrorConst.CANT_ESTABLISH\n        } else if (err.code === \"access.not.granted\") {\n          message = ErrorConst.WRONG_CREDENTIALS\n        }\n        const error = new Error(message)\n        throw error\n      })\n  }\n\n  protected getMimeTypes(requestedMimeTypes?: string[]): string[]\n  {\n    this.#logger.info(\"getMimeTypes\", { requestedMimeTypes })\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.recognitionConfiguration.type) {\n        case \"DIAGRAM\":\n          mimeTypes = this.recognitionConfiguration.diagram.mimeTypes\n          break\n        case \"MATH\":\n          mimeTypes = this.recognitionConfiguration.math.mimeTypes\n          break\n        case \"Raw Content\":\n          mimeTypes = [\"application/vnd.myscript.jiix\"]\n          break\n        case \"TEXT\":\n          mimeTypes = this.recognitionConfiguration.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${ this.recognitionConfiguration.type }\" is unknown.\\n Possible types are:\\n -DIAGRAM\\n -MATH\\n -Raw Content\\n -TEXT`)\n          break\n      }\n    }\n    return mimeTypes\n  }\n\n  async convert(model: Model, conversionState?: TConverstionState, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"convert\", { model, conversionState, requestedMimeTypes })\n    const myModel = model.getClone()\n    const mimeTypes = this.getMimeTypes(requestedMimeTypes)\n    const dataToConcert = this.buildData(myModel)\n    dataToConcert.conversionState = conversionState\n    const promises = mimeTypes.map(mt => this.tryFetch(dataToConcert, mt))\n    const exports: TExport[] = await Promise.all(promises)\n    exports.forEach(e =>\n    {\n      myModel.mergeConvert(e)\n    })\n    this.#logger.debug(\"convert\", { model: myModel })\n    return myModel\n  }\n\n  async export(model: Model, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"export\", { model, requestedMimeTypes })\n    const myModel = model.getClone()\n    if (myModel.symbols.length === 0) {\n      return Promise.resolve(myModel)\n    }\n    const mimeTypes = this.getMimeTypes(requestedMimeTypes)\n    if (!mimeTypes.length) {\n      this.#logger.error(\"export\", { model, requestedMimeTypes, \"Export failed, no mimeTypes define in recognition configuration\": String })\n      return Promise.reject(new Error(\"Export failed, no mimeTypes define in recognition configuration\"))\n    }\n    const mimeTypesRequiringExport: string[] = mimeTypes.filter(m => !myModel.exports || !myModel.exports[m])\n    const data = this.buildData(model)\n    const exports: TExport[] = await Promise.all(mimeTypesRequiringExport.map(mimeType => this.tryFetch(data, mimeType)))\n    exports.forEach(e =>\n    {\n      myModel.mergeExport(e)\n    })\n    this.#logger.debug(\"export\", { model: myModel })\n    return myModel\n  }\n\n  async resize(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"resize\", { model })\n    return this.export(model)\n  }\n\n}\n","import { LoggerClass, Error as ErrorConst } from \"../Constants\"\nimport { TConverstionState, TRecognitionConfiguration, TServerConfiguration } from \"../configuration\"\nimport { InternalEvent } from \"../event\"\nimport { LoggerManager } from \"../logger\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { Stroke } from \"../primitive\"\nimport { StyleHelper, TPenStyle, TTheme } from \"../style\"\nimport { TUndoRedoContext } from \"../undo-redo\"\nimport { DeferredPromise, PartialDeep, computeHmac, isVersionSuperiorOrEqual } from \"../utils\"\nimport { TWSMessageEvent, TWSMessageEventContentChange, TWSMessageEventError, TWSMessageEventExport, TWSMessageEventHMACChallenge, TWSMessageEventPartChange, TWSMessageEventSVGPatch } from \"./WSRecognizerMessage\"\n\n/**\n * A websocket dialog have this sequence :\n * --------------------------- Client --------------------------------------------------- Server ----------------------------------\n * init: send newContentPackage or restoreIInkSession           ==================>\n *                                                              <==================       ack\n * answer ack:\n *  send the hmac (if enable)                                   ==================>\n *  send the configuration                                      ==================>\n *                                                              <==================       contentPackageDescription\n * answer contentPackageDescription:\n *  send newContentPart or openContentPart                      ==================>\n *                                                              <==================        partChanged\n *                                                              <==================        contentChanged\n *                                                              <==================        newPart\n *                                                              <==================        svgPatch\n *\n * setPenStyle (send the parameters)                            ==================>\n * setTheme (send the parameters)                               ==================>\n * setPenStyleClasses (send the parameters)                     ==================>\n *                                                              <==================        svgPatch\n * addStrokes (send the strokes ) ============>\n *                                                              <==================        update\n */\n\n/**\n * @group Recognizer\n */\nexport class WSRecognizer\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RECOGNIZER)\n  protected serverConfiguration: TServerConfiguration\n  protected recognitionConfiguration: TRecognitionConfiguration\n\n  protected socket!: WebSocket\n  protected pingCount = 0\n  protected reconnectionCount = 0\n  protected viewSizeHeight!: number\n  protected viewSizeWidth!: number\n  protected sessionId?: string\n  // contentPartCount = 0\n  currentPartId?: string\n  protected currentErrorCode?: string | number\n\n  protected penStyle?: TPenStyle\n  protected penStyleClasses?: string\n  protected theme?: TTheme\n\n  protected connected?: DeferredPromise<void>\n  protected initialized?: DeferredPromise<void>\n  protected ackDeferred?: DeferredPromise<void>\n  protected addStrokeDeferred?: DeferredPromise<TExport>\n  protected exportDeferred?: DeferredPromise<TExport>\n  protected convertDeferred?: DeferredPromise<TExport>\n  protected importDeferred?: DeferredPromise<TExport>\n  protected resizeDeferred?: DeferredPromise<void>\n  protected undoDeferred?: DeferredPromise<TExport>\n  protected redoDeferred?: DeferredPromise<TExport>\n  protected clearDeferred?: DeferredPromise<TExport>\n  protected importPointEventsDeferred?: DeferredPromise<TExport>\n  protected waitForIdleDeferred?: DeferredPromise<void>\n\n  url: string\n\n  constructor(serverConfig: TServerConfiguration, recognitionConfig: TRecognitionConfiguration)\n  {\n    this.serverConfiguration = serverConfig\n    this.recognitionConfiguration = recognitionConfig\n    const scheme = (this.serverConfiguration.scheme === \"https\") ? \"wss\" : \"ws\"\n    this.url = `${ scheme }://${ this.serverConfiguration.host }/api/v4.0/iink/document?applicationKey=${ this.serverConfiguration.applicationKey }`\n    this.#logger.info(\"constructor\", { serverConfig, recognitionConfig, url: this.url })\n  }\n\n  get mimeTypes(): string[]\n  {\n    switch (this.recognitionConfiguration.type.toLocaleLowerCase()) {\n      case \"text\":\n        return this.recognitionConfiguration.text.mimeTypes\n      case \"math\":\n        return this.recognitionConfiguration.math.mimeTypes\n      default:\n        throw new Error(`Unauthorized recognition type: \"${ this.recognitionConfiguration.type }\"`)\n    }\n  }\n\n  get internalEvent(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  protected infinitePing(): void\n  {\n    this.pingCount++\n    if (this.serverConfiguration.websocket.maxPingLostCount < this.pingCount) {\n      this.socket.close(1000, \"PING_LOST\")\n    } else if (this.socket.readyState <= 1) {\n      setTimeout(() =>\n      {\n        if (this.socket.readyState <= 1) {\n          this.socket.send(JSON.stringify({ type: \"ping\" }))\n          this.infinitePing()\n        }\n      }, this.serverConfiguration.websocket.pingDelay)\n    }\n  }\n\n  protected openCallback(): void\n  {\n    this.connected?.resolve()\n    const params: TWSMessageEvent = {\n      type: this.sessionId ? \"restoreIInkSession\" : \"newContentPackage\",\n      iinkSessionId: this.sessionId,\n      applicationKey: this.serverConfiguration.applicationKey,\n      xDpi: 96,\n      yDpi: 96,\n      viewSizeHeight: this.viewSizeHeight,\n      viewSizeWidth: this.viewSizeWidth\n    }\n    if (isVersionSuperiorOrEqual(this.serverConfiguration.version, \"2.0.4\")) {\n      params[\"myscript-client-name\"] = \"iink-ts\"\n      params[\"myscript-client-version\"] = \"1.0.5\"\n    }\n    this.send(params)\n  }\n\n  protected rejectDeferredPending(error: Error): void\n  {\n    if (this.connected?.isPending) {\n      this.connected?.reject(error)\n    }\n    if (this.initialized?.isPending) {\n      this.initialized?.reject(error)\n    }\n    if (this.addStrokeDeferred?.isPending) {\n      this.addStrokeDeferred?.reject(error)\n    }\n    if (this.exportDeferred?.isPending) {\n      this.exportDeferred?.reject(error)\n    }\n    if (this.convertDeferred?.isPending) {\n      this.convertDeferred?.reject(error)\n    }\n    if (this.importDeferred?.isPending) {\n      this.importDeferred?.reject(error)\n    }\n    if (this.resizeDeferred?.isPending) {\n      this.resizeDeferred?.reject(error)\n    }\n    if (this.undoDeferred?.isPending) {\n      this.undoDeferred?.reject(error)\n    }\n    if (this.redoDeferred?.isPending) {\n      this.redoDeferred?.reject(error)\n    }\n    if (this.clearDeferred?.isPending) {\n      this.clearDeferred.reject(error)\n    }\n    if (this.waitForIdleDeferred?.isPending) {\n      this.waitForIdleDeferred.reject(error)\n    }\n  }\n\n  protected closeCallback(evt: CloseEvent): void\n  {\n    let message = \"\"\n    if (!this.currentErrorCode) {\n      switch (evt.code) {\n        case 1000:\n          // Normal Closure\n          break\n        case 1001:\n          message = ErrorConst.GOING_AWAY\n          break\n        case 1002:\n          message = ErrorConst.PROTOCOL_ERROR\n          break\n        case 1003:\n          message = ErrorConst.UNSUPPORTED_DATA\n          break\n        case 1006:\n          message = ErrorConst.ABNORMAL_CLOSURE\n          break\n        case 1007:\n          message = ErrorConst.INVALID_FRAME_PAULOAD\n          break\n        case 1008:\n          message = ErrorConst.POLICY_VIOLATION\n          break\n        case 1009:\n          message = ErrorConst.MESSAGE_TOO_BIG\n          break\n        case 1011:\n          message = ErrorConst.INTERNAL_ERROR\n          break\n        case 1012:\n          message = ErrorConst.SERVICE_RESTART\n          break\n        case 1013:\n          message = ErrorConst.TRY_AGAIN\n          break\n        case 1014:\n          message = ErrorConst.BAD_GATEWAY\n          break\n        case 1015:\n          message = ErrorConst.TLS_HANDSHAKE\n          break\n        default:\n          this.#logger.warn(\"closeCallback\", \"unknow CloseEvent.code\", { evt })\n          message = ErrorConst.CANT_ESTABLISH\n          break\n      }\n    }\n    const error = new Error(message || evt.reason)\n\n    this.rejectDeferredPending(error)\n\n    if (!this.currentErrorCode && evt.code !== 1000) {\n      this.internalEvent.emitError(error)\n    }\n  }\n\n  protected async manageAckMessage(websocketMessage: TWSMessageEvent): Promise<void>\n  {\n    this.#logger.info(\"manageAckMessage\", { websocketMessage })\n    const hmacChallengeMessage = websocketMessage as TWSMessageEventHMACChallenge\n    if (hmacChallengeMessage.hmacChallenge) {\n      this.send({\n        type: \"hmac\",\n        hmac: await computeHmac(hmacChallengeMessage.hmacChallenge, this.serverConfiguration.applicationKey, this.serverConfiguration.hmacKey)\n      })\n    }\n    if (hmacChallengeMessage.iinkSessionId) {\n      this.sessionId = hmacChallengeMessage.iinkSessionId\n    }\n\n    const recognitionConfig = structuredClone(this.recognitionConfiguration) as PartialDeep<TRecognitionConfiguration>\n    if (!isVersionSuperiorOrEqual(this.serverConfiguration.version, \"2.3.0\")) {\n      delete recognitionConfig.convert\n    }\n    this.send({ ...recognitionConfig, type: \"configuration\" })\n    this.ackDeferred?.resolve()\n  }\n\n  protected async manageContentPackageDescriptionMessage(): Promise<void>\n  {\n    this.reconnectionCount = 0\n    await this.ackDeferred?.promise\n    this.#logger.info(\"manageContentPackageDescriptionMessage\")\n    if (this.currentPartId) {\n      this.send({ type: \"openContentPart\", id: this.currentPartId, mimeTypes: this.mimeTypes })\n    }\n    else {\n      this.send({ type: \"newContentPart\", contentType: this.recognitionConfiguration.type, mimeTypes: this.mimeTypes })\n    }\n  }\n\n  protected managePartChangeMessage(websocketMessage: TWSMessageEvent): void\n  {\n    this.#logger.info(\"managePartChangeMessage\", { websocketMessage })\n    const partChangeMessage = websocketMessage as TWSMessageEventPartChange\n    this.currentPartId = partChangeMessage.partId\n    this.initialized?.resolve()\n  }\n\n  protected manageExportMessage(websocketMessage: TWSMessageEvent): void\n  {\n    this.#logger.info(\"manageExportMessage\", { websocketMessage })\n    const exportMessage = websocketMessage as TWSMessageEventExport\n    if (exportMessage.exports[\"application/vnd.myscript.jiix\"]) {\n      exportMessage.exports[\"application/vnd.myscript.jiix\"] = JSON.parse(exportMessage.exports[\"application/vnd.myscript.jiix\"].toString()) as TJIIXExport\n    }\n    this.initialized?.resolve()\n    this.addStrokeDeferred?.resolve(exportMessage.exports)\n    this.exportDeferred?.resolve(exportMessage.exports)\n    this.convertDeferred?.resolve(exportMessage.exports)\n    this.importDeferred?.resolve(exportMessage.exports)\n    this.undoDeferred?.resolve(exportMessage.exports)\n    this.redoDeferred?.resolve(exportMessage.exports)\n    this.clearDeferred?.resolve(exportMessage.exports)\n    this.importPointEventsDeferred?.resolve(exportMessage.exports)\n    this.internalEvent.emitExported(exportMessage.exports)\n  }\n\n  protected async manageWaitForIdle(): Promise<void>\n  {\n    this.internalEvent.emitIdle(true)\n    this.waitForIdleDeferred?.resolve()\n  }\n\n  protected manageErrorMessage(websocketMessage: TWSMessageEvent): void\n  {\n    const err = websocketMessage as TWSMessageEventError\n    this.currentErrorCode = err.data?.code || err.code\n    let message = err.data?.message || err.message || ErrorConst.UNKNOW\n\n    switch (this.currentErrorCode) {\n      case \"no.activity\":\n        message = ErrorConst.NO_ACTIVITY\n        break\n      case \"access.not.granted\":\n        message = ErrorConst.WRONG_CREDENTIALS\n        break\n      case \"session.too.old\":\n        message = ErrorConst.TOO_OLD\n        break\n    }\n    const error = new Error(message)\n    this.rejectDeferredPending(error)\n    this.internalEvent.emitError(error)\n  }\n\n  protected manageContentChangeMessage(websocketMessage: TWSMessageEvent): void\n  {\n    this.#logger.info(\"manageContentChangeMessage\", { websocketMessage })\n    const contentChangeMessage = websocketMessage as TWSMessageEventContentChange\n    const context: TUndoRedoContext = {\n      canRedo: contentChangeMessage.canRedo,\n      canUndo: contentChangeMessage.canUndo,\n      empty: contentChangeMessage.empty,\n      stackIndex: contentChangeMessage.undoStackIndex,\n      possibleUndoCount: contentChangeMessage.possibleUndoCount,\n      stack: []\n    }\n    this.internalEvent.emitContextChange(context)\n  }\n\n  protected manageSVGPatchMessage(websocketMessage: TWSMessageEvent): void\n  {\n    this.#logger.info(\"manageSVGPatchMessage\", { websocketMessage })\n    this.resizeDeferred?.resolve()\n    const svgPatchMessage = websocketMessage as TWSMessageEventSVGPatch\n    this.internalEvent.emitSVGPatch(svgPatchMessage)\n  }\n\n  protected messageCallback(message: MessageEvent<string>): void\n  {\n    this.#logger.debug(\"messageCallback\", { message })\n    this.currentErrorCode = undefined\n    const websocketMessage: TWSMessageEvent = JSON.parse(message.data)\n    if (websocketMessage.type !== \"pong\") {\n      this.pingCount = 0\n      switch (websocketMessage.type) {\n        case \"ack\":\n          this.manageAckMessage(websocketMessage)\n          break\n        case \"contentPackageDescription\":\n          this.manageContentPackageDescriptionMessage()\n          break\n        case \"partChanged\":\n          this.managePartChangeMessage(websocketMessage)\n          break\n        case \"newPart\":\n          this.initialized?.resolve()\n          break\n        case \"contentChanged\":\n          this.manageContentChangeMessage(websocketMessage)\n          break\n        case \"exported\":\n          this.manageExportMessage(websocketMessage)\n          break\n        case \"svgPatch\":\n          this.manageSVGPatchMessage(websocketMessage)\n          break\n        case \"error\":\n          this.manageErrorMessage(websocketMessage)\n          break\n        case \"idle\":\n          this.manageWaitForIdle()\n          break\n        default:\n          this.#logger.warn(\"messageCallback\", `Message type unknow: \"${ websocketMessage.type }\".`)\n      }\n    }\n  }\n\n  async init(height: number, width: number): Promise<void>\n  {\n    try {\n      this.#logger.info(\"init\", { height, width })\n      this.destroy()\n      this.connected = new DeferredPromise<void>()\n      this.initialized = new DeferredPromise<void>()\n      this.ackDeferred = new DeferredPromise<void>()\n      this.viewSizeHeight = height\n      this.viewSizeWidth = width\n      this.pingCount = 0\n      this.socket = new WebSocket(this.url)\n\n      if (this.serverConfiguration.websocket.pingEnabled) {\n        this.infinitePing()\n      }\n\n      this.socket.addEventListener(\"open\", this.openCallback.bind(this))\n      this.socket.addEventListener(\"close\", this.closeCallback.bind(this))\n      this.socket.addEventListener(\"message\", this.messageCallback.bind(this))\n\n      return this.initialized.promise\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (err: any) {\n      const error = new Error(ErrorConst.CANT_ESTABLISH)\n      this.internalEvent.emitError(error)\n      this.initialized?.reject(error)\n      return this.initialized?.promise\n    }\n  }\n\n  async send(message: TWSMessageEvent): Promise<void>\n  {\n    if (!this.connected) {\n      return Promise.reject(new Error(\"Recognizer must be initilized\"))\n    }\n    await this.connected.promise\n    if (this.socket.readyState === this.socket.OPEN) {\n      this.#logger.debug(\"send\", { message })\n      this.socket.send(JSON.stringify(message))\n      return Promise.resolve()\n    } else {\n      if (this.socket.readyState != this.socket.CONNECTING && this.serverConfiguration.websocket.autoReconnect) {\n        this.reconnectionCount++\n        if (this.serverConfiguration.websocket.maxRetryCount >= this.reconnectionCount) {\n          this.#logger.debug(\"send\", `try to reconnect number: ${ this.reconnectionCount }.`)\n          this.internalEvent.emitClearMessage()\n          await this.init(this.viewSizeHeight, this.viewSizeWidth)\n          await this.setPenStyle(this.penStyle as TPenStyle)\n          await this.setPenStyleClasses(this.penStyleClasses as string)\n          await this.setTheme(this.theme as TTheme)\n          return this.send(message)\n        }\n        else {\n          return Promise.reject(new Error(\"Unable to send message. The maximum number of connection attempts has been reached.\"))\n        }\n      }\n    }\n  }\n\n  async addStrokes(strokes: Stroke[]): Promise<TExport>\n  {\n    this.#logger.info(\"addStrokes\", { strokes })\n    await this.initialized?.promise\n    this.addStrokeDeferred = new DeferredPromise<TExport>()\n    if (strokes.length === 0) {\n      this.addStrokeDeferred.resolve({} as TExport)\n    }\n    else {\n      await this.send({\n        type: \"addStrokes\",\n        strokes: strokes.map(s => s.formatToSend())\n      })\n    }\n    return this.addStrokeDeferred?.promise\n  }\n\n  async setPenStyle(penStyle: TPenStyle): Promise<void>\n  {\n    this.#logger.info(\"setPenStyle\", { penStyle })\n    await this.initialized?.promise\n    this.penStyle = penStyle\n    const message: TWSMessageEvent = {\n      type: \"setPenStyle\",\n      style: StyleHelper.penStyleToCSS(penStyle)\n    }\n    return this.send(message)\n  }\n\n  async setPenStyleClasses(penStyleClasses: string): Promise<void>\n  {\n    await this.initialized?.promise\n    this.penStyleClasses = penStyleClasses\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClasses })\n    const message: TWSMessageEvent = {\n      type: \"setPenStyleClasses\",\n      styleClasses: penStyleClasses\n    }\n    return this.send(message)\n  }\n\n  async setTheme(theme: TTheme): Promise<void>\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    await this.initialized?.promise\n    this.theme = theme\n    const message: TWSMessageEvent = {\n      type: \"setTheme\",\n      theme: StyleHelper.themeToCSS(theme)\n    }\n    return this.send(message)\n  }\n\n  async export(model: Model, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"export\", { model, requestedMimeTypes })\n    await this.initialized?.promise\n    this.exportDeferred = new DeferredPromise<TExport>()\n    const localModel = model.getClone()\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.recognitionConfiguration.type) {\n        case \"DIAGRAM\":\n          mimeTypes = this.recognitionConfiguration.diagram.mimeTypes\n          break\n        case \"MATH\":\n          mimeTypes = this.recognitionConfiguration.math.mimeTypes\n          break\n        case \"Raw Content\":\n          mimeTypes = [\"application/vnd.myscript.jiix\"]\n          break\n        case \"TEXT\":\n          mimeTypes = this.recognitionConfiguration.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${ this.recognitionConfiguration.type }\" is unknown.\\n Possible types are:\\n -DIAGRAM\\n -MATH\\n -Raw Content\\n -TEXT`)\n      }\n    }\n\n    if (!mimeTypes.length) {\n      return Promise.reject(new Error(`Export failed, no mimeTypes define in recognition ${ this.recognitionConfiguration.type } configuration`))\n    }\n\n    const message: TWSMessageEvent = {\n      type: \"export\",\n      partId: this.currentPartId,\n      mimeTypes\n    }\n    await this.send(message)\n    const exports: TExport = await this.exportDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(exports)\n    this.#logger.debug(\"export\", { model: localModel })\n    return localModel\n  }\n\n  async import(model: Model, data: Blob, mimeType?: string): Promise<Model>\n  {\n    this.#logger.info(\"import\", { data, mimeType })\n    await this.initialized?.promise\n    const localModel = model.getClone()\n    const chunkSize = this.serverConfiguration.websocket.fileChunkSize\n    const importFileId = Math.random().toString(10).substring(2, 6)\n    this.importDeferred = new DeferredPromise<TExport>()\n    const readBlob = (blob: Blob): Promise<string | never> =>\n    {\n      const fileReader = new FileReader()\n      return new Promise((resolve, reject) =>\n      {\n        fileReader.onloadend = (ev) => resolve(ev.target?.result as string)\n        fileReader.onerror = () => reject()\n        fileReader.readAsText(blob)\n      })\n    }\n\n    const importFileMessage: TWSMessageEvent = {\n      type: \"importFile\",\n      importFileId,\n      mimeType\n    }\n    await this.send(importFileMessage)\n    for (let i = 0; i < data.size; i += chunkSize) {\n      const blobPart = data.slice(i, i + chunkSize, data.type)\n      const partFileString = await readBlob(blobPart)\n      const fileChuckMessage: TWSMessageEvent = {\n        type: \"fileChunk\",\n        importFileId,\n        data: partFileString,\n        lastChunk: i + chunkSize > data.size\n      }\n      await this.send(fileChuckMessage)\n    }\n    const exports = await this.importDeferred?.promise\n    this.importDeferred = undefined\n    localModel.mergeExport(exports)\n    return localModel\n  }\n\n  async resize(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"resize\", { model })\n    await this.initialized?.promise\n    this.resizeDeferred = new DeferredPromise<void>()\n    const localModel = model.getClone()\n    this.viewSizeHeight = localModel.height\n    this.viewSizeWidth = localModel.width\n    const message: TWSMessageEvent = {\n      type: \"changeViewSize\",\n      height: this.viewSizeHeight,\n      width: this.viewSizeWidth,\n    }\n    await this.send(message)\n    await this.resizeDeferred?.promise\n    return localModel\n  }\n\n  async importPointEvents(strokes: Stroke[]): Promise<TExport>\n  {\n    this.#logger.info(\"importPointsEvents\", { strokes })\n    await this.initialized?.promise\n    this.importPointEventsDeferred = new DeferredPromise<TExport>()\n    const message: TWSMessageEvent = {\n      type: \"pointerEvents\",\n      events: strokes.map(s => s.formatToSend())\n    }\n    this.send(message)\n    const exportPoints = await this.importPointEventsDeferred?.promise\n    this.importPointEventsDeferred = undefined\n    this.#logger.debug(\"importPointEvents\", { exportPoints })\n    return exportPoints as TExport\n  }\n\n  async convert(model: Model, conversionState?: TConverstionState): Promise<Model>\n  {\n    this.#logger.info(\"convert\", { model, conversionState })\n    await this.initialized?.promise\n    this.convertDeferred = new DeferredPromise<TExport>()\n    const localModel = model.getClone()\n    const message: TWSMessageEvent = {\n      type: \"convert\",\n      conversionState\n    }\n    await this.send(message)\n    const myExportConverted: TExport = await this.convertDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeConvert(myExportConverted)\n    this.#logger.debug(\"convert\", { model: localModel })\n    return localModel\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    await this.initialized?.promise\n    this.waitForIdleDeferred = new DeferredPromise<void>()\n    const message: TWSMessageEvent = {\n      type: \"waitForIdle\",\n    }\n    await this.send(message)\n    return this.waitForIdleDeferred?.promise\n  }\n\n  async undo(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"undo\", { model })\n    await this.initialized?.promise\n    const localModel = model.getClone()\n    this.undoDeferred = new DeferredPromise<TExport>()\n    const message: TWSMessageEvent = {\n      type: \"undo\",\n    }\n    await this.send(message)\n    const undoExports = await this.undoDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(undoExports)\n    this.#logger.debug(\"undo\", { model: localModel })\n    this.undoDeferred = undefined\n    return localModel\n  }\n\n  async redo(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"redo\", { model })\n    await this.initialized?.promise\n    const localModel = model.getClone()\n    this.redoDeferred = new DeferredPromise<TExport>()\n    const message: TWSMessageEvent = {\n      type: \"redo\",\n    }\n    await this.send(message)\n    const redoExports = await this.redoDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(redoExports)\n    this.#logger.debug(\"redo\", { model: redoExports })\n    this.redoDeferred = undefined\n    return localModel\n  }\n\n  async clear(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"clear\", { model })\n    await this.initialized?.promise\n    const localModel = model.getClone()\n    localModel.modificationDate = Date.now()\n    this.clearDeferred = new DeferredPromise<TExport>()\n    const message: TWSMessageEvent = {\n      type: \"clear\",\n    }\n    await this.send(message)\n    const clearExports = await this.clearDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(clearExports)\n    this.clearDeferred = undefined\n    this.#logger.info(\"clear\", { model: localModel })\n    return localModel\n  }\n\n  close(code: number, reason: string): void\n  {\n    if (this.socket.readyState === this.socket.OPEN || this.socket.readyState === this.socket.CONNECTING) {\n      this.#logger.info(\"close\", { code, reason })\n      this.socket.removeEventListener(\"close\", this.closeCallback)\n      this.socket.removeEventListener(\"message\", this.messageCallback)\n      this.socket.removeEventListener(\"open\", this.openCallback)\n      this.socket.close(code, reason)\n    }\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    this.connected = undefined\n    this.initialized = undefined\n    this.ackDeferred = undefined\n    this.addStrokeDeferred = undefined\n    this.exportDeferred = undefined\n    this.convertDeferred = undefined\n    this.importDeferred = undefined\n    this.resizeDeferred = undefined\n    this.undoDeferred = undefined\n    this.redoDeferred = undefined\n    this.clearDeferred = undefined\n    if (this.socket) {\n      this.socket.removeEventListener(\"close\", this.closeCallback)\n      this.socket.removeEventListener(\"message\", this.messageCallback)\n      this.socket.removeEventListener(\"open\", this.openCallback)\n      this.close(1000, \"Recognizer destroyed\")\n    }\n  }\n}\n","import { LoggerClass } from \"../../Constants\"\nimport { LoggerManager } from \"../../logger\"\nimport { TPoint, TCanvasShapeEllipseSymbol, TCanvasShapeLineSymbol, TCanvasShapeTableSymbol, TSymbol } from \"../../primitive\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererShape\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RENDERER)\n\n  symbols = {\n    table: \"table\",\n    ellipse: \"ellipse\",\n    line: \"line\"\n  }\n\n  protected phi(angle: number): number\n  {\n    let returnedAngle = ((angle + Math.PI) % (Math.PI * 2)) - Math.PI\n    if (returnedAngle < -Math.PI) {\n      returnedAngle += Math.PI * 2\n    }\n    this.#logger.debug(\"phi\", { angle, returnedAngle })\n    return returnedAngle\n  }\n\n  protected drawEllipseArc(context2D: CanvasRenderingContext2D, shapeEllipse: TCanvasShapeEllipseSymbol): TPoint[]\n  {\n    this.#logger.debug(\"drawEllipseArc\", { context2D, shapeEllipse })\n    const { centerPoint, maxRadius, minRadius, orientation, startAngle, sweepAngle } = shapeEllipse\n    const angleStep = 0.02\n    const z1 = Math.cos(orientation) * maxRadius\n    const z2 = Math.cos(orientation) * minRadius\n    const z3 = Math.sin(orientation) * maxRadius\n    const z4 = Math.sin(orientation) * minRadius\n    const n = Math.floor(Math.abs(sweepAngle) / angleStep)\n    const boundariesPoints = []\n    context2D.save()\n    try {\n      context2D.beginPath()\n      for (let i = 0; i <= n; i++) {\n        const angle = startAngle + ((i / n) * sweepAngle)\n        const alpha = Math.atan2(Math.sin(angle) / minRadius, Math.cos(angle) / maxRadius)\n        const cosAlpha = Math.cos(alpha)\n        const sinAlpha = Math.sin(alpha)\n        const x = (centerPoint.x + (z1 * cosAlpha)) - (z4 * sinAlpha)\n        const y = (centerPoint.y + (z2 * sinAlpha)) + (z3 * cosAlpha)\n        if (i === 0) {\n          context2D.moveTo(x, y)\n        } else {\n          context2D.lineTo(x, y)\n        }\n        if (i === 0 || i === n) {\n          boundariesPoints.push({ x, y })\n        }\n      }\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"drawEllipseArc\", { error })\n    } finally {\n      context2D.restore()\n    }\n    return boundariesPoints\n  }\n\n  protected drawLine(context2D: CanvasRenderingContext2D, p1: TPoint, p2: TPoint)\n  {\n    this.#logger.debug(\"drawLine\", { context2D, p1, p2 })\n    context2D.save()\n    try {\n      context2D.beginPath()\n      context2D.moveTo(p1.x, p1.y)\n      context2D.lineTo(p2.x, p2.y)\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"drawLine\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawArrowHead(context2D: CanvasRenderingContext2D, headPoint: TPoint, angle: number, length: number)\n  {\n    this.#logger.debug(\"drawArrowHead\", { context2D, headPoint, angle, length })\n    const alpha = this.phi(angle + (Math.PI * (7 / 8)))\n    const beta = this.phi(angle - (Math.PI * (7 / 8)))\n    context2D.save()\n    try {\n      context2D.fillStyle = context2D.strokeStyle\n\n      context2D.moveTo(headPoint.x, headPoint.y)\n      context2D.beginPath()\n      context2D.lineTo(headPoint.x + (length * Math.cos(alpha)), headPoint.y + (length * Math.sin(alpha)))\n      context2D.lineTo(headPoint.x + (length * Math.cos(beta)), headPoint.y + (length * Math.sin(beta)))\n      context2D.lineTo(headPoint.x, headPoint.y)\n      context2D.fill()\n    } catch(error) {\n      this.#logger.error(\"drawArrowHead\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawShapeEllipse(context2D: CanvasRenderingContext2D, shapeEllipse: TCanvasShapeEllipseSymbol)\n  {\n    this.#logger.debug(\"drawShapeEllipse\", { context2D, shapeEllipse })\n    const points = this.drawEllipseArc(context2D, shapeEllipse)\n\n    if (shapeEllipse?.beginDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, points[0], shapeEllipse.beginTangentAngle, 12.0)\n    }\n    if (shapeEllipse?.endDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, points[1], shapeEllipse.endTangentAngle, 12.0)\n    }\n  }\n\n  protected drawShapeLine(context2D: CanvasRenderingContext2D, shapeLine: TCanvasShapeLineSymbol)\n  {\n    this.#logger.debug(\"drawShapeLine\", { context2D, shapeLine })\n    this.drawLine(context2D, shapeLine.firstPoint, shapeLine.lastPoint)\n    if (shapeLine.beginDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, shapeLine.firstPoint, shapeLine.beginTangentAngle, 12.0)\n    }\n    if (shapeLine.endDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, shapeLine.lastPoint, shapeLine.endTangentAngle, 12.0)\n    }\n  }\n\n  draw(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.info(\"draw\", { context2D, symbol })\n    context2D.save()\n    context2D.lineWidth = symbol.style.width as number\n    context2D.strokeStyle = symbol.style.color as string\n\n    switch (symbol.type) {\n      case this.symbols.table: {\n        const tableSymbols = symbol as TCanvasShapeTableSymbol\n        tableSymbols.lines.forEach(line => this.drawLine(context2D, line.p1, line.p2))\n        break\n      }\n      case this.symbols.ellipse: {\n        this.drawShapeEllipse(context2D, symbol as TCanvasShapeEllipseSymbol)\n        break\n      }\n      case this.symbols.line: {\n        this.drawShapeLine(context2D, symbol as TCanvasShapeLineSymbol)\n        break\n      }\n      default:\n        this.#logger.warn(\"draw\", `${ symbol.type } not implemented`)\n        break\n    }\n  }\n\n}\n","import { LoggerClass } from \"../../Constants\"\nimport { LoggerManager } from \"../../logger\"\nimport { Stroke, TPointer } from \"../../primitive\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererStroke\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RENDERER)\n\n  protected renderArc(context2d: CanvasRenderingContext2D, center: TPointer, radius: number): void\n  {\n    this.#logger.debug(\"renderArc\", { context2d, center, radius })\n    context2d.arc(center.x, center.y, radius, 0, Math.PI * 2, true)\n  }\n\n  protected renderLine(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderLine\", { context2d, begin, end, width })\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n\n    context2d.moveTo(linkPoints1[0].x, linkPoints1[0].y)\n    context2d.lineTo(linkPoints2[0].x, linkPoints2[0].y)\n    context2d.lineTo(linkPoints2[1].x, linkPoints2[1].y)\n    context2d.lineTo(linkPoints1[1].x, linkPoints1[1].y)\n  }\n\n  protected renderFinal(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderFinal\", { context2d, begin, end, width })\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    context2d.moveTo(linkPoints[0].x, linkPoints[0].y)\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - ((i * Math.PI) / ARCSPLIT)\n      context2d.lineTo(end.x - ((end.p * width) * Math.sin(newAngle)), end.y + (end.p * width * Math.cos(newAngle)))\n    }\n  }\n\n  protected renderQuadratic(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, ctrl: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderQuadratic\", { context2d, begin, end, ctrl, width })\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, ctrl), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(ctrl, end), width)\n    const linkPoints3 = computeLinksPointers(ctrl, computeAngleAxeRadian(begin, end), width)\n\n    context2d.moveTo(linkPoints1[0].x, linkPoints1[0].y)\n    context2d.quadraticCurveTo(linkPoints3[0].x, linkPoints3[0].y, linkPoints2[0].x, linkPoints2[0].y)\n    context2d.lineTo(linkPoints2[1].x, linkPoints2[1].y)\n    context2d.quadraticCurveTo(linkPoints3[1].x, linkPoints3[1].y, linkPoints1[1].x, linkPoints1[1].y)\n  }\n\n  draw(context2d: CanvasRenderingContext2D, stroke: Stroke): void\n  {\n    this.#logger.info(\"draw\", { context2d, stroke })\n    const NUMBER_POINTS = stroke.pointers.length\n    const NUMBER_QUADRATICS = NUMBER_POINTS - 2\n    const width = (stroke.style.width as number) > 0 ? (stroke.style.width as number) : context2d.lineWidth\n    const color = (stroke.style.color as string) ? (stroke.style.color as string) : context2d.strokeStyle\n    const firstPoint = stroke.pointers[0] as TPointer\n\n    context2d.save()\n    try {\n      context2d.beginPath()\n      if (NUMBER_POINTS < 3) {\n        this.renderArc(context2d, firstPoint, width * 0.6)\n      } else {\n        this.renderArc(context2d, firstPoint, width * firstPoint.p)\n        const secondPoint: TPointer = computeMiddlePointer(firstPoint, stroke.pointers[1])\n        this.renderLine(context2d, firstPoint, secondPoint, width)\n\n        // Possibility to try this (the start looks better when the ink is large)\n        // var first = computeMiddlePoint(stroke.pointers[0], stroke.pointers[1]);\n        // context2d.arc(first.x, first.y, width * first.p, 0, Math.PI * 2, true);\n\n        for (let i = 0; i < NUMBER_QUADRATICS; i++) {\n          const begin: TPointer = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n          const end: TPointer = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n          const ctrl: TPointer = stroke.pointers[i + 1]\n          this.renderQuadratic(context2d, begin, end, ctrl, width)\n        }\n        const beginLine: TPointer = computeMiddlePointer(stroke.pointers[NUMBER_POINTS - 2], stroke.pointers[NUMBER_POINTS - 1])\n        const endLine: TPointer = stroke.pointers[NUMBER_POINTS - 1]\n        this.renderLine(context2d, beginLine, endLine, width)\n\n        const beginFinal: TPointer = stroke.pointers[NUMBER_POINTS - 2]\n        const endFinal: TPointer = stroke.pointers[NUMBER_POINTS - 1]\n        this.renderFinal(context2d, beginFinal, endFinal, width)\n      }\n      context2d.closePath()\n      if (color !== undefined) {\n        context2d.fillStyle = color\n        context2d.fill()\n      }\n      context2d.save()\n    }\n    catch (error) {\n      this.#logger.error(\"draw\", { error })\n    }\n    finally {\n      context2d.restore()\n    }\n  }\n}\n","import { LoggerClass } from \"../../Constants\"\nimport { LoggerManager } from \"../../logger\"\nimport { TSymbol, TCanvasTextSymbol, TCanvasTextUnderlineSymbol, TCanvasUnderLineSymbol, TPoint } from \"../../primitive\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererText\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RENDERER)\n\n  symbols = {\n    char: \"char\",\n    string: \"string\",\n    textLine: \"textLine\"\n  }\n\n  protected drawUnderline(context2D: CanvasRenderingContext2D, textUnderline: TCanvasTextUnderlineSymbol, underline: TCanvasUnderLineSymbol)\n  {\n    this.#logger.debug(\"#drawUnderline\", { context2D, textUnderline, underline })\n    context2D.save()\n    try {\n      const delta = textUnderline.data.width / textUnderline.label.length\n      const p1: TPoint = {\n        x: textUnderline.data.topLeftPoint.x + (underline.data.firstCharacter * delta),\n        y: textUnderline.data.topLeftPoint.y + textUnderline.data.height\n      }\n      const p2: TPoint = {\n        x: textUnderline.data.topLeftPoint.x + (underline.data.lastCharacter * delta),\n        y: textUnderline.data.topLeftPoint.y + textUnderline.data.height\n      }\n      context2D.beginPath()\n      context2D.moveTo(p1.x, p1.y)\n      context2D.lineTo(p2.x, p2.y)\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"#drawUnderline\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawText(context2D: CanvasRenderingContext2D, text: TCanvasTextSymbol)\n  {\n    this.#logger.debug(\"#drawText\", { context2D, text })\n    context2D.save()\n    try {\n      context2D.font = `${ text.data.textHeight }px serif`\n      context2D.textAlign = (text.data.justificationType === \"CENTER\") ? \"center\" : \"left\"\n      context2D.textBaseline = \"bottom\"\n      context2D.fillStyle = context2D.strokeStyle\n      context2D.fillText(text.label, text.data.topLeftPoint.x, (text.data.topLeftPoint.y + text.data.height))\n    } catch(error) {\n      this.#logger.error(\"#drawText\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawTextLine(context2D: CanvasRenderingContext2D, textUnderline: TCanvasTextUnderlineSymbol)\n  {\n    this.#logger.debug(\"#drawTextLine\", { context2D, textUnderline })\n    this.drawText(context2D, textUnderline)\n    textUnderline.underlineList.forEach((underline) =>\n    {\n      this.drawUnderline(context2D, textUnderline, underline)\n    })\n  }\n\n  draw(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.info(\"draw\", { context2D, symbol })\n    context2D.lineWidth = (symbol.style.width as number)\n    context2D.strokeStyle = (symbol.style.color as string)\n    switch (symbol.type) {\n      case this.symbols.char:\n      case this.symbols.string:\n        this.drawText(context2D, symbol as TCanvasTextSymbol)\n        break\n      case this.symbols.textLine:\n        this.drawTextLine(context2D, symbol as TCanvasTextUnderlineSymbol)\n        break\n      default:\n        this.#logger.warn(\"draw\", `${symbol.type} not implemented`)\n        break\n    }\n  }\n}\n","import { LoggerClass } from \"../../Constants\"\nimport { TRenderingConfiguration } from \"../../configuration\"\nimport { LoggerManager } from \"../../logger\"\nimport { IModel } from \"../../model\"\nimport { Stroke, TSymbol } from \"../../primitive\"\nimport { CanvasRendererShape } from \"./CanvasRendererShape\"\nimport { CanvasRendererStroke } from \"./CanvasRendererStroke\"\nimport { CanvasRendererText } from \"./CanvasRendererText\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RENDERER)\n  configuration: TRenderingConfiguration\n  strokeRenderer: CanvasRendererStroke\n  shapeRenderer: CanvasRendererShape\n  textRenderer: CanvasRendererText\n  context!: {\n    parent: HTMLElement\n    renderingCanvas: HTMLCanvasElement\n    renderingCanvasContext: CanvasRenderingContext2D\n    capturingCanvas: HTMLCanvasElement\n    capturingCanvasContext: CanvasRenderingContext2D\n  }\n\n  constructor(config: TRenderingConfiguration)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = config\n    this.strokeRenderer = new CanvasRendererStroke()\n    this.shapeRenderer = new CanvasRendererShape()\n    this.textRenderer = new CanvasRendererText()\n  }\n\n  protected createCanvas(type: string): HTMLCanvasElement\n  {\n    this.#logger.debug(\"createCanvas\", { type })\n    const canvas: HTMLCanvasElement = document.createElement(\"canvas\")\n    canvas.id = type\n    canvas.classList.add(type)\n    canvas.classList.add(\"ms-canvas\")\n    return canvas\n  }\n\n  protected resizeContent(): void\n  {\n    const pixelRatio: number = window.devicePixelRatio\n    const elements: HTMLCanvasElement[] = [this.context.renderingCanvas, this.context.capturingCanvas]\n    elements.forEach((canvas) =>\n    {\n      const domElement = canvas.parentNode as HTMLElement\n      const width = Math.max(this.configuration.minWidth, domElement.clientWidth)\n      const height = Math.max(this.configuration.minHeight, domElement.clientHeight)\n      canvas.width = width * pixelRatio\n      canvas.height = height * pixelRatio\n      canvas.getContext(\"2d\")?.scale(pixelRatio, pixelRatio)\n      canvas.style.width = `${ width }px`\n      canvas.style.height = `${ height }px`\n    })\n  }\n\n  protected drawSymbol(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.debug(\"drawSymbol\", { symbol })\n    if (symbol.type === \"stroke\") {\n      const stroke = symbol as Stroke\n      if (stroke.pointerType !== \"eraser\") {\n        this.strokeRenderer.draw(context2D, stroke)\n      }\n    } else if (Object.keys(this.textRenderer.symbols).includes(symbol.type)) {\n      this.textRenderer.draw(context2D, symbol)\n    } else if (Object.keys(this.shapeRenderer.symbols).includes(symbol.type)) {\n      this.shapeRenderer.draw(context2D, symbol)\n    } else {\n      this.#logger.warn(\"drawSymbol\", `symbol type unknow: ${symbol.type}`)\n    }\n  }\n\n  init(element: HTMLElement): void\n  {\n    this.#logger.info(\"init\", { element })\n    const renderingCanvas: HTMLCanvasElement = this.createCanvas(\"ms-rendering-canvas\")\n    element.appendChild(renderingCanvas)\n\n    const capturingCanvas: HTMLCanvasElement = this.createCanvas(\"ms-capture-canvas\")\n    element.appendChild(capturingCanvas)\n\n    this.context = {\n      parent: element,\n      renderingCanvas,\n      renderingCanvasContext: renderingCanvas.getContext(\"2d\") as CanvasRenderingContext2D,\n      capturingCanvas,\n      capturingCanvasContext: capturingCanvas.getContext(\"2d\") as CanvasRenderingContext2D\n    }\n\n    this.resizeContent()\n  }\n\n  drawModel(model: IModel): void\n  {\n    this.#logger.info(\"drawModel\", { model })\n    this.context.renderingCanvasContext?.clearRect(0, 0, this.context.renderingCanvas.width, this.context.renderingCanvas.height)\n    model.symbols.forEach(symbol => this.drawSymbol(this.context.renderingCanvasContext, symbol))\n    this.context.capturingCanvasContext.clearRect(0, 0, this.context.capturingCanvas.width, this.context.capturingCanvas.height)\n  }\n\n  drawPendingStroke(stroke: Stroke | undefined): void\n  {\n    this.#logger.info(\"drawPendingStroke\", { stroke })\n    this.context.capturingCanvasContext.clearRect(0, 0, this.context.capturingCanvas.width, this.context.capturingCanvas.height)\n    if (stroke && stroke?.pointerType !== \"eraser\") {\n      this.strokeRenderer.draw(this.context.capturingCanvasContext, stroke)\n    }\n  }\n\n  resize(model: IModel): void\n  {\n    this.#logger.info(\"resize\", { model })\n    this.resizeContent()\n    this.drawModel(model)\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    if (this.context.parent) {\n      this.context.parent.innerHTML = \"\"\n    }\n  }\n}\n","import { TPointer, TStroke } from \"../../primitive\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\n\n/**\n * @group Renderer\n */\nexport class SVGStroker\n{\n\n  protected getArcPath(center: TPointer, radius: number): string\n  {\n    const svgPath = [\n      `M ${ center.x },${ center.y }`,\n      `m ${ -radius },0`,\n      `a ${ radius },${ radius } 0 1 0 ${ radius * 2 },0`,\n      `a ${ radius },${ radius } 0 1 0 ${ -(radius * 2) },0`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected getLinePath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x },${ linkPoints1[0].y }`,\n      `L ${ linkPoints2[0].x },${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x },${ linkPoints2[1].y }`,\n      `L ${ linkPoints1[1].x },${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected getFinalPath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    const parts = [`M ${ linkPoints[0].x },${ linkPoints[0].y }`]\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - (i * (Math.PI / ARCSPLIT))\n      parts.push(`L ${ end.x - (end.p * width * Math.sin(newAngle)) },${ end.y + (end.p * width * Math.cos(newAngle)) }`)\n    }\n    const svgPath = parts.join(\" \")\n    return svgPath\n  }\n\n  protected getQuadraticPath(begin: TPointer, end: TPointer, central: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, central), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(central, end), width)\n    const linkPoints3 = computeLinksPointers(central, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x },${ linkPoints1[0].y }`,\n      `Q ${ linkPoints3[0].x },${ linkPoints3[0].y } ${ linkPoints2[0].x },${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x },${ linkPoints2[1].y }`,\n      `Q ${ linkPoints3[1].x },${ linkPoints3[1].y } ${ linkPoints1[1].x },${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected buildSVGPath(stroke: TStroke): string\n  {\n    const STROKE_LENGTH = stroke.pointers.length\n    const STROKE_WIDTH = (stroke.style.width as number)\n    const NB_QUADRATICS = STROKE_LENGTH - 2\n    const firstPoint = stroke.pointers[0]\n\n    const parts = []\n    if (STROKE_LENGTH < 3) {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * 0.6))\n    } else {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * firstPoint.p))\n      parts.push(this.getLinePath(firstPoint, computeMiddlePointer(firstPoint, stroke.pointers[1]), STROKE_WIDTH))\n\n      for (let i = 0; i < NB_QUADRATICS; i++) {\n        const begin = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n        const end = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n        const central = stroke.pointers[i + 1]\n        parts.push(this.getQuadraticPath(begin, end, central, STROKE_WIDTH)\n        )\n      }\n      const beforeLastPoint = stroke.pointers[STROKE_LENGTH - 2]\n      const lastPoint = stroke.pointers[STROKE_LENGTH - 1]\n      parts.push(this.getLinePath(computeMiddlePointer(beforeLastPoint, lastPoint), lastPoint, STROKE_WIDTH))\n      parts.push(this.getFinalPath(beforeLastPoint, lastPoint, STROKE_WIDTH))\n    }\n    return parts.join(\" \")\n  }\n\n  drawStroke(svgElement: SVGElement, stroke: TStroke, attrs?: { name: string, value: string }[]): void\n  {\n    const svgPathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\")\n    svgPathElement.classList.add(\"pending-stroke\")\n    svgPathElement.setAttribute(\"id\", stroke.id)\n    svgPathElement.setAttribute(\"type\", stroke.pointerType)\n    attrs?.forEach(a =>\n    {\n      svgPathElement.setAttribute(a.name, a.value)\n    })\n    const svgPath = this.buildSVGPath(stroke)\n    svgPathElement.setAttribute(\"d\", `${ svgPath }Z`)\n    svgElement.appendChild(svgPathElement)\n  }\n}\n","import { LoggerClass } from \"../../Constants\"\nimport { TRenderingConfiguration } from \"../../configuration\"\nimport { LoggerManager } from \"../../logger\"\nimport { IModel } from \"../../model\"\nimport { TStroke } from \"../../primitive\"\nimport { TUpdatePatch, TUpdatePatchAppendChild, TUpdatePatchInsertBefore, TUpdatePatchRemoveAttribut, TUpdatePatchRemoveChild, TUpdatePatchRemoveElement, TUpdatePatchReplaceAll, TUpdatePatchReplaceELement, TUpdatePatchSetAttribut } from \"../../recognizer\"\nimport { SVGStroker } from \"./SVGStroker\"\n\n/**\n * @group Renderer\n */\nexport class WSSVGRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RENDERER)\n\n  config: TRenderingConfiguration\n  stroker: SVGStroker\n  context!: {\n    parent: HTMLElement\n  }\n\n  constructor(config: TRenderingConfiguration)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.config = config\n    this.stroker = new SVGStroker()\n  }\n\n  init(element: HTMLElement): void\n  {\n    this.#logger.info(\"init\", { element })\n    element.style.fontSize = \"10px\"\n    this.context = {\n      parent: element\n    }\n  }\n\n  protected drawStroke(svgElement: SVGElement, stroke: TStroke)\n  {\n    let style: string\n    if (stroke.pointerType === \"eraser\") {\n      stroke.style.width = 20\n      style = \"fill:grey;stroke:transparent;shadowBlur:5;opacity:0.2;\"\n    } else {\n      style = `fill:${ stroke.style.color };stroke:transparent;`\n    }\n    this.stroker.drawStroke(svgElement, stroke, [{ name: \"style\", value: style }])\n  }\n\n  protected replaceAll(layerName: string, update: TUpdatePatchReplaceAll): void\n  {\n    const oldLayer = this.context.parent.querySelector(`svg[data-layer=\"${ layerName }\"]`) as SVGElement | null\n    oldLayer?.remove()\n    this.context.parent.insertAdjacentHTML(\"beforeend\", update.svg)\n    const layer = this.context.parent.querySelector(`svg[data-layer=\"${ layerName }\"]`) as SVGElement\n    if (layerName === \"MODEL\") {\n      const pendingStrokesGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n      pendingStrokesGroup.id = \"pendingStrokes\"\n      layer.appendChild(pendingStrokesGroup)\n    }\n  }\n\n  protected replaceElement(update: TUpdatePatchReplaceELement): void\n  {\n    const elementToRemove = this.context.parent.querySelector(`#${ update.id }`) as HTMLElement | null\n    if (elementToRemove) {\n      const parent = elementToRemove.parentNode as HTMLElement | null | undefined\n      elementToRemove?.remove()\n      parent?.insertAdjacentHTML(\"beforeend\", update.svg)\n    }\n  }\n\n  protected appendChild(layerName: string, update: TUpdatePatchAppendChild): void\n  {\n    const parentSelector = update.parentId ? `#${ update.parentId }` : `svg[data-layer=\"${ layerName }\"]`\n    const parent = this.context.parent.querySelector(parentSelector) as HTMLElement\n    parent?.insertAdjacentHTML(\"beforeend\", update.svg)\n  }\n\n  protected removeChild(update: TUpdatePatchRemoveChild): void\n  {\n    this.context.parent.querySelector(`#${ update.parentId } > *:nth-child(${ update.index + 1 })`)?.remove()\n  }\n\n  protected removeElement(update: TUpdatePatchRemoveElement): void\n  {\n    const elementToRemove = this.context.parent.querySelector(`#${ update.id }`)\n    if (elementToRemove) {\n      if (update.id.includes(\"s\") || update.id.includes(\"MODEL\")) {\n        elementToRemove.remove()\n      } else {\n        elementToRemove.setAttribute(\"class\", \"removed-stroke\")\n        setTimeout(() =>\n        {\n          elementToRemove?.remove()\n        }, 100)\n      }\n    }\n  }\n\n  protected insertBefore(update: TUpdatePatchInsertBefore): void\n  {\n    const parent = this.context.parent.querySelector(`#${ update.refId }`) as HTMLElement | null\n    parent?.insertAdjacentHTML(\"beforebegin\", update.svg)\n  }\n\n  protected setAttribute(update: TUpdatePatchSetAttribut): void\n  {\n    const selector = update.id ? `#${ update.id }` : \"svg\"\n    const element = this.context.parent.querySelector(selector) as HTMLElement | null\n    element?.setAttribute(update.name, update.value)\n  }\n\n  protected removeAttribute(update: TUpdatePatchRemoveAttribut): void\n  {\n    const selector = update.id ? `#${ update.id }` : \"svg\"\n    const element = this.context.parent.querySelector(selector) as HTMLElement | null\n    element?.removeAttribute(update.name)\n  }\n\n  updateLayer(layerName: string, update: TUpdatePatch): void\n  {\n    this.#logger.info(\"updateLayer\", { layerName, update })\n    switch (update.type) {\n      case \"REPLACE_ALL\":\n        this.replaceAll(layerName, update as TUpdatePatchReplaceAll)\n        break\n      case \"REPLACE_ELEMENT\":\n        this.replaceElement(update as TUpdatePatchReplaceELement)\n        break\n      case \"APPEND_CHILD\":\n        this.appendChild(layerName, update as TUpdatePatchAppendChild)\n        break\n      case \"REMOVE_ELEMENT\":\n        this.removeElement(update as TUpdatePatchRemoveElement)\n        break\n      case \"REMOVE_CHILD\":\n        this.removeChild(update as TUpdatePatchRemoveChild)\n        break\n      case \"INSERT_BEFORE\":\n        this.insertBefore(update as TUpdatePatchInsertBefore)\n        break\n      case \"SET_ATTRIBUTE\":\n        this.setAttribute(update as TUpdatePatchSetAttribut)\n        break\n      case \"REMOVE_ATTRIBUTE\":\n        this.removeAttribute(update as TUpdatePatchRemoveAttribut)\n        break\n      default:\n        this.#logger.warn(\"updateLayer\", `update.type unknow ${update.type}`)\n        break\n    }\n  }\n\n  updatesLayer(layerName: string, updates: TUpdatePatch[]): void\n  {\n    this.#logger.info(\"updatesLayer\", { layerName, updates })\n    updates.forEach(u => this.updateLayer(layerName, u))\n    this.clearPendingStroke()\n  }\n\n  clearPendingStroke(): void\n  {\n    this.#logger.info(\"clearPendingStroke\")\n    const pendingStrokeGroup = this.context.parent.querySelector(\"#pendingStrokes\") as SVGElement\n    if (pendingStrokeGroup) {\n      pendingStrokeGroup.innerHTML = \"\"\n    }\n  }\n\n  drawPendingStroke(stroke: TStroke): void\n  {\n    this.#logger.info(\"drawPendingStroke\", { stroke })\n    if (stroke) {\n      const pendingStrokeGroup = this.context.parent.querySelector(\"#pendingStrokes\") as SVGElement\n      if (pendingStrokeGroup) {\n        const oldStroke = pendingStrokeGroup.querySelector(`#${ stroke?.id }`)\n        if (oldStroke) {\n          oldStroke.remove()\n        }\n        this.drawStroke(pendingStrokeGroup, stroke)\n      }\n    }\n  }\n\n  clearErasingStrokes(): void\n  {\n    const erasingStrokeList = this.context.parent.querySelectorAll(\"[type=eraser]\") as NodeListOf<SVGElement>\n    erasingStrokeList.forEach(erasingStroke => {\n      erasingStroke.remove()\n    })\n  }\n\n  resize(model: IModel): void\n  {\n    this.#logger.info(\"resize\", { model })\n    const rect = this.context.parent.getBoundingClientRect()\n    const svgList = this.context.parent.querySelectorAll(\"svg\")\n    const width = Math.max(rect.width, model.width)\n    const height = Math.max(rect.height, model.height)\n    svgList.forEach(svg =>\n    {\n      svg.setAttribute(\"viewBox\", `0 0 ${ width }, ${ height }`)\n      svg.setAttribute(\"width\", `${ width }px`)\n      svg.setAttribute(\"height\", `${ height }px`)\n    })\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\", { context: this.context })\n    if (this.context?.parent) {\n      this.context.parent.querySelectorAll(\"svg\").forEach(n => n.remove())\n    }\n  }\n}\n","import { IModel } from \"../model\"\n\n/**\n * @group UndoRedo\n */\nexport type TUndoRedoContext = {\n  canUndo: boolean\n  canRedo: boolean\n  empty: boolean\n  stackIndex: number\n  possibleUndoCount: number\n  stack: IModel[]\n}\n\n/**\n * @group UndoRedo\n */\nexport class UndoRedoContext implements TUndoRedoContext\n{\n  canUndo: boolean\n  canRedo: boolean\n  empty: boolean\n  stackIndex: number\n  possibleUndoCount: number\n  stack: IModel[]\n\n  constructor(model: IModel)\n  {\n    this.stackIndex = 0\n    this.possibleUndoCount = 0\n    this.canRedo = false\n    this.canUndo = false\n    this.empty = true\n    this.stack = [model.getClone()]\n  }\n}\n","import { LoggerClass } from \"../Constants\"\nimport { TUndoRedoConfiguration } from \"../configuration\"\nimport { InternalEvent } from \"../event\"\nimport { LoggerManager } from \"../logger\"\nimport { IModel } from \"../model\"\nimport { UndoRedoContext } from \"./UndoRedoContext\"\n\n/**\n * @group UndoRedo\n */\nexport class UndoRedoManager\n{\n  #logger = LoggerManager.getLogger(LoggerClass.UNDO_REDO)\n\n  context: UndoRedoContext\n  configuration: TUndoRedoConfiguration\n\n  constructor(configuration: TUndoRedoConfiguration, model: IModel)\n  {\n    this.#logger.info(\"constructor\", { configuration, model })\n    this.configuration = configuration\n    this.context = new UndoRedoContext(model)\n  }\n\n  get internalEvent(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  private updateCanUndoRedo(): void\n  {\n    this.context.canRedo = this.context.stack.length - 1 > this.context.stackIndex\n    this.context.canUndo = this.context.stackIndex > 0\n    const currentModel = this.context.stack[this.context.stackIndex]\n    this.context.empty = currentModel.symbols.length === 0\n  }\n\n  addModelToStack(model: IModel): void\n  {\n    this.#logger.info(\"addModelToStack\", { model })\n    if (this.context.stackIndex + 1 < this.context.stack.length) {\n      this.context.stack.splice(this.context.stackIndex + 1)\n    }\n\n    this.context.stack.push(model.getClone())\n    this.context.stackIndex = this.context.stack.length - 1\n\n    if (this.context.stack.length > this.configuration.maxStackSize) {\n      this.context.stack.shift()\n      this.context.stackIndex--\n    }\n\n    this.updateCanUndoRedo()\n    this.internalEvent.emitContextChange(this.context)\n  }\n\n  removeLastModelInStack(): void\n  {\n    this.#logger.info(\"removeLastModelInStack\")\n    if (this.context.stackIndex === this.context.stack.length - 1) {\n      this.context.stackIndex--\n    }\n    this.context.stack.pop()\n    this.updateCanUndoRedo()\n  }\n\n  updateModelInStack(model: IModel): void\n  {\n    this.#logger.info(\"updateModelInStack\", { model })\n    const index = this.context.stack.findIndex(m => m.modificationDate === model.modificationDate)\n    if (index > -1) {\n      this.context.stack.splice(index, 1, model.getClone())\n    }\n    this.updateCanUndoRedo()\n    this.internalEvent.emitContextChange(this.context)\n  }\n\n  undo(): IModel\n  {\n    this.#logger.info(\"undo\")\n    if (this.context.canUndo) {\n      this.context.stackIndex--\n      this.updateCanUndoRedo()\n      this.internalEvent.emitContextChange(this.context)\n    }\n    const previousModel = this.context.stack[this.context.stackIndex].getClone()\n    this.#logger.debug(\"undo\", previousModel)\n    return previousModel\n  }\n\n  redo(): IModel\n  {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.context.stackIndex++\n      this.updateCanUndoRedo()\n      this.internalEvent.emitContextChange(this.context)\n    }\n    const nextModel = this.context.stack[this.context.stackIndex].getClone()\n    this.#logger.debug(\"redo\", nextModel)\n    return nextModel\n  }\n\n  reset(model: IModel): void\n  {\n    this.#logger.info(\"reset\", { model })\n    this.context = new UndoRedoContext(model)\n    this.internalEvent.emitContextChange(this.context)\n  }\n\n}\n","import { Intention, LoggerClass } from \"../Constants\"\nimport { Configuration, TConfiguration, TConverstionState } from \"../configuration\"\nimport { InternalEvent } from \"../event\"\nimport { PointerEventGrabber } from \"../grabber\"\nimport { LoggerManager } from \"../logger\"\nimport { IModel, Model, TExport } from \"../model\"\nimport { Stroke, TStroke, TPointer } from \"../primitive\"\nimport { RestRecognizer } from \"../recognizer\"\nimport { CanvasRenderer } from \"../renderer\"\nimport { DefaultPenStyle, StyleManager, TPenStyle, TTheme } from \"../style\"\nimport { TUndoRedoContext, UndoRedoManager } from \"../undo-redo\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { IBehaviors, TBehaviorOptions } from \"./IBehaviors\"\n\n/**\n * @group Behavior\n */\nexport class RestBehaviors implements IBehaviors\n{\n  name = \"RestBehaviors\"\n  #logger = LoggerManager.getLogger(LoggerClass.BEHAVIORS)\n  #configuration: TConfiguration\n  #model: Model\n  #resizeTimer?: ReturnType<typeof setTimeout>\n  #exportTimer?: ReturnType<typeof setTimeout>\n\n  grabber: PointerEventGrabber\n  renderer: CanvasRenderer\n  recognizer: RestRecognizer\n  undoRedoManager: UndoRedoManager\n  styleManager: StyleManager\n  intention: Intention\n\n  constructor(options: PartialDeep<TBehaviorOptions>)\n  {\n    this.#logger.info(\"constructor\", { options })\n    this.#configuration = new Configuration(options?.configuration)\n    this.styleManager = new StyleManager(options?.penStyle, options?.theme)\n\n    this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    this.renderer = new CanvasRenderer(this.#configuration.rendering)\n    this.recognizer = new RestRecognizer(this.#configuration.server, this.#configuration.recognition)\n\n    this.intention = Intention.Write\n    this.#model = new Model()\n    this.undoRedoManager = new UndoRedoManager(this.#configuration[\"undo-redo\"], this.model)\n  }\n\n  protected onPointerDown(evt: PointerEvent, point: TPointer): void\n  {\n    this.#logger.info(\"onPointerDown\", { intention: this.intention, evt, point })\n    const { pointerType } = evt\n    const style: TPenStyle = Object.assign({}, this.theme?.ink, this.currentPenStyle)\n    switch (this.intention) {\n      case Intention.Erase: {\n        if (this.model.removeStrokesFromPoint(point).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case Intention.Write:\n        this.model.initCurrentStroke(point, evt.pointerId, pointerType, style)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.#logger.warn(\"#onPointerDown\", `onPointerDown intention unknow: \"${ this.intention }\"`)\n        break\n    }\n  }\n\n  protected onPointerMove(_evt: PointerEvent, point: TPointer): void\n  {\n    this.#logger.info(\"onPointerMove\", { intention: this.intention, point })\n    switch (this.intention) {\n      case Intention.Erase: {\n        if (this.model.removeStrokesFromPoint(point).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case Intention.Write:\n        this.model.appendToCurrentStroke(point)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.#logger.warn(\"#onPointerMove\", `onPointerMove intention unknow: \"${ this.intention }\"`)\n        break\n    }\n  }\n\n  protected async onPointerUp(_evt: PointerEvent, point: TPointer): Promise<void>\n  {\n    this.#logger.info(\"onPointerUp\", { intention: this.intention, point })\n    switch (this.intention) {\n      case Intention.Erase:\n        this.model.removeStrokesFromPoint(point)\n        if (this.context.stack.at(-1)?.modificationDate !== this.model.modificationDate) {\n          await this.updateModelRendering()\n        }\n        break\n      case Intention.Write:\n        this.model.endCurrentStroke(point)\n        await this.updateModelRendering()\n        break\n      default:\n        this.#logger.warn(\"#onPointerUp\", `onPointerUp intention unknow: \"${ this.intention }\"`)\n        break\n    }\n  }\n\n  get internalEvent(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  get model(): Model\n  {\n    return this.#model\n  }\n\n  get context(): TUndoRedoContext\n  {\n    return this.undoRedoManager.context\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.styleManager.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.styleManager.penStyle\n  }\n  async setPenStyle(penStyle?: TPenStyle | undefined): Promise<void>\n  {\n    this.#logger.info(\"setPenStyle\", { penStyle })\n    this.styleManager.setPenStyle(penStyle)\n    return Promise.resolve()\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.styleManager.penStyleClasses\n  }\n  async setPenStyleClasses(penStyleClasses?: string | undefined): Promise<void>\n  {\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClasses })\n    this.styleManager.setPenStyleClasses(penStyleClasses)\n    return Promise.resolve()\n  }\n\n  get theme(): TTheme\n  {\n    return this.styleManager.theme\n  }\n  async setTheme(theme?: PartialDeep<TTheme>): Promise<void>\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    this.styleManager.setTheme(theme)\n    return Promise.resolve()\n  }\n\n  get configuration(): TConfiguration\n  {\n    return this.#configuration\n  }\n\n  async init(domElement: HTMLElement): Promise<void>\n  {\n    this.#logger.info(\"init\", { domElement })\n    this.model.width = Math.max(domElement.clientWidth, this.#configuration.rendering.minWidth)\n    this.model.height = Math.max(domElement.clientHeight, this.#configuration.rendering.minHeight)\n    this.undoRedoManager.updateModelInStack(this.model)\n\n    this.renderer.init(domElement)\n\n    this.grabber.attach(domElement)\n    this.grabber.onPointerDown = this.onPointerDown.bind(this)\n    this.grabber.onPointerMove = this.onPointerMove.bind(this)\n    this.grabber.onPointerUp = this.onPointerUp.bind(this)\n    return Promise.resolve()\n  }\n\n  drawCurrentStroke(): void\n  {\n    this.#logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    this.renderer.drawPendingStroke(this.model.currentSymbol)\n  }\n\n  async updateModelRendering(): Promise<IModel>\n  {\n    this.#logger.info(\"updateModelRendering\")\n    this.renderer.drawModel(this.model)\n    const deferred = new DeferredPromise<Model>()\n    this.undoRedoManager.addModelToStack(this.model)\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      clearTimeout(this.#exportTimer)\n      let currentModel = this.model.getClone()\n      this.#exportTimer = setTimeout(async () =>\n      {\n        try {\n          currentModel = await this.recognizer.export(currentModel)\n          this.undoRedoManager.updateModelInStack(currentModel)\n          if (this.model.modificationDate === currentModel.modificationDate) {\n            this.model.exports = currentModel.exports\n          }\n          deferred.resolve(this.model)\n        } catch (error) {\n          this.#logger.error(\"updateModelRendering\", { error })\n          this.internalEvent.emitError(error as Error)\n          deferred.reject(error as Error)\n        }\n      }, this.#configuration.triggers.exportContent === \"QUIET_PERIOD\" ? this.#configuration.triggers.exportContentDelay : 0)\n    } else {\n      deferred.resolve(this.model)\n    }\n    await deferred.promise\n    this.internalEvent.emitExported(this.model.exports as TExport)\n    this.#logger.debug(\"updateModelRendering\", this.model.exports)\n    return deferred.promise\n  }\n\n  async export(mimeTypes?: string[]): Promise<IModel>\n  {\n    this.#logger.info(\"export\", { mimeTypes })\n    const newModel = await this.recognizer.export(this.model.getClone(), mimeTypes)\n    if (this.model.modificationDate === newModel.modificationDate) {\n      this.model.mergeExport(newModel.exports as TExport)\n    }\n    this.undoRedoManager.updateModelInStack(newModel)\n    this.#logger.debug(\"export\", this.model)\n    return this.model\n  }\n\n  async convert(conversionState?: TConverstionState, requestedMimeTypes?: string[]): Promise<IModel>\n  {\n    this.#logger.info(\"convert\", { conversionState, requestedMimeTypes })\n    const newModel = await this.recognizer.convert(this.model, conversionState, requestedMimeTypes)\n    Object.assign(this.#model, newModel)\n    this.#logger.debug(\"convert\", this.model)\n    return this.model\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<IModel>\n  {\n    const errors: string[] = []\n    strokes.forEach((s, strokeIndex) =>\n    {\n      let flag = true\n      const stroke = new Stroke(s.style || DefaultPenStyle, s.pointerId || 1)\n      if (s.id) stroke.id = s.id\n      if (!s.pointers?.length) {\n        errors.push(`stroke ${strokeIndex + 1} has not pointers`)\n        flag = false\n        return\n      }\n      s.pointers?.forEach((pp, pIndex) => {\n        if (!pp) {\n          errors.push(`stroke ${strokeIndex + 1} has no pointer at ${pIndex}`)\n          flag = false\n          return\n        }\n        const pointer: TPointer = {\n          p: pp.p || 1,\n          t: pp.t || pIndex,\n          x: 0,\n          y: 0\n        }\n        if (pp?.x == undefined || pp?.x == null) {\n          errors.push(`stroke ${strokeIndex + 1} has no x at pointer at ${pIndex}`)\n          flag = false\n          return\n        }\n        else {\n          pointer.x = pp.x\n        }\n        if (pp?.y == undefined || pp?.y == null) {\n          errors.push(`stroke ${strokeIndex + 1} has no y at pointer at ${pIndex}`)\n          flag = false\n          return\n        }\n        else {\n          pointer.y = pp.y\n        }\n        if (flag) {\n          stroke.pointers.push(pointer)\n        }\n      })\n      if (flag) {\n        this.model.addStroke(stroke)\n      }\n    })\n\n    if (errors.length) {\n      this.internalEvent.emitError( new Error(errors.join(\"\\n\")))\n    }\n    try {\n      const newModel = await this.updateModelRendering()\n      Object.assign(this.#model, newModel)\n      return this.model\n    } catch (error) {\n      this.internalEvent.emitError(error as Error)\n      throw error as Error\n    }\n  }\n\n  async resize(height: number, width: number): Promise<IModel>\n  {\n    this.#logger.info(\"resize\", { height, width })\n    const deferredResize = new DeferredPromise<Model>()\n    this.model.height = height\n    this.model.width = width\n    this.renderer.resize(this.model)\n    if (this.model.symbols.length) {\n      clearTimeout(this.#resizeTimer)\n      this.#resizeTimer = setTimeout(async () =>\n      {\n        const resizeModel = await this.recognizer.resize(this.model)\n        deferredResize.resolve(resizeModel)\n      }, this.#configuration.triggers.resizeTriggerDelay)\n    } else {\n      deferredResize.resolve(this.model)\n    }\n    this.#model = await deferredResize.promise\n    this.#logger.debug(\"resize\", { model: this.model })\n    this.internalEvent.emitExported(this.model.exports as TExport)\n    return this.model\n  }\n\n  async undo(): Promise<IModel>\n  {\n    this.#logger.info(\"undo\")\n    this.#model = this.undoRedoManager.undo() as Model\n    this.renderer.drawModel(this.#model)\n    this.#model = await this.recognizer.export(this.#model)\n    this.undoRedoManager.updateModelInStack(this.#model)\n    this.internalEvent.emitExported(this.#model.exports as TExport)\n    this.#logger.debug(\"undo\", this.#model)\n    return this.#model\n  }\n\n  async redo(): Promise<IModel>\n  {\n    this.#logger.info(\"redo\")\n    this.#model = this.undoRedoManager.redo() as Model\n    this.renderer.drawModel(this.#model)\n    this.#model = await this.recognizer.export(this.#model)\n    this.undoRedoManager.updateModelInStack(this.#model)\n    this.internalEvent.emitExported(this.#model.exports as TExport)\n    this.#logger.debug(\"redo\", this.#model)\n    return this.#model\n  }\n\n  async clear(): Promise<IModel>\n  {\n    this.#logger.info(\"clear\")\n    this.model.clear()\n    this.undoRedoManager.addModelToStack(this.model)\n    this.renderer.drawModel(this.model)\n    this.internalEvent.emitExported(this.model.exports as TExport)\n    this.#logger.debug(\"clear\", this.model)\n    return this.model\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.#logger.info(\"destroy\")\n    this.grabber.detach()\n    this.renderer.destroy()\n    return Promise.resolve()\n  }\n}\n","import { Intention, LoggerClass } from \"../Constants\"\nimport { Configuration, TConfiguration, TConverstionState } from \"../configuration\"\nimport { InternalEvent } from \"../event\"\nimport { PointerEventGrabber } from \"../grabber\"\nimport { LoggerManager } from \"../logger\"\nimport { IModel, Model, TExport } from \"../model\"\nimport { TWSMessageEventSVGPatch, WSRecognizer } from \"../recognizer\"\nimport { WSSVGRenderer } from \"../renderer\"\nimport { DefaultPenStyle, StyleManager, TPenStyle, TTheme } from \"../style\"\nimport { TUndoRedoContext, UndoRedoManager } from \"../undo-redo\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { Stroke, TStroke, TPointer } from \"../primitive\"\nimport { IBehaviors, TBehaviorOptions } from \"./IBehaviors\"\n\n/**\n * @group Behavior\n */\nexport class WSBehaviors implements IBehaviors\n{\n  name = \"WSBehaviors\"\n  #logger = LoggerManager.getLogger(LoggerClass.BEHAVIORS)\n  #configuration: TConfiguration\n  #model: Model\n  #resizeTimer?: ReturnType<typeof setTimeout>\n\n  grabber: PointerEventGrabber\n  renderer: WSSVGRenderer\n  recognizer: WSRecognizer\n  undoRedoManager: UndoRedoManager\n  styleManager: StyleManager\n  intention: Intention\n\n\n  constructor(options: PartialDeep<TBehaviorOptions>)\n  {\n    this.#logger.info(\"constructor\", { options })\n    this.#configuration = new Configuration(options?.configuration)\n    this.styleManager = new StyleManager(options?.penStyle, options?.theme)\n\n    this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    this.renderer = new WSSVGRenderer(this.#configuration.rendering)\n    this.recognizer = new WSRecognizer(this.#configuration.server, this.#configuration.recognition)\n\n    this.intention = Intention.Write\n    this.#model = new Model()\n    this.undoRedoManager = new UndoRedoManager(this.#configuration[\"undo-redo\"], this.model)\n  }\n\n  get internalEvent(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  get model(): Model\n  {\n    return this.#model\n  }\n\n  get context(): TUndoRedoContext\n  {\n    return this.undoRedoManager.context\n  }\n\n  get configuration(): TConfiguration\n  {\n    return this.#configuration\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.styleManager.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.styleManager.penStyle\n  }\n  setPenStyle(penStyle?: PartialDeep<TPenStyle>): Promise<void>\n  {\n    this.#logger.info(\"setPenStyle\", { penStyle })\n    this.styleManager.setPenStyle(penStyle)\n    this.#logger.debug(\"setPenStyle\", this.styleManager.penStyle)\n    return this.recognizer.setPenStyle(this.styleManager.penStyle)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.styleManager.penStyleClasses\n  }\n  setPenStyleClasses(penClass?: string): Promise<void>\n  {\n    this.#logger.info(\"setPenStyleClasses\", { penClass })\n    this.styleManager.setPenStyleClasses(penClass)\n    this.#logger.debug(\"setPenStyleClasses\", this.styleManager.penStyleClasses)\n    return this.recognizer.setPenStyleClasses(this.styleManager.penStyleClasses)\n  }\n\n  get theme(): TTheme\n  {\n    return this.styleManager.theme\n  }\n  setTheme(theme?: PartialDeep<TTheme>): Promise<void>\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    this.styleManager.setTheme(theme)\n    this.#logger.debug(\"setTheme\", this.styleManager.theme)\n    return this.recognizer.setTheme(this.styleManager.theme)\n  }\n\n  protected onExport(exports: TExport): void\n  {\n    this.#logger.debug(\"onExport\", { exports })\n    this.model.mergeExport(exports)\n  }\n\n  protected onPointerDown(evt: PointerEvent, point: TPointer): void\n  {\n    this.#logger.info(\"onPointerDown\", { intention: this.intention, evt, point })\n    let { pointerType } = evt\n    const style: TPenStyle = Object.assign({}, this.theme?.ink, this.currentPenStyle)\n    if (this.intention === Intention.Erase) {\n      pointerType = \"eraser\"\n    }\n    this.model.initCurrentStroke(point, evt.pointerId, pointerType, style)\n    this.drawCurrentStroke()\n  }\n\n  protected onPointerMove(_evt: PointerEvent, point: TPointer): void\n  {\n    this.#logger.info(\"onPointerMove\", { intention: this.intention, point })\n    this.model.appendToCurrentStroke(point)\n    this.drawCurrentStroke()\n  }\n\n  protected async onPointerUp(_evt: PointerEvent, point: TPointer): Promise<void>\n  {\n    try {\n      this.#logger.info(\"onPointerUp\", { intention: this.intention, point })\n      this.model.endCurrentStroke(point)\n      await this.synchronizeModelWithBackend()\n    } catch (error) {\n      this.internalEvent.emitError(error as Error)\n    }\n  }\n\n  protected onSVGPatch(evt: TWSMessageEventSVGPatch): void\n  {\n    this.#logger.info(\"onSVGPatch\", { evt })\n    this.renderer.updatesLayer(evt.layer, evt.updates)\n  }\n\n  async init(domElement: HTMLElement): Promise<void>\n  {\n    this.#logger.info(\"init\", { domElement })\n    const compStyles = window.getComputedStyle(domElement);\n    this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\",\"\")), this.#configuration.rendering.minWidth)\n    this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\",\"\")), this.#configuration.rendering.minHeight)\n    this.undoRedoManager.updateModelInStack(this.model)\n\n    this.renderer.init(domElement)\n\n    this.grabber.attach(domElement)\n    this.grabber.onPointerDown = this.onPointerDown.bind(this)\n    this.grabber.onPointerMove = this.onPointerMove.bind(this)\n    this.grabber.onPointerUp = this.onPointerUp.bind(this)\n\n    this.internalEvent.addExportedListener(this.onExport.bind(this))\n    this.internalEvent.addSVGPatchListener(this.onSVGPatch.bind(this))\n\n    await this.recognizer.init(this.model.height, this.model.width)\n    await this.setPenStyle(this.penStyle)\n    await this.setTheme(this.theme as PartialDeep<TTheme>)\n    await this.setPenStyleClasses(this.penStyleClasses)\n  }\n\n  drawCurrentStroke(): void\n  {\n    this.#logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    const currentSymbol = this.model.currentSymbol as Stroke\n    if (currentSymbol) {\n      this.renderer.drawPendingStroke(currentSymbol)\n    }\n  }\n\n  async synchronizeModelWithBackend(): Promise<IModel>\n  {\n    this.#logger.info(\"synchronizeModelWithBackend\")\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      const unsentStrokes = this.model.extractUnsentStrokes()\n      this.model.updatePositionSent()\n      this.undoRedoManager.addModelToStack(this.model)\n      this.renderer.clearErasingStrokes()\n      const exports = await this.recognizer.addStrokes(unsentStrokes)\n      this.model.mergeExport(exports)\n      this.undoRedoManager.updateModelInStack(this.model)\n    }\n    this.#logger.debug(\"synchronizeModelWithBackend\", this.model)\n    return this.model\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    return this.recognizer.waitForIdle()\n  }\n\n  async export(mimeTypes?: string[]): Promise<IModel>\n  {\n    this.#logger.info(\"export\", { mimeTypes })\n    try {\n      if (this.#configuration.triggers.exportContent === \"DEMAND\") {\n        const unsentStrokes = this.model.extractUnsentStrokes()\n        this.model.updatePositionSent()\n        const exports = await this.recognizer.addStrokes(unsentStrokes)\n        this.model.updatePositionReceived()\n        this.model.mergeExport(exports)\n        this.#logger.debug(\"export\", this.model)\n        return this.model\n      } else {\n        return this.recognizer.export(this.model, mimeTypes)\n      }\n    } catch (error) {\n      this.#logger.error(\"export\", { error } )\n      this.internalEvent.emitError(error as Error)\n      return Promise.reject(error)\n    }\n  }\n\n  async convert(conversionState?: TConverstionState): Promise<IModel>\n  {\n    this.#logger.info(\"convert\", { conversionState })\n    this.undoRedoManager.addModelToStack(this.model)\n    this.context.stack.push(this.model.getClone())\n    this.#model = await this.recognizer.convert(this.model, conversionState)\n    this.#logger.debug(\"convert\", this.model)\n    this.undoRedoManager.addModelToStack(this.model)\n    return this.model\n  }\n\n  async import(data: Blob, mimeType?: string): Promise<IModel>\n  {\n    this.#logger.info(\"import\", { data, mimeType })\n    this.context.stack.push(this.model.getClone())\n    const m = await this.recognizer.import(this.model, data, mimeType)\n    this.undoRedoManager.addModelToStack(m)\n    return m\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<IModel>\n  {\n    this.#logger.info(\"importPointEvents\", { strokes })\n    const errors: string[] = []\n    const strokesToImport = strokes.map((s, strokeIndex) => {\n      const str = new Stroke(s.style || DefaultPenStyle, s.pointerId || 1)\n      if (s.id) str.id = s.id\n      if (s.pointerType) str.pointerType = s.pointerType\n      if (!s.pointers?.length) {\n        errors.push(`stroke ${strokeIndex + 1} has not pointers`)\n      }\n      let flag = true\n      s.pointers?.forEach((pp, pIndex) => {\n        flag = true\n        if (!pp) {\n          errors.push(`stroke ${strokeIndex + 1} has no pointer at ${pIndex}`)\n          return\n        }\n        const pointer: TPointer = {\n          p: pp.p || 1,\n          t: pp.t || pIndex,\n          x: 0,\n          y: 0\n        }\n        if (pp?.x == undefined || pp?.x == null) {\n          errors.push(`stroke ${strokeIndex + 1} has no x at pointer at ${pIndex}`)\n          flag = false\n        }\n        else {\n          pointer.x = pp.x\n        }\n        if (pp?.y == undefined || pp?.y == null) {\n          errors.push(`stroke ${strokeIndex + 1} has no y at pointer at ${pIndex}`)\n          flag = false\n        }\n        else {\n          pointer.y = pp.y\n        }\n        if (flag) {\n          str.pointers.push(pointer)\n        }\n      })\n      return str\n    })\n    if (errors.length) {\n      this.internalEvent.emitError( new Error(errors.join(\"\\n\")))\n    }\n    strokesToImport.map(s => this.model.addStroke(s))\n    const exportPoints = await this.recognizer.importPointEvents(strokesToImport)\n    this.model.mergeExport(exportPoints)\n    this.#logger.debug(\"importPointEvents\", this.model)\n    return this.model\n  }\n\n  async resize(height: number, width: number): Promise<IModel>\n  {\n    this.#logger.info(\"resize\", { height, width })\n    const deferredResize = new DeferredPromise<Model>()\n    this.model.height = height\n    this.model.width = width\n    const clonedModel = this.model.getClone()\n    this.renderer.resize(clonedModel)\n    clearTimeout(this.#resizeTimer)\n    this.#resizeTimer = setTimeout(async () =>\n    {\n      try {\n        const resizeModel = await this.recognizer.resize(clonedModel)\n        deferredResize.resolve(resizeModel)\n      } catch (error) {\n        this.#logger.error(\"resize\", { height, width, error } )\n        deferredResize.reject(error as Error)\n      }\n    }, this.#configuration.triggers.resizeTriggerDelay)\n\n    this.#model = await deferredResize.promise\n    this.internalEvent.emitExported(this.model.exports as TExport)\n    this.#logger.debug(\"resize\", this.model)\n    return this.model\n  }\n\n  async undo(): Promise<IModel>\n  {\n    this.#logger.info(\"undo\")\n    if (this.context.canUndo) {\n      this.#model = this.undoRedoManager.undo() as Model\n      return this.recognizer.undo(this.model)\n    }\n    else {\n      throw new Error(\"Undo not allowed\")\n    }\n  }\n\n  async redo(): Promise<IModel>\n  {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.#model = this.undoRedoManager.redo() as Model\n      this.#logger.debug(\"undo\", this.#model)\n      return this.recognizer.redo(this.model)\n    }\n    else {\n      throw new Error(\"Redo not allowed\")\n    }\n  }\n\n  async clear(): Promise<IModel>\n  {\n    this.#logger.info(\"clear\")\n    this.model.clear()\n    this.undoRedoManager.addModelToStack(this.model)\n    return this.recognizer.clear(this.model)\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.#logger.info(\"destroy\")\n    this.grabber.detach()\n    this.renderer.destroy()\n    this.recognizer.destroy()\n    return Promise.resolve()\n  }\n}\n","import { LoggerClass } from \"../Constants\"\nimport { TMarginConfiguration, TRenderingConfiguration } from \"../configuration\"\nimport { InternalEvent } from \"../event\"\nimport { LoggerManager } from \"../logger\"\nimport { TJIIXExport, TJIIXWord } from \"../model\"\nimport { convertMillimeterToPixel, createUUID } from \"../utils\"\n\n/**\n * @group SmartGuide\n */\nexport class SmartGuide\n{\n  uuid: string\n  #smartGuideElement!: HTMLDivElement\n  #wrapperElement!: HTMLDivElement\n  #prompterContainerElement!: HTMLDivElement\n  #prompterTextElement!: HTMLDivElement\n  #ellipsisElement!: HTMLDivElement\n  #tagElement!: HTMLDivElement\n  #candidatesElement!: HTMLDivElement\n  #menuElement!: HTMLDivElement\n  #convertElement!: HTMLButtonElement\n  #copyElement!: HTMLButtonElement\n  #deleteElement!: HTMLButtonElement\n  #isMenuOpen!: boolean\n  margin: TMarginConfiguration\n  renderingConfiguration!: TRenderingConfiguration\n  jiix?: TJIIXExport\n  lastWord?: TJIIXWord\n  wordToChange?: TJIIXWord\n  #logger = LoggerManager.getLogger(LoggerClass.SMARTGUIDE)\n\n  constructor()\n  {\n    this.#logger.info(\"constructor\")\n    this.uuid = createUUID()\n    this.margin = {\n      bottom: 0,\n      left: 0,\n      right: 0,\n      top: 0\n    }\n    this.#createRootElement()\n    this.#createWrapperElement()\n    this.#createPrompterContainerElement()\n    this.#createPrompterTextElement()\n    this.#createEllipsisElement()\n    this.#createTagElement()\n    this.#createCandidatesElement()\n    this.#createMoreMenuElement()\n    this.#createConvertElement()\n    this.#createCopyElement()\n    this.#createDeleteElement()\n  }\n\n  get internalEvent(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  #createRootElement(): void\n  {\n    this.#smartGuideElement = document.createElement(\"div\")\n    this.#smartGuideElement.id = `smartguide-${ this.uuid }`\n    this.#smartGuideElement.classList.add(\"smartguide\")\n  }\n\n  #createWrapperElement(): void\n  {\n    this.#wrapperElement = document.createElement(\"div\")\n    this.#wrapperElement.id = `smartguide-wrapper-${ this.uuid }`\n    this.#wrapperElement.classList.add(\"smartguide-wrapper\")\n  }\n\n  #createPrompterContainerElement(): void\n  {\n    this.#prompterContainerElement = document.createElement(\"div\")\n    this.#prompterContainerElement.id = `prompter-container-${ this.uuid }`\n    this.#prompterContainerElement.classList.add(\"prompter-container\")\n  }\n\n  #createPrompterTextElement(): void\n  {\n    this.#prompterTextElement = document.createElement(\"div\")\n    this.#prompterTextElement.id = `prompter-text-${ this.uuid }`\n    this.#prompterTextElement.classList.add(\"prompter-text\")\n    this.#prompterTextElement.setAttribute(\"touch-action\", \"none\")\n  }\n\n  #createEllipsisElement(): void\n  {\n    this.#ellipsisElement = document.createElement(\"div\")\n    this.#ellipsisElement.id = `ellipsis-${ this.uuid }`\n    this.#ellipsisElement.classList.add(\"ellipsis\")\n    this.#ellipsisElement.innerHTML = \"...\"\n  }\n\n  #createTagElement(): void\n  {\n    this.#tagElement = document.createElement(\"div\")\n    this.#tagElement.id = `tag-icon-${ this.uuid }`\n    this.#tagElement.classList.add(\"tag-icon\")\n    this.#tagElement.innerHTML = \"&#182;\"\n  }\n\n  #createCandidatesElement(): void\n  {\n    this.#candidatesElement = document.createElement(\"div\")\n    this.#candidatesElement.id = `candidates-${ this.uuid }`\n    this.#candidatesElement.classList.add(\"candidates\")\n  }\n\n  #createMoreMenuElement(): void\n  {\n    this.#menuElement = document.createElement(\"div\")\n    this.#menuElement.id = `more-menu-${ this.uuid }`\n    this.#menuElement.classList.add(\"more-menu\")\n  }\n\n  #createConvertElement(): void\n  {\n    this.#convertElement = document.createElement(\"button\")\n    this.#convertElement.id = `convert-${ this.uuid }`\n    this.#convertElement.classList.add(\"options-label-button\")\n    this.#convertElement.innerHTML = \"Convert\"\n  }\n\n  #createCopyElement(): void\n  {\n    this.#copyElement = document.createElement(\"button\")\n    this.#copyElement.id = `copy-${ this.uuid }`\n    this.#copyElement.classList.add(\"options-label-button\")\n    this.#copyElement.innerHTML = \"Copy\"\n  }\n\n  #createDeleteElement(): void\n  {\n    this.#deleteElement = document.createElement(\"button\")\n    this.#deleteElement.id = `delete-${ this.uuid }`\n    this.#deleteElement.classList.add(\"options-label-button\")\n    this.#deleteElement.innerHTML = \"Delete\"\n  }\n\n  init(domElement: HTMLElement, margin: TMarginConfiguration, renderingConfiguration: TRenderingConfiguration): void\n  {\n    this.#logger.info(\"init\", { domElement, margin, renderingConfiguration })\n    domElement.appendChild(this.#smartGuideElement)\n    this.#smartGuideElement.appendChild(this.#wrapperElement)\n\n    this.#wrapperElement.appendChild(this.#tagElement)\n\n    this.#prompterContainerElement.appendChild(this.#prompterTextElement)\n    this.#wrapperElement.appendChild(this.#prompterContainerElement)\n\n    this.#wrapperElement.appendChild(this.#ellipsisElement)\n\n    this.#menuElement.appendChild(this.#convertElement)\n    this.#menuElement.appendChild(this.#copyElement)\n    this.#menuElement.appendChild(this.#deleteElement)\n    this.#menuElement.classList.add(\"close\")\n    this.#wrapperElement.appendChild(this.#menuElement)\n    this.#isMenuOpen = false\n\n    this.#candidatesElement.style.display = \"none\"\n    this.#wrapperElement.appendChild(this.#candidatesElement)\n    this.margin = margin\n    this.renderingConfiguration = renderingConfiguration\n    this.#addListeners()\n\n    this.resize()\n  }\n\n  #showCandidates = (target: HTMLElement) =>\n  {\n    this.#logger.info(\"showCandidates\", { target })\n    const wordId = parseInt(target.id.replace(\"word-\", \"\").replace(this.uuid, \"\"))\n    const words = this.jiix?.words as TJIIXWord[]\n    this.wordToChange = words[wordId]\n    if (this.wordToChange) {\n      this.wordToChange.id = wordId.toString()\n      this.#candidatesElement.innerHTML = \"\"\n      if (this.wordToChange?.candidates) {\n        this.#candidatesElement.style.display = \"flex\"\n        this.wordToChange.candidates.forEach((word, index) =>\n        {\n          if (this.wordToChange?.label === word) {\n            this.#candidatesElement.innerHTML += `<span id=\"cdt-${ index }${ this.uuid }\" class=\"selected-word\">${ word }</span>`\n          } else {\n            this.#candidatesElement.innerHTML += `<span id=\"cdt-${ index }${ this.uuid }\">${ word }</span>`\n          }\n        })\n\n        target.appendChild(this.#candidatesElement)\n      }\n    }\n  }\n  #hideCandidates(): void\n  {\n    this.#candidatesElement.style.display = \"none\"\n  }\n\n  #openMenu(): void\n  {\n    this.#menuElement.classList.add(\"open\")\n    this.#menuElement.classList.remove(\"close\")\n    this.#isMenuOpen = true\n  }\n  #closeMenu(): void\n  {\n    this.#menuElement.classList.add(\"close\")\n    this.#menuElement.classList.remove(\"open\")\n    this.#isMenuOpen = false\n  }\n\n  #onClickEllipsis = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickEllipsis\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.#isMenuOpen ? this.#closeMenu() : this.#openMenu()\n    this.#hideCandidates()\n  }\n\n  #onClickConvert = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickConvert\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.internalEvent.emitConvert()\n    this.#closeMenu()\n  }\n\n  #createTextAreaElement(value: string): HTMLTextAreaElement\n  {\n    const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\"\n    const textArea = document.createElement(\"textarea\")\n    textArea.style.fontSize = \"12pt\"\n    textArea.style.display = \"absolute\"\n    textArea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\"\n    const yPosition = window.pageYOffset || document.documentElement.scrollTop\n    textArea.style.top = `${ yPosition }px`\n    textArea.setAttribute(\"readonly\", \"\")\n    textArea.value = value\n    return textArea\n  }\n\n  #selectText(textArea: HTMLTextAreaElement)\n  {\n    if (navigator.userAgent.match(/ipad|iphone/i)) {\n      const range = document.createRange()\n      range.selectNodeContents(textArea)\n      const selection = window.getSelection()\n      if (selection) {\n        selection.removeAllRanges()\n        selection.addRange(range)\n        textArea.setSelectionRange(0, 999999)\n      }\n    } else {\n      textArea.select()\n    }\n  }\n\n  #onClickCopy = async (evt: Event): Promise<void> =>\n  {\n    this.#logger.info(\"onClickCopy\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    try {\n      this.#closeMenu()\n      let message = \"Nothing to copy\"\n      if (this.#prompterTextElement.innerText) {\n        message = `\"${ this.#prompterTextElement.innerText }\" copied to clipboard`\n        const fakeEl = this.#createTextAreaElement(this.#prompterTextElement.innerText)\n        this.#prompterContainerElement.appendChild(fakeEl)\n        this.#selectText(fakeEl)\n        document.execCommand(\"copy\")\n        fakeEl.remove()\n      }\n      this.internalEvent.emitNotif({ message, timeout: 1500 })\n    } catch (error) {\n      this.#logger.error(\"onClickCopy\", error)\n      this.internalEvent.emitError(error as Error)\n    }\n  }\n\n  #onClickDelete = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickDelete\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.internalEvent.emitClear()\n    this.#closeMenu()\n  }\n\n  #onClickCandidate = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickCandidate\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    const target = evt.target as HTMLElement\n    const candidate = target.innerText\n    if (this.jiix?.words && candidate !== this.wordToChange?.label && this.wordToChange?.candidates?.includes(candidate)) {\n      this.jiix.words[parseInt(this.wordToChange?.id as string)].label = candidate\n      this.internalEvent.emitImportJIIX(this.jiix)\n    }\n    this.#candidatesElement.style.display = \"none\"\n  }\n\n  #onClickPrompter = (evt: Event): void =>\n  {\n    this.#logger.info(\"onClickPrompter\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.#closeMenu()\n    const target = evt.target as HTMLElement\n    if (target.id !== this.#prompterTextElement.id) {\n      this.#showCandidates(target)\n    } else {\n      this.#hideCandidates()\n    }\n  }\n\n  #stopPropagation = (evt: Event) =>\n  {\n    evt.preventDefault()\n    evt.stopPropagation()\n  }\n\n  #onClickOutSide = () =>\n  {\n    this.#hideCandidates()\n    this.#closeMenu()\n  }\n\n  #addListeners(): void\n  {\n    this.#smartGuideElement.addEventListener(\"pointerdown\", this.#stopPropagation.bind(this))\n    this.#ellipsisElement.addEventListener(\"pointerdown\", this.#onClickEllipsis.bind(this))\n    this.#convertElement.addEventListener(\"pointerdown\", this.#onClickConvert.bind(this))\n    this.#copyElement.addEventListener(\"pointerdown\", this.#onClickCopy.bind(this))\n    this.#deleteElement.addEventListener(\"pointerdown\", this.#onClickDelete.bind(this))\n    this.#prompterTextElement.addEventListener(\"pointerdown\", this.#onClickPrompter.bind(this))\n    this.#candidatesElement.addEventListener(\"pointerdown\", this.#onClickCandidate.bind(this))\n    document.addEventListener(\"pointerdown\", this.#onClickOutSide.bind(this))\n  }\n\n  #removeListeners(): void\n  {\n    this.#smartGuideElement.addEventListener(\"pointerdown\", this.#stopPropagation)\n    this.#ellipsisElement.removeEventListener(\"pointerdown\", this.#onClickEllipsis)\n    this.#convertElement.removeEventListener(\"pointerdown\", this.#onClickConvert)\n    this.#copyElement.removeEventListener(\"pointerdown\", this.#onClickCopy)\n    this.#deleteElement.removeEventListener(\"pointerdown\", this.#onClickDelete)\n    this.#prompterTextElement.removeEventListener(\"pointerdown\", this.#onClickPrompter)\n    this.#candidatesElement.removeEventListener(\"pointerdown\", this.#onClickCandidate)\n    document.removeEventListener(\"pointerdown\", this.#onClickOutSide)\n  }\n\n  resize(): void\n  {\n    this.#logger.info(\"resize\")\n    const marginLeft = convertMillimeterToPixel(this.margin.left)\n    const marginRight = convertMillimeterToPixel(this.margin.right)\n    this.#wrapperElement.style.marginLeft = `${ marginLeft }px`\n    this.#wrapperElement.style.marginRight = `${ marginRight }px`\n  }\n\n  update(exports: TJIIXExport): void\n  {\n    this.#logger.info(\"update\", { exports })\n    this.jiix = exports\n    const createWordSpan = (index: number, word?: TJIIXWord) =>\n    {\n      const span = document.createElement(\"span\")\n      span.id = `word-${ index }${ this.uuid }`\n      if (word) {\n        span.textContent = word.label\n      } else {\n        span.innerHTML = \"&nbsp;\"\n      }\n      this.#logger.debug(\"update\", { span })\n      return span\n    }\n\n    const populatePrompter = () =>\n    {\n      this.#logger.info(\"populatePrompter\")\n      this.#prompterTextElement.innerHTML = \"\"\n      if (this.jiix?.words) {\n        const words = this.jiix.words as TJIIXWord[]\n        const myFragment = document.createDocumentFragment()\n        words.forEach((word, index) =>\n        {\n          if (word.label === \" \" || word.label.includes(\"\\n\")) {\n            myFragment.appendChild(createWordSpan(index))\n          } else if (index !== words.length - 1) {\n            myFragment.appendChild(createWordSpan(index, word))\n          } else {\n            this.#prompterTextElement.appendChild(myFragment)\n            if (this.lastWord) {\n              this.lastWord = word\n            }\n            const span = createWordSpan(index, word)\n            // This is used to scroll to last word if last word is modified\n\n            if ((this.lastWord?.candidates !== word.candidates) && (this.lastWord?.label !== word.label)) {\n              this.lastWord = word\n            }\n            if (this.wordToChange?.id === index.toString()) {\n              span.classList.add(\"modified-word\")\n              this.wordToChange = undefined\n            }\n            else {\n              span.classList.add(\"added-word\")\n            }\n            this.#prompterTextElement.appendChild(span)\n            this.#prompterContainerElement.scrollLeft = span.offsetLeft\n            this.#logger.debug(\"update => populatePrompter\", { span, lastWord: this.lastWord })\n          }\n        })\n      }\n    }\n    populatePrompter()\n    if (this.jiix?.words?.length) {\n      this.#ellipsisElement.style.setProperty(\"pointer-events\", \"auto\")\n    }\n    else {\n      this.#ellipsisElement.style.setProperty(\"pointer-events\", \"none\")\n    }\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.#prompterTextElement.innerHTML = \"\"\n    this.#candidatesElement.innerHTML = \"\"\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    this.#removeListeners()\n    this.#smartGuideElement.remove()\n  }\n}\n","import style from \"./iink.css\"\nimport { IBehaviors, RestBehaviors, TBehaviorOptions, WSBehaviors } from \"./behaviors\"\nimport { SmartGuide } from \"./smartguide\"\nimport { DeferredPromise, PartialDeep, mergeDeep } from \"./utils\"\nimport { LoggerManager } from \"./logger\"\nimport { ExportType, Intention, LoggerClass } from \"./Constants\"\nimport { DefaultLoggerConfiguration, TConfiguration, TConverstionState, TLoggerConfiguration, TMarginConfiguration } from \"./configuration\"\nimport { IModel, TExport, TJIIXExport } from \"./model\"\nimport { TStroke } from \"./primitive\"\nimport { InternalEvent, PublicEvent } from \"./event\"\nimport { TUndoRedoContext } from \"./undo-redo\"\nimport { IGrabber } from \"./grabber\"\nimport { TPenStyle, TTheme } from \"./style\"\n\n/**\n * @group Editor\n */\nexport type HTMLEditorElement = HTMLElement &\n{\n  editor: Editor\n}\n\n/**\n * @group Editor\n */\nexport class Editor\n{\n  logger = LoggerManager.getLogger(LoggerClass.EDITOR)\n  wrapperHTML: HTMLEditorElement\n  #loaderHTML: HTMLDivElement\n  #messageHTML: HTMLDivElement\n  #behaviors!: IBehaviors\n  #smartGuide?: SmartGuide\n  #initializationDeferred: DeferredPromise<void>\n\n  #loggerConfiguration!: TLoggerConfiguration\n\n  constructor(wrapperHTML: HTMLElement, options: PartialDeep<TBehaviorOptions>, globalClassCss = \"ms-editor\")\n  {\n    this.#initializationDeferred = new DeferredPromise<void>()\n    this.loggerConfiguration = mergeDeep({}, options.logger, DefaultLoggerConfiguration)\n    this.logger.info(\"constructor\", { wrapperHTML, options, globalClassCss })\n\n    this.wrapperHTML = wrapperHTML as HTMLEditorElement\n    this.wrapperHTML.classList.add(globalClassCss)\n    this.wrapperHTML.classList.add(\"draw\")\n    this.events.setElement(this.wrapperHTML)\n\n    const styleElement = document.createElement(\"style\")\n    styleElement.appendChild(document.createTextNode(style as string))\n    this.wrapperHTML.appendChild(styleElement)\n\n    this.#loaderHTML = document.createElement(\"div\")\n    this.#loaderHTML.classList.add(\"loader\")\n    this.#loaderHTML.style.display = \"none\"\n    this.wrapperHTML.appendChild(this.#loaderHTML)\n\n    this.#messageHTML = document.createElement(\"div\")\n    this.#messageHTML.classList.add(\"message\")\n    this.#messageHTML.style.display = \"none\"\n    this.wrapperHTML.appendChild(this.#messageHTML)\n\n    this.#instantiateBehaviors(options)\n  }\n\n  get loggerConfiguration(): TLoggerConfiguration\n  {\n    return this.#loggerConfiguration\n  }\n\n  set loggerConfiguration(loggerConfig: TLoggerConfiguration)\n  {\n    this.#loggerConfiguration = Object.assign({}, DefaultLoggerConfiguration, loggerConfig)\n    LoggerManager.setLoggerLevel(this.#loggerConfiguration)\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return this.#initializationDeferred.promise\n  }\n\n  get model(): IModel\n  {\n    return this.behaviors.model\n  }\n\n  get behaviors(): IBehaviors\n  {\n    return this.#behaviors\n  }\n\n  get configuration(): TConfiguration\n  {\n    return this.behaviors.configuration\n  }\n  set configuration(configuration: TConfiguration)\n  {\n    this.logger.info(\"set configuration\", { configuration })\n    this.#instantiateBehaviors({ configuration })\n    this.initialize()\n  }\n\n  get intention(): Intention\n  {\n    return this.behaviors.intention\n  }\n  set intention(i: Intention)\n  {\n    this.behaviors.intention = i\n    switch (this.behaviors.intention) {\n      case Intention.Erase:\n        this.wrapperHTML.classList.remove(\"draw\")\n        this.wrapperHTML.classList.add(\"erase\")\n        this.wrapperHTML.classList.remove(\"select\")\n        break\n      default:\n        this.wrapperHTML.classList.add(\"draw\")\n        this.wrapperHTML.classList.remove(\"erase\")\n        this.wrapperHTML.classList.remove(\"select\")\n        break\n    }\n    this.logger.debug(\"set intention\", this.wrapperHTML)\n  }\n\n  get events(): PublicEvent\n  {\n    return PublicEvent.getInstance()\n  }\n\n  get internalEvents(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  get context(): TUndoRedoContext\n  {\n    return this.behaviors.context\n  }\n\n  get grabber(): IGrabber\n  {\n    return this.behaviors.grabber\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.behaviors.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.behaviors.penStyle\n  }\n  set penStyle(ps: PartialDeep<TPenStyle>)\n  {\n    this.logger.info(\"set penStyle\", { ps })\n    this.behaviors.setPenStyle(ps)\n  }\n\n  get theme(): TTheme\n  {\n    return this.behaviors.theme\n  }\n  set theme(theme: PartialDeep<TTheme>)\n  {\n    this.logger.info(\"set theme\", { t: theme })\n    this.behaviors.setTheme(theme)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.behaviors.penStyleClasses\n  }\n  set penStyleClasses(styleClasses: string)\n  {\n    this.logger.info(\"set penStyleClasses\", { psc: styleClasses })\n    this.behaviors.setPenStyleClasses(styleClasses)\n  }\n\n  get gestures(): boolean\n  {\n    return this.configuration.recognition.gesture.enable\n  }\n  set gestures(apply: boolean)\n  {\n    this.configuration.recognition.gesture.enable = apply\n    this.#instantiateBehaviors({ configuration: this.configuration })\n    this.initialize()\n  }\n\n  #instantiateBehaviors(options: PartialDeep<TBehaviorOptions>)\n  {\n    this.logger.info(\"instantiateBehaviors\", { options })\n    if (!options?.configuration) {\n      throw new Error(\"Configuration required\")\n    }\n    this.internalEvents.removeAllListeners()\n    if (this.#behaviors) {\n      this.#behaviors.destroy()\n    }\n    let defaultBehaviors: IBehaviors\n    if (options.configuration.server?.protocol === \"REST\") {\n      defaultBehaviors = new RestBehaviors(options)\n    } else {\n      defaultBehaviors = new WSBehaviors(options)\n    }\n    this.#behaviors = Object.assign(defaultBehaviors, options.behaviors)\n    this.logger.debug(\"instantiateBehaviors\", this.#behaviors)\n  }\n\n  async #initializeBehaviors(): Promise<void>\n  {\n    this.logger.info(\"initializeBehaviors\", \"start\")\n    this.#initializationDeferred = new DeferredPromise<void>()\n    this.#loaderHTML.style.display = \"initial\"\n    this.#cleanMessage()\n    return this.behaviors.init(this.wrapperHTML)\n      .then(async () =>\n      {\n        this.logger.info(\"initializeBehaviors\", \"then\")\n        this.wrapperHTML.editor = this\n        this.#initializationDeferred.resolve()\n        this.events.emitLoaded()\n      })\n      .catch((error: Error) =>\n      {\n        this.logger.error(\"initializeBehaviors\", error)\n        this.#initializationDeferred.reject(error)\n        this.#showError(error)\n      })\n      .finally(() =>\n      {\n        this.logger.debug(\"initializeBehaviors\", \"finally\")\n        this.#loaderHTML.style.display = \"none\"\n        return this.#initializationDeferred.promise\n      })\n  }\n\n  #initializeSmartGuide(): void\n  {\n    this.#smartGuide?.destroy()\n    this.logger.info(\"initializeSmartGuide\", { smartGuide: this.configuration.rendering.smartGuide })\n    if (this.configuration.rendering.smartGuide.enable) {\n      this.#smartGuide = new SmartGuide()\n      let margin: TMarginConfiguration\n      switch (this.configuration.recognition.type) {\n        case \"TEXT\":\n          margin = this.configuration.recognition.text.margin\n          break\n        case \"MATH\":\n          margin = this.configuration.recognition.math.margin\n          break\n        default:\n          margin = {\n            top: 20,\n            left: 10,\n            right: 10,\n            bottom: 10\n          }\n          break\n      }\n      this.#smartGuide.init(this.wrapperHTML, margin, this.configuration.rendering)\n    }\n  }\n\n  #cleanMessage()\n  {\n    this.#messageHTML.style.display = \"none\"\n    this.#messageHTML.innerHTML = \"\"\n  }\n\n  #showError(err: Error | string)\n  {\n    this.#messageHTML.style.display = \"initial\"\n    this.#messageHTML.classList.add(\"error-msg\")\n    this.#messageHTML.classList.remove(\"info-msg\")\n    this.#messageHTML.innerText = typeof err === \"string\" ? err : err.message\n  }\n\n  #showNotif(notif: { message: string, timeout?: number })\n  {\n    this.#messageHTML.style.display = \"initial\"\n    this.#messageHTML.classList.add(\"info-msg\")\n    this.#messageHTML.classList.remove(\"error-msg\")\n    this.#messageHTML.innerText = notif.message\n    setTimeout(() =>\n    {\n      this.#cleanMessage()\n    }, notif.timeout || 2500)\n  }\n\n  #addListeners(): void\n  {\n    this.internalEvents.addConvertListener(this.convert.bind(this))\n    this.internalEvents.addClearListener(this.clear.bind(this))\n    this.internalEvents.addErrorListener(this.#showError.bind(this))\n    this.internalEvents.addImportJIIXListener(this.#onImportJIIX.bind(this))\n    this.internalEvents.addExportedListener(this.#onExport.bind(this))\n    this.internalEvents.addNotifListener(this.#showNotif.bind(this))\n    this.internalEvents.addClearMessageListener(this.#cleanMessage.bind(this))\n    this.internalEvents.addContextChangeListener(this.#onContextChange.bind(this))\n    this.internalEvents.addIdleListener(this.#onIdleChange.bind(this))\n  }\n\n  #onContextChange = (context: TUndoRedoContext) =>\n  {\n    this.events.emitChanged(context)\n  }\n\n  #onIdleChange = (idle: boolean) =>\n  {\n    this.events.emitIdle(idle)\n  }\n\n  #onExport(exports: TExport): void\n  {\n    this.logger.info(\"onExport\", { exports })\n    if (this.configuration.rendering.smartGuide.enable) {\n      if (exports && exports[\"application/vnd.myscript.jiix\"]) {\n        const jjix = exports[\"application/vnd.myscript.jiix\"] as TJIIXExport\n        this.#smartGuide?.update(jjix)\n      }\n    }\n    this.events.emitExported(exports)\n  }\n\n  #onImportJIIX(jiix: TJIIXExport): void\n  {\n    this.logger.info(\"onImportJIIX\", { jiix })\n    this.import(new Blob([JSON.stringify(jiix)], { type: ExportType.JIIX }), ExportType.JIIX)\n  }\n\n  async initialize(): Promise<void>\n  {\n    this.logger.info(\"initialize\")\n    await this.#initializeBehaviors()\n    this.#initializeSmartGuide()\n    this.#addListeners()\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    if (this.behaviors.waitForIdle) {\n      return this.behaviors.waitForIdle()\n    }\n    return\n  }\n\n  async undo(): Promise<IModel>\n  {\n    this.logger.info(\"undo\")\n    await this.#initializationDeferred.promise\n    await this.behaviors.undo()\n    this.logger.debug(\"undo\", this.model)\n    return this.model\n  }\n\n  async redo(): Promise<IModel>\n  {\n    this.logger.info(\"redo\")\n    await this.#initializationDeferred.promise\n    await this.behaviors.redo()\n    this.logger.debug(\"redo\", this.model)\n    return this.model\n  }\n\n  async clear(): Promise<IModel>\n  {\n    this.logger.info(\"clear\")\n    await this.#initializationDeferred.promise\n    await this.behaviors.clear()\n    this.events.emitCleared(this.model)\n    this.logger.debug(\"clear\", this.model)\n    return this.model\n  }\n\n  async resize(): Promise<IModel>\n  {\n    this.logger.info(\"resize\")\n    await this.#initializationDeferred.promise\n    if (this.configuration.rendering.smartGuide.enable) {\n      this.#smartGuide?.resize()\n    }\n    const compStyles = window.getComputedStyle(this.wrapperHTML)\n    const height = Math.max(parseInt(compStyles.height.replace(\"px\",\"\")), this.configuration.rendering.minHeight)\n    const width = Math.max(parseInt(compStyles.width.replace(\"px\",\"\")), this.configuration.rendering.minWidth)\n    await this.behaviors.resize(height, width)\n    this.logger.debug(\"resize\", this.model)\n    return this.model\n  }\n\n  async export(mimeTypes?: string[]): Promise<IModel>\n  {\n    this.logger.info(\"export\", { mimeTypes })\n    await this.#initializationDeferred.promise\n    await this.behaviors.export(mimeTypes)\n    this.logger.debug(\"export\", this.model)\n    return this.model\n  }\n\n  async convert(params?: { conversionState?: TConverstionState, mimeTypes?: string[] }): Promise<IModel | never>\n  {\n    this.logger.info(\"export\", { params })\n    await this.#initializationDeferred.promise\n    await this.behaviors.convert(params?.conversionState, params?.mimeTypes)\n    this.events.emitConverted(this.model.converts as TExport)\n    this.logger.debug(\"convert\", this.model)\n    return this.model\n  }\n\n  async import(data: Blob | string | TJIIXExport, mimeType?: string): Promise<IModel | never>\n  {\n    this.logger.info(\"import\", { data, mimeType })\n    await this.#initializationDeferred.promise\n    if (this.behaviors.import) {\n      let blobToImport: Blob\n      if (data instanceof Blob) {\n        blobToImport = data\n      }\n      else if (typeof data === \"string\") {\n        blobToImport = new Blob([data])\n      }\n      else {\n        blobToImport = new Blob([JSON.stringify(data)])\n      }\n      await this.behaviors.import(blobToImport, mimeType)\n      this.events.emitImported(this.model.exports as TExport)\n      this.logger.debug(\"import\", this.model)\n      return this.model\n    }\n    return Promise.reject(\"Import impossible, behaviors has no import function\")\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<IModel>\n  {\n    this.logger.info(\"importPointEvents\", { strokes })\n    await this.#initializationDeferred.promise\n    await this.behaviors.importPointEvents(strokes)\n    this.events.emitImported(this.model.exports as TExport)\n    this.logger.debug(\"importPointEvents\", this.model)\n    return this.model\n    return Promise.reject(\"Import impossible, behaviors has no importPointEvents function\")\n  }\n}\n","import { TConfiguration } from \"../configuration\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport async function getAvailableFontList(configuration: PartialDeep<TConfiguration>): Promise<Array<string>>\n{\n  if (!configuration?.server?.scheme && !configuration?.server?.host) {\n    return Promise.reject(\"Failed to get fonts: configuration.server.scheme & configuration.server.host are required!\")\n  }\n  if (!configuration?.recognition?.lang) {\n    return Promise.reject(\"Failed to get fonts: configuration.recognition.lang is required!\")\n  }\n  const serverConfig = configuration.server\n  const response = await fetch(`${ serverConfig.scheme }://${ serverConfig.host }/api/v4.0/iink/font/google/language/` + configuration.recognition.lang)\n  const { result } = await response.json()\n  return result.sort()\n}\n","import { TConfiguration } from \"../configuration\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport async function getAvailableLanguageList(configuration: PartialDeep<TConfiguration>): Promise<Array<Record<string, string>>>\n{\n  if (configuration?.server?.scheme && configuration?.server?.host) {\n    const serverConfig = configuration.server\n    const response = await fetch(`${ serverConfig.scheme }://${ serverConfig.host }/api/v4.0/iink/availableLanguageList`)\n    return response.json()\n  } else {\n    return Promise.reject(\"Failed to get languages: configuration.server.scheme & configuration.server.host are required!\")\n  }\n}\n","/**\n * @group Math\n */\nexport function isBetween(val: number, min: number, max: number): boolean\n{\n  return val >= min && val <= max\n}\n"],"names":["Logger","constructor","instanceName","level","this","debug","functionName","data","dataLog","from","message","console","info","warn","error","LoggerManager","getLogger","name","__classPrivateFieldGet","_a","_LoggerManager_loggerMap","has","set","get","setLoggerLevel","config","Object","keys","forEach","lc","value","Map","DeferredPromise","isFullFilled","isPending","promise","Promise","resolve","reject","v","__awaiter","computeDistance","p1","p2","distance","Math","hypot","y","x","isNaN","computeAngleAxeRadian","begin","end","atan2","scalaire","v1","v2","computeNearestPointOnSegment","p","seg","vectP1P","vectP1P2","scalaireP1P_P1P2","scalaireP1P2_P1P2","t","min","max","isVersionSuperiorOrEqual","source","target","sourceParts","split","targetParts","i","length","a","Number","b","computeHmac","applicationKey","hmacKey","enc","TextEncoder","messageEncoded","encode","keyEncoded","key","crypto","subtle","importKey","hash","signature","sign","buffer","Uint8Array","Array","prototype","map","call","toString","padStart","join","convertMillimeterToPixel","mm","createUUID","dt","Date","now","replace","c","r","random","floor","mergeDeep","sources","isObject","item","isArray","shift","assign","concat","computeLinksPointers","point","angle","width","radius","sin","cos","computeMiddlePointer","point1","point2","DefaultListenerConfiguration","capture","passive","DefaultGrabberConfiguration","listenerOptions","xyFloatPrecision","timestampFloatPrecision","DefaultEraserConfiguration","DefaultDiagramConvertConfiguration","DefaultDiagramConfiguration","convert","eraser","mimeTypes","DefaultJiixConfiguration","strokes","text","chars","words","DefaultExportConfiguration","jiix","DefaultMarginConfiguration","top","left","right","bottom","DefaultSolverConfiguration","enable","DefaultMathUndoRedoConfiguration","mode","DefaultMathConfiguration","solver","margin","DefaultRawContentRecognitionConfiguration","shape","DefaultRawContentConfiguration","recognition","DefaultDebugConfiguration","DefaultRecognitionRendererConfiguration","DefaultTextGuidesConfiguration","DefaultTextConfiguration","guides","DefaultConvertionConfiguration","force","DefaultRecognitionConfiguration","diagram","export","math","renderer","type","alwaysConnected","lang","gesture","DefaultGuidesConfiguration","gap","DefaultSmartGuidesConfiguration","DefaultRenderingConfiguration","smartGuide","minHeight","minWidth","DefaultServerConfiguration","protocol","scheme","host","version","useWindowLocation","websocket","pingEnabled","pingDelay","maxPingLostCount","autoReconnect","maxRetryCount","fileChunkSize","DefaultTriggerConfiguration","exportContent","exportContentDelay","resizeTriggerDelay","DefaultUndoRedoConfiguration","maxStackSize","DefaultConfiguration","server","grabber","rendering","triggers","Configuration","configuration","_Configuration_logger","JSON","parse","stringify","overrideDefaultConfiguration","defaultConf","_b","_d","_c","_f","_e","_g","window","location","indexOf","includes","push","DefaultLoggerConfiguration","EDITOR","BEHAVIORS","RECOGNIZER","GRABBER","RENDERER","CONFIGURATION","PUBLIC_EVENT","INTERNAL_EVENT","MODEL","STROKE","SMARTGUIDE","STYLE","UNDO_REDO","Error","NO_ACTIVITY","WRONG_CREDENTIALS","TOO_OLD","UNKNOW","ABNORMAL_CLOSURE","CANT_ESTABLISH","GOING_AWAY","PROTOCOL_ERROR","UNSUPPORTED_DATA","INVALID_FRAME_PAULOAD","POLICY_VIOLATION","MESSAGE_TOO_BIG","INTERNAL_ERROR","SERVICE_RESTART","TRY_AGAIN","BAD_GATEWAY","TLS_HANDSHAKE","EventType","CHANGED","CLEARED","CONVERTED","ERROR","POINTEREVENTS","EXPORTED","IMPORTED","IDLE","LOADED","InternalEventType","SVG_PATCH","CLEAR_MESSAGE","NOTIF","IMPORT_JIIX","CONVERT","CLEAR","CONTEXT_CHANGE","WS_CLOSED","ExportType","Intention","LoggerLevel","LoggerClass","exports","InternalEvent","EventTarget","super","_InternalEvent_abortController","_InternalEvent_logger","__classPrivateFieldSet","AbortController","getInstance","_InternalEvent_instance","removeAllListeners","abort","emitSVGPatch","patchChange","_InternalEvent_instances","_InternalEvent_emit","addSVGPatchListener","callback","addEventListener","evt","detail","signal","emitExported","addExportedListener","emitClearMessage","addClearMessageListener","emitError","err","addErrorListener","emitWSClosed","addWSClosedListener","emitNotif","notif","addNotifListener","emitImportJIIX","addImportJIIXListener","emitConvert","conversionState","addConvertListener","emitClear","addClearListener","emitContextChange","context","addContextChangeListener","emitIdle","idle","addIdleListener","WeakMap","WeakSet","dispatchEvent","CustomEvent","bubbles","composed","undefined","PublicEvent","_PublicEvent_element","_PublicEvent_logger","_PublicEvent_instance","setElement","el","emitLoaded","_PublicEvent_instances","_PublicEvent_emit","emitChanged","undoRedoContext","canClear","empty","emitCleared","model","emitConverted","emitImported","PointerEventGrabber","prevent","e","preventDefault","_PointerEventGrabber_logger","pointerDownHandler","button","buttons","activePointerId","pointerId","onPointerDown","extractPoint","pointerMoveHandler","classList","contains","pointerUpHandler","onPointerMove","stopPropagation","onPointerUp","pointerOutHandler","domElement","roundFloat","oneFloat","requestedFloatPrecision","floatPrecision","pow","round","event","clientX","clientY","changedTouches","rect","getBoundingClientRect","pointer","clientLeft","scrollLeft","clientTop","scrollTop","pressure","attach","detach","document","documentElement","removeEventListener","DefaultPenStyle","DefaultTheme","ink","color","module","o","n","l","m","d","defineProperty","configurable","enumerable","__esModule","default","hasOwnProperty","s","TypeError","Symbol","iterator","toJSON","u","trim","substring","_trimSemiColon","toCSS","slice","parser","JsonCSS","StyleHelper","themeToCSS","json","themeToJSON","style","theme","penStyleToCSS","penStyle","css","penStyleToJSON","penStyleString","stringToJSON","JSONToString","entries","k","SymbolType","StyleManager","_StyleManager_penStyle","_StyleManager_theme","_StyleManager_penStyleClasses","_StyleManager_currentPenStyle","_StyleManager_logger","setTheme","setPenStyleClasses","setPenStyle","currentPenStyle","structuredClone","penStyleClasses","penStyleClass","AbstractSymbol","creationTime","id","modificationDate","Stroke","pointerType","_Stroke_logger","pointers","getClone","clone","formatToSend","Model","height","rowHeight","creationDate","_Model_logger","symbols","positions","lastSentPosition","lastReceivedPosition","computePressure","globalDistance","ratio","sqrt","filterPointByAcquisitionDelta","stroke","lastPointer","delta","abs","getStrokeFromPoint","isBetween","val","_strokeList","strokePointer","addPoint","at","addStroke","converts","updateStroke","updatedStroke","strokeIndex","findIndex","splice","removeStroke","removeStrokesFromPoint","strokeToRemove","extractUnsentStrokes","initCurrentStroke","dpi","pxWidth","currentSymbol","appendToCurrentStroke","endCurrentStroke","updatePositionSent","position","updatePositionReceived","mergeExport","mergeConvert","clonedModel","clear","RestRecognizer","serverConfig","recognitionConfig","_RestRecognizer_logger","serverConfiguration","recognitionConfiguration","url","postConfig","buildData","strokeGroupByPenStyle","groupIndex","sg","isPenStyleEqual","ps1","ps2","strokeGroupsToSend","group","newGroup","contentType","charAt","toUpperCase","toLowerCase","xDPI","yDPI","strokeGroups","post","mimeType","headers","Headers","append","hmac","reqInit","method","body","request","Request","response","fetch","ok","result","blob","catch","tryFetch","then","res","ErrorConst","code","getMimeTypes","requestedMimeTypes","myModel","dataToConcert","promises","mt","all","String","mimeTypesRequiringExport","filter","resize","WSRecognizer","_WSRecognizer_logger","pingCount","reconnectionCount","toLocaleLowerCase","internalEvent","infinitePing","socket","close","readyState","setTimeout","send","openCallback","connected","params","sessionId","iinkSessionId","xDpi","yDpi","viewSizeHeight","viewSizeWidth","rejectDeferredPending","initialized","addStrokeDeferred","exportDeferred","_h","convertDeferred","_j","_k","importDeferred","_l","_m","resizeDeferred","_o","_p","undoDeferred","_q","_r","redoDeferred","_s","_t","clearDeferred","_u","waitForIdleDeferred","_v","closeCallback","currentErrorCode","reason","manageAckMessage","websocketMessage","hmacChallengeMessage","hmacChallenge","ackDeferred","manageContentPackageDescriptionMessage","currentPartId","managePartChangeMessage","partChangeMessage","partId","manageExportMessage","exportMessage","importPointEventsDeferred","manageWaitForIdle","manageErrorMessage","manageContentChangeMessage","contentChangeMessage","canRedo","canUndo","stackIndex","undoStackIndex","possibleUndoCount","stack","manageSVGPatchMessage","svgPatchMessage","messageCallback","init","destroy","WebSocket","bind","OPEN","CONNECTING","addStrokes","styleClasses","localModel","import","chunkSize","importFileId","readBlob","fileReader","FileReader","onloadend","ev","onerror","readAsText","importFileMessage","size","blobPart","fileChuckMessage","lastChunk","importPointEvents","events","exportPoints","myExportConverted","waitForIdle","undo","undoExports","redo","redoExports","clearExports","CanvasRendererShape","_CanvasRendererShape_logger","table","ellipse","line","phi","returnedAngle","PI","drawEllipseArc","context2D","shapeEllipse","centerPoint","maxRadius","minRadius","orientation","startAngle","sweepAngle","z1","z2","z3","z4","boundariesPoints","save","beginPath","alpha","cosAlpha","sinAlpha","moveTo","lineTo","restore","drawLine","drawArrowHead","headPoint","beta","fillStyle","strokeStyle","fill","drawShapeEllipse","points","beginDecoration","beginTangentAngle","endDecoration","endTangentAngle","drawShapeLine","shapeLine","firstPoint","lastPoint","draw","symbol","lineWidth","lines","CanvasRendererStroke","_CanvasRendererStroke_logger","renderArc","context2d","center","arc","renderLine","linkPoints1","linkPoints2","renderFinal","linkPoints","newAngle","renderQuadratic","ctrl","linkPoints3","quadraticCurveTo","NUMBER_POINTS","NUMBER_QUADRATICS","secondPoint","beginLine","endLine","beginFinal","endFinal","closePath","CanvasRendererText","_CanvasRendererText_logger","char","string","textLine","drawUnderline","textUnderline","underline","label","topLeftPoint","firstCharacter","lastCharacter","drawText","font","textHeight","textAlign","justificationType","textBaseline","fillText","drawTextLine","underlineList","CanvasRenderer","_CanvasRenderer_logger","strokeRenderer","shapeRenderer","textRenderer","createCanvas","canvas","createElement","add","resizeContent","pixelRatio","devicePixelRatio","renderingCanvas","capturingCanvas","parentNode","clientWidth","clientHeight","getContext","scale","drawSymbol","element","appendChild","parent","renderingCanvasContext","capturingCanvasContext","drawModel","clearRect","drawPendingStroke","innerHTML","SVGStroker","getArcPath","getLinePath","getFinalPath","parts","getQuadraticPath","central","buildSVGPath","STROKE_LENGTH","STROKE_WIDTH","NB_QUADRATICS","beforeLastPoint","drawStroke","svgElement","attrs","svgPathElement","createElementNS","setAttribute","svgPath","WSSVGRenderer","_WSSVGRenderer_logger","stroker","fontSize","replaceAll","layerName","update","oldLayer","querySelector","remove","insertAdjacentHTML","svg","layer","pendingStrokesGroup","replaceElement","elementToRemove","parentSelector","parentId","removeChild","index","removeElement","insertBefore","refId","selector","removeAttribute","updateLayer","updatesLayer","updates","clearPendingStroke","pendingStrokeGroup","oldStroke","clearErasingStrokes","querySelectorAll","erasingStroke","svgList","UndoRedoContext","UndoRedoManager","_UndoRedoManager_logger","updateCanUndoRedo","currentModel","addModelToStack","removeLastModelInStack","pop","updateModelInStack","previousModel","nextModel","reset","RestBehaviors","options","_RestBehaviors_logger","_RestBehaviors_configuration","_RestBehaviors_model","_RestBehaviors_resizeTimer","_RestBehaviors_exportTimer","styleManager","recognizer","intention","undoRedoManager","drawCurrentStroke","_evt","updateModelRendering","deferred","clearTimeout","newModel","errors","flag","pp","pIndex","deferredResize","resizeModel","WSBehaviors","_WSBehaviors_logger","_WSBehaviors_configuration","_WSBehaviors_model","_WSBehaviors_resizeTimer","penClass","onExport","synchronizeModelWithBackend","onSVGPatch","compStyles","getComputedStyle","parseInt","unsentStrokes","strokesToImport","str","SmartGuide","_SmartGuide_smartGuideElement","_SmartGuide_wrapperElement","_SmartGuide_prompterContainerElement","_SmartGuide_prompterTextElement","_SmartGuide_ellipsisElement","_SmartGuide_tagElement","_SmartGuide_candidatesElement","_SmartGuide_menuElement","_SmartGuide_convertElement","_SmartGuide_copyElement","_SmartGuide_deleteElement","_SmartGuide_isMenuOpen","_SmartGuide_logger","_SmartGuide_showCandidates","wordId","uuid","wordToChange","candidates","display","word","_SmartGuide_onClickEllipsis","_SmartGuide_instances","_SmartGuide_hideCandidates","_SmartGuide_onClickConvert","_SmartGuide_closeMenu","_SmartGuide_onClickCopy","innerText","fakeEl","_SmartGuide_selectText","execCommand","timeout","_SmartGuide_onClickDelete","_SmartGuide_onClickCandidate","candidate","_SmartGuide_onClickPrompter","_SmartGuide_stopPropagation","_SmartGuide_onClickOutSide","_SmartGuide_createRootElement","_SmartGuide_createWrapperElement","_SmartGuide_createPrompterContainerElement","_SmartGuide_createPrompterTextElement","_SmartGuide_createEllipsisElement","_SmartGuide_createTagElement","_SmartGuide_createCandidatesElement","_SmartGuide_createMoreMenuElement","_SmartGuide_createConvertElement","_SmartGuide_createCopyElement","_SmartGuide_createDeleteElement","renderingConfiguration","_SmartGuide_addListeners","marginLeft","marginRight","createWordSpan","span","textContent","myFragment","createDocumentFragment","lastWord","offsetLeft","populatePrompter","setProperty","_SmartGuide_removeListeners","_SmartGuide_openMenu","isRTL","getAttribute","textArea","yPosition","pageYOffset","navigator","userAgent","match","range","createRange","selectNodeContents","selection","getSelection","removeAllRanges","addRange","setSelectionRange","select","logger","defaultBehaviors","internalEvents","_Editor_behaviors","behaviors","_Editor_initializeBehaviors","_Editor_initializationDeferred","_Editor_instances","_Editor_cleanMessage","wrapperHTML","editor","_Editor_showError","finally","_Editor_smartGuide","_Editor_messageHTML","_Editor_addListeners","_Editor_onImportJIIX","_Editor_onExport","_Editor_showNotif","_Editor_onContextChange","_Editor_onIdleChange","jjix","Blob","Editor","globalClassCss","_Editor_loaderHTML","_Editor_loggerConfiguration","loggerConfiguration","styleElement","createTextNode","_Editor_instantiateBehaviors","loggerConfig","initializationPromise","initialize","ps","psc","gestures","apply","_Editor_initializeSmartGuide","blobToImport","computeDistanceBetweenPointAndSegment","convertPartialStrokesToStrokes","j","ji","convertPixelToMillimeter","px","createPointsOnSegment","spaceBetweenPoint","spaceWithP1","getAvailableFontList","sort","getAvailableLanguageList"],"mappings":"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","x_google_ignoreList":[33]}