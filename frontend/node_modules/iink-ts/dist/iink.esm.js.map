{"version":3,"file":"iink.esm.js","sources":["../src/logger/logger.ts","../src/logger/loggerManager.ts","../src/utils/DeferredPromise.ts","../src/utils/geometry.ts","../src/utils/version.ts","../src/utils/crypto.ts","../src/utils/units.ts","../src/utils/uuid.ts","../src/utils/math.ts","../src/utils/merge.ts","../src/utils/font.ts","../src/utils/language.ts","../src/utils/quadratics.ts","../src/configuration/GrabberConfiguration.ts","../src/configuration/recognition/EraserConfiguration.ts","../src/configuration/recognition/DiagramConfiguration.ts","../src/configuration/recognition/ExportConfiguration.ts","../src/configuration/recognition/MarginConfiguration.ts","../src/configuration/recognition/MathConfiguration.ts","../src/configuration/recognition/RawContentConfiguration.ts","../src/configuration/recognition/RecognitionRendererConfiguration.ts","../src/configuration/recognition/TextConfiguration.ts","../src/configuration/recognition/ConvertionConfiguration.ts","../src/configuration/RecognitionConfiguration.ts","../src/configuration/RenderingConfiguration.ts","../src/configuration/ServerConfiguration.ts","../src/configuration/TriggerConfiguration.ts","../src/configuration/UndoRedoConfiguration.ts","../src/configuration/Configuration.ts","../src/configuration/LoggerConfiguration.ts","../src/Constants.ts","../src/event/InternalEvent.ts","../src/event/PublicEvent.ts","../src/grabber/PointerEventGrabber.ts","../src/style/PenStyle.ts","../src/style/Theme.ts","../node_modules/json-css/lib/jsoncss.min.js","../src/style/StyleHelper.ts","../src/primitive/Symbol.ts","../src/style/StyleManager.ts","../src/primitive/Stroke.ts","../src/model/Model.ts","../src/recognizer/RestRecognizer.ts","../src/recognizer/WSRecognizer.ts","../src/renderer/canvas/CanvasRendererShape.ts","../src/renderer/canvas/CanvasRendererStroke.ts","../src/renderer/canvas/CanvasRendererText.ts","../src/renderer/canvas/CanvasRenderer.ts","../src/renderer/svg/SVGStroker.ts","../src/renderer/svg/WSSVGRenderer.ts","../src/undo-redo/UndoRedoContext.ts","../src/undo-redo/UndoRedoManager.ts","../src/behaviors/RestBehaviors.ts","../src/behaviors/WSBehaviors.ts","../src/smartguide/SmartGuide.ts","../src/Editor.ts"],"sourcesContent":["import { LoggerClass, LoggerLevel } from \"../Constants\"\n\n/**\n * @group Logger\n */\nexport class Logger\n{\n  instanceName: LoggerClass\n  level: LoggerLevel\n\n  constructor(instanceName: LoggerClass, level: LoggerLevel)\n  {\n    this.instanceName = instanceName\n    this.level = level\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  debug(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.DEBUG >= this.level) {\n      const dataLog = {\n        from: `${this.instanceName}.${functionName}`,\n        message: data,\n      }\n      console.debug(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  info(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.INFO >= this.level) {\n      const dataLog = {\n        from: `${this.instanceName}.${functionName}`,\n        message: data,\n      }\n      console.info(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  warn(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.WARN >= this.level) {\n      const dataLog = {\n        from: `${this.instanceName}.${functionName}`,\n        message: data,\n      }\n      console.warn(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error(functionName: string, ...error: any)\n  {\n    const dataLog = {\n      from: `${this.instanceName}.${functionName}`,\n      error,\n    }\n    console.error(dataLog)\n  }\n}\n","import { LoggerClass, LoggerLevel } from \"../Constants\"\nimport { TLoggerConfiguration } from \"../configuration\"\nimport { Logger } from \"./logger\"\n\n/**\n * @group Logger\n */\nexport class LoggerManager\n{\n  static #loggerMap: Map<LoggerClass, Logger> = new Map()\n\n  static getLogger(name: LoggerClass): Logger\n  {\n    if (!this.#loggerMap.has(name)) {\n      this.#loggerMap.set(name, new Logger(name, LoggerLevel.ERROR))\n    }\n    return this.#loggerMap.get(name) as Logger\n  }\n\n  static setLoggerLevel(config: TLoggerConfiguration)\n  {\n    Object.keys(config).forEach((lc) =>\n    {\n      LoggerManager.getLogger(lc as LoggerClass).level = config[lc as LoggerClass]\n    })\n  }\n}\n","\n/**\n * @group Utils\n */\nexport class DeferredPromise<T> {\n  promise: Promise<T>\n  resolve!: (value: T) => void\n  reject!: (value: Error | string) => void\n\n  isFullFilled: boolean\n  isPending: boolean\n\n\n  constructor()\n  {\n    this.isFullFilled = false\n    this.isPending = true\n\n    this.promise = new Promise((resolve, reject) =>\n    {\n      this.reject = async (v: unknown) =>\n      {\n        this.isFullFilled = true\n        this.isPending = false\n        return reject(v)\n      }\n      this.resolve = async (v: unknown) =>\n      {\n        this.isFullFilled = true\n        this.isPending = false\n        return resolve(v as T)\n      }\n    })\n  }\n}\n","import { TPoint, TSegment } from \"../primitive\"\n\n/**\n * @group Utils\n */\nexport function computeDistance(p1: TPoint, p2: TPoint): number\n{\n  const distance = Math.hypot(p2.y - p1.y, p2.x - p1.x)\n  return isNaN(distance) ? 0 : distance\n}\n\n/**\n * @group Utils\n */\nexport function computeAngleAxeRadian(begin: TPoint, end: TPoint): number\n{\n  return Math.atan2(end.y - begin.y, end.x - begin.x)\n}\n\n/**\n * @group Utils\n */\nexport function createPointsOnSegment(p1: TPoint, p2: TPoint, spaceBetweenPoint = 1): TPoint[]\n{\n  const points: TPoint[] = []\n  const globalDistance = computeDistance(p1, p2)\n  let spaceWithP1 = spaceBetweenPoint\n  while (spaceWithP1 < globalDistance) {\n    const p = {\n      x: p1.x + (spaceWithP1 * (p2.x - p1.x)) / globalDistance,\n      y: p1.y + (spaceWithP1 * (p2.y - p1.y)) / globalDistance\n    }\n    points.push(p)\n    spaceWithP1 += spaceBetweenPoint\n  }\n  return points\n}\n\n/**\n * @group Utils\n */\nexport function scalaire(v1: TPoint, v2: TPoint): number\n{\n  return v1.x * v2.x + v1.y * v2.y\n}\n\n/**\n * @group Utils\n */\nexport function computeNearestPointOnSegment(p: TPoint, seg: TSegment): TPoint\n{\n  const vectP1P = { x: p.x - seg.p1.x, y: p.y - seg.p1.y }\n  const vectP1P2 = { x: seg.p2.x - seg.p1.x, y: seg.p2.y - seg.p1.y }\n  const scalaireP1P_P1P2 = scalaire(vectP1P, vectP1P2)\n  const scalaireP1P2_P1P2 = scalaire(vectP1P2, vectP1P2)\n\n  const t = Math.min(1, Math.max(0, scalaireP1P_P1P2 / scalaireP1P2_P1P2))\n  return { x: seg.p1.x + (vectP1P2.x * t), y: seg.p1.y + (vectP1P2.y * t) }\n}\n\n/**\n * @group Utils\n */\nexport function computeDistanceBetweenPointAndSegment(p: TPoint, seg: TSegment): number\n{\n  return computeDistance(p, computeNearestPointOnSegment(p, seg))\n}\n","\n/**\n * @group Utils\n */\nexport const isVersionSuperiorOrEqual = (source: string, target: string): boolean =>\n{\n  const sourceParts = source.split(\".\")\n  const targetParts = target.split(\".\")\n\n  for (let i = 0; i < targetParts.length; i++) {\n    const a = Number(targetParts[i])\n    const b = Number(sourceParts[i])\n    if (a > b) return false\n    if (a < b) return true\n  }\n  return true\n}\n","/**\n * @group Utils\n */\nexport async function computeHmac(message: string, applicationKey: string, hmacKey: string): Promise<string>\n{\n  const enc = new TextEncoder()\n  const messageEncoded = enc.encode(message)\n  const keyEncoded = enc.encode(applicationKey + hmacKey)\n\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    keyEncoded,\n    {\n      name: \"HMAC\",\n      hash: { name: \"SHA-512\" }\n    },\n    false,\n    [\"sign\"]\n  )\n\n  const signature = await crypto.subtle.sign(\n    \"HMAC\",\n    key,\n    messageEncoded\n  )\n\n  const buffer = new Uint8Array(signature)\n  return Array.prototype.map.call(buffer, x => x.toString(16).padStart(2, \"0\")).join(\"\")\n}\n","\n/**\n * @group Utils\n */\nexport function convertMillimeterToPixel(mm: number): number\n{\n  return mm * 96 / 25.4\n}\n\n/**\n * @group Utils\n */\nexport function convertPixelToMillimeter(px: number): number\n{\n  return px / 96 * 25.4\n}\n","\n/**\n * @group Utils\n */\nexport function createUUID(): string\n{\n  let dt = Date.now()\n  const uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c)\n  {\n    const r = (dt + Math.random() * 16) % 16 | 0\n    dt = Math.floor(dt / 16)\n    return (c == \"x\" ? r : (r & 0x3 | 0x8)).toString(16)\n  })\n  return uuid\n}\n","/**\n * @group Math\n */\nexport function isBetween(val: number, min: number, max: number): boolean\n{\n  return val >= min && val <= max\n}\n","\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const mergeDeep = (target: any, ...sources: any[]): any =>\n{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const isObject = (item: any) =>\n  {\n    return (item && typeof item === \"object\" && !Array.isArray(item))\n  }\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, { [key]: {} })\n        }\n        mergeDeep(target[key], source[key])\n      }\n      else if (Array.isArray(target[key]) && Array.isArray(source[key])) {\n        target[key].concat(source[key])\n      }\n      else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n  else if (Array.isArray(target) && Array.isArray(source)) {\n    target = target.concat(source)\n  }\n  else if (source) {\n    target = source\n  }\n\n  return mergeDeep(target, ...sources)\n}\n","import { TConfiguration } from \"../configuration\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport async function getAvailableFontList(configuration: PartialDeep<TConfiguration>): Promise<Array<string>>\n{\n  if (!configuration?.server?.scheme && !configuration?.server?.host) {\n    return Promise.reject(\"Failed to get fonts: configuration.server.scheme & configuration.server.host are required!\")\n  }\n  if (!configuration?.recognition?.lang) {\n    return Promise.reject(\"Failed to get fonts: configuration.recognition.lang is required!\")\n  }\n  const serverConfig = configuration.server\n  const response = await fetch(`${ serverConfig.scheme }://${ serverConfig.host }/api/v4.0/iink/font/google/language/` + configuration.recognition.lang)\n  const { result } = await response.json()\n  return result.sort()\n}\n","import { TConfiguration } from \"../configuration\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport async function getAvailableLanguageList(configuration: PartialDeep<TConfiguration>): Promise<Array<Record<string, string>>>\n{\n  if (configuration?.server?.scheme && configuration?.server?.host) {\n    const serverConfig = configuration.server\n    const response = await fetch(`${ serverConfig.scheme }://${ serverConfig.host }/api/v4.0/iink/availableLanguageList`)\n    return response.json()\n  } else {\n    return Promise.reject(\"Failed to get languages: configuration.server.scheme & configuration.server.host are required!\")\n  }\n}\n","import { TPoint, TPointer } from \"../primitive\"\n\n/**\n * @group Utils\n */\nexport function computeLinksPointers(point: TPointer, angle: number, width: number): TPoint[]\n{\n  const radius = point.p * width\n  return [\n    {\n      x: (point.x - (Math.sin(angle) * radius)),\n      y: (point.y + (Math.cos(angle) * radius))\n    },\n    {\n      x: (point.x + (Math.sin(angle) * radius)),\n      y: (point.y - (Math.cos(angle) * radius))\n    }\n  ]\n}\n\n/**\n * @group Utils\n */\nexport function computeMiddlePointer(point1: TPointer, point2: TPointer): TPointer\n{\n  return {\n    x: ((point2.x + point1.x) / 2),\n    y: ((point2.y + point1.y) / 2),\n    p: ((point2.p + point1.p) / 2),\n    t: ((point2.t + point1.t) / 2)\n  }\n}\n","\n/**\n * @group Configuration\n */\nexport type TListenerConfiguration = {\n  capture: boolean\n  passive: boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultListenerConfiguration: TListenerConfiguration = {\n  capture: false,\n  passive: true\n}\n\n\n/**\n * @group Configuration\n */\nexport type TGrabberConfiguration = {\n  listenerOptions: TListenerConfiguration\n  xyFloatPrecision: number\n  timestampFloatPrecision: number\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultGrabberConfiguration: TGrabberConfiguration = {\n  listenerOptions: DefaultListenerConfiguration,\n  xyFloatPrecision: 0,\n  timestampFloatPrecision: 0\n}\n","\n/**\n * @group Configuration\n */\nexport type TEraserConfiguration = {\n  \"erase-precisely\": boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultEraserConfiguration: TEraserConfiguration = {\n  \"erase-precisely\": false\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\nimport { TTextConfConfiguration } from \"./TextConfiguration\"\n\n/**\n * @group Configuration\n */\nexport type TDiagramConvertConfiguration = {\n  edge?: boolean\n  node?: boolean\n  text?: boolean\n  \"match-text-size\"?: boolean\n}\n\n/**\n * @group Configuration\n */\nexport type TDiagramConfiguration = {\n  mimeTypes: (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n  \"enable-sub-blocks\"?: boolean\n  text?: TTextConfConfiguration\n  convert?: TDiagramConvertConfiguration\n  \"session-time\"?: number\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultDiagramConvertConfiguration: TDiagramConvertConfiguration = {\n  \"match-text-size\": true\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultDiagramConfiguration: TDiagramConfiguration = {\n  convert: DefaultDiagramConvertConfiguration,\n  eraser: DefaultEraserConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\n/**\n * @group Configuration\n */\nexport type TImageViewportConfiguration = {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\n/**\n * @group Configuration\n */\nexport type TImageConfiguration = {\n  guides: boolean\n  viewport: TImageViewportConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport type TJiixConfiguration = {\n  \"bounding-box\"?: boolean\n  strokes: boolean\n  text?: {\n    chars: boolean\n    words: boolean\n  }\n  style?: boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultJiixConfiguration: TJiixConfiguration = {\n  \"bounding-box\": false,\n  strokes: false,\n  text: {\n    chars: false,\n    words: true\n  },\n}\n\n/**\n * @group Configuration\n */\nexport type TMathMLFlavor = {\n  name: string\n}\n\n/**\n * @group Configuration\n */\nexport type TMathMLExport = {\n  flavor: TMathMLFlavor\n}\n\n/**\n * @group Configuration\n */\nexport type TExportConfiguration = {\n  \"image-resolution\"?: number\n  image?: TImageConfiguration\n  jiix?: TJiixConfiguration\n  mathml?: TMathMLExport\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultExportConfiguration: TExportConfiguration = {\n  \"image-resolution\": 300,\n  jiix: DefaultJiixConfiguration\n}\n","\n/**\n * @group Configuration\n */\nexport type TMarginConfiguration = {\n  bottom: number\n  left: number\n  right: number\n  top: number\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultMarginConfiguration: TMarginConfiguration = {\n  top: 20,\n  left: 10,\n  right: 10,\n  bottom: 10\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Configuration\n */\nexport type TRoundingMode = \"half up\" | \"truncate\"\n\n/**\n * @group Configuration\n */\nexport type TAngleUnit = \"deg\" | \"rad\"\n\n/**\n * @group Configuration\n */\nexport type TSolverOptions = \"algebraic\" | \"numeric\"\n\n/**\n * @group Configuration\n */\nexport type TSolverConfiguration = {\n  enable?: boolean\n  \"fractional-part-digits\"?: number\n  \"decimal-separator\"?: string\n  \"rounding-mode\"?: TRoundingMode\n  \"angle-unit\"?: TAngleUnit\n  options?: TSolverOptions\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultSolverConfiguration: TSolverConfiguration = {\n  enable: true,\n  \"fractional-part-digits\": 3,\n  \"decimal-separator\": \".\",\n  \"rounding-mode\": \"half up\",\n  \"angle-unit\": \"deg\"\n}\n\n/**\n * @group Configuration\n */\nexport type TUndoRedoMode = \"stroke\" | \"session\"\n\n/**\n * @group Configuration\n */\nexport type TMathUndoRedoConfiguration = {\n  mode: TUndoRedoMode\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultMathUndoRedoConfiguration: TMathUndoRedoConfiguration = {\n  mode: \"stroke\"\n}\n\n/**\n * @group Configuration\n */\nexport type TMathConfiguration = {\n  mimeTypes: (\"application/x-latex\" | \"application/mathml+xml\" | \"application/vnd.myscript.jiix\")[]\n  solver?: TSolverConfiguration\n  margin: TMarginConfiguration\n  \"undo-redo\"?: TMathUndoRedoConfiguration\n  customGrammar?: string\n  customGrammarId?: string\n  customGrammarContent?: string\n  eraser?: TEraserConfiguration\n  \"session-time\"?: number\n  \"recognition-timeout\"?: number\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultMathConfiguration: TMathConfiguration = {\n  solver: DefaultSolverConfiguration,\n  margin: DefaultMarginConfiguration,\n  eraser: DefaultEraserConfiguration,\n  \"undo-redo\": DefaultMathUndoRedoConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\nimport { TTextConfConfiguration } from \"./TextConfiguration\"\n\n/**\n * @group Configuration\n */\nexport type TRawContentRecognitionConfiguration = {\n  text: boolean\n  shape: boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultRawContentRecognitionConfiguration: TRawContentRecognitionConfiguration = {\n  text: true,\n  shape: true\n}\n\n/**\n * @group Configuration\n */\nexport type TRawContentConfiguration = {\n  text?: TTextConfConfiguration\n  \"session-time\"?: number\n  recognition?: TRawContentRecognitionConfiguration\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultRawContentConfiguration: TRawContentConfiguration = {\n  recognition: DefaultRawContentRecognitionConfiguration,\n  eraser: DefaultEraserConfiguration\n}\n","\n/**\n * @group Configuration\n */\nexport type TRecognitionRendererDebugConfiguration = {\n  \"draw-text-boxes\": boolean\n  \"draw-image-boxes\": boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultDebugConfiguration: TRecognitionRendererDebugConfiguration = {\n  \"draw-text-boxes\": false,\n  \"draw-image-boxes\": false\n}\n\n/**\n * @group Configuration\n */\nexport type TRecognitionRendererConfiguration = {\n  debug: TRecognitionRendererDebugConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultRecognitionRendererConfiguration: TRecognitionRendererConfiguration = {\n  debug: DefaultDebugConfiguration\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Configuration\n */\nexport type TTextGuidesConfiguration = {\n  enable: boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultTextGuidesConfiguration: TTextGuidesConfiguration = {\n  enable: true\n}\n\n/**\n * @group Configuration\n */\nexport type TTextConfConfiguration = {\n  customResources?: string[]\n  customLexicon?: string[]\n  addLKText?: boolean\n}\n\n/**\n * @group Configuration\n */\nexport type TTextConfiguration = {\n  text?: boolean\n  mimeTypes: (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n  margin: TMarginConfiguration\n  guides?: TTextGuidesConfiguration\n  configuration?: TTextConfConfiguration\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultTextConfiguration: TTextConfiguration = {\n  guides: DefaultTextGuidesConfiguration,\n  eraser: DefaultEraserConfiguration,\n  margin: DefaultMarginConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","export type TConvertionConfiguration = {\n    force?: {\n        \"on-stylesheet-change\": boolean\n    }\n}\n\nexport const DefaultConvertionConfiguration: TConvertionConfiguration = {\n    force: {\n        \"on-stylesheet-change\": false\n    }\n}","import {\n  TDiagramConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRawContentConfiguration,\n  TRecognitionRendererConfiguration,\n  TTextConfiguration,\n  TConvertionConfiguration,\n  DefaultDiagramConfiguration,\n  DefaultExportConfiguration,\n  DefaultRecognitionRendererConfiguration,\n  DefaultRawContentConfiguration,\n  DefaultMathConfiguration,\n  DefaultTextConfiguration,\n  DefaultConvertionConfiguration,\n} from \"./recognition\"\n\n/**\n * @group Configuration\n */\nexport type TRecognitionType = \"TEXT\" | \"MATH\" | \"DIAGRAM\" | \"Raw Content\"\n\n/**\n * @group Configuration\n */\nexport type TConverstionState = \"DIGITAL_EDIT\" | \"HANDWRITING\"\n\n/**\n * @group Configuration\n */\nexport type TRecognitionConfiguration = {\n  type: TRecognitionType\n  alwaysConnected: boolean\n  lang: string\n  math: TMathConfiguration\n  text: TTextConfiguration\n  diagram: TDiagramConfiguration\n  renderer: TRecognitionRendererConfiguration\n  export: TExportConfiguration\n  \"raw-content\": TRawContentConfiguration\n  gesture: { enable: boolean }\n  convert: TConvertionConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultRecognitionConfiguration: TRecognitionConfiguration = {\n  diagram: DefaultDiagramConfiguration,\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  \"raw-content\": DefaultRawContentConfiguration,\n  renderer: DefaultRecognitionRendererConfiguration,\n  text: DefaultTextConfiguration,\n  type: \"TEXT\",\n  alwaysConnected: true,\n  lang: \"en_US\",\n  gesture: {\n    enable: true\n  },\n  convert: DefaultConvertionConfiguration,\n}\n","\n/**\n * @group Configuration\n */\nexport type TGuidesConfiguration = {\n  enable: boolean,\n  gap: number\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultGuidesConfiguration: TGuidesConfiguration = {\n  enable: true,\n  gap: 50\n}\n\n/**\n * @group Configuration\n */\nexport type TSmartGuidesConfiguration = {\n  enable: boolean\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultSmartGuidesConfiguration: TSmartGuidesConfiguration = {\n  enable: true,\n}\n\n/**\n * @group Configuration\n */\nexport type TRenderingConfiguration = {\n  minHeight: number\n  minWidth: number\n  smartGuide: TSmartGuidesConfiguration\n  guides: TGuidesConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultRenderingConfiguration: TRenderingConfiguration = {\n  guides: DefaultGuidesConfiguration,\n  smartGuide: DefaultSmartGuidesConfiguration,\n  minHeight: 100,\n  minWidth: 100,\n}\n","\n/**\n * @group Configuration\n */\nexport type TProtocol = \"WEBSOCKET\" | \"REST\"\n\n/**\n * @group Configuration\n */\nexport type TSchene = \"https\" | \"http\"\n\n/**\n * @group Configuration\n */\nexport type TServerConfiguration = {\n  protocol: TProtocol,\n  scheme: TSchene,\n  host: string\n  applicationKey: string\n  hmacKey: string\n  version: string\n  useWindowLocation?: boolean\n  websocket: {\n    pingEnabled: boolean\n    pingDelay: number\n    maxPingLostCount: number\n    autoReconnect: boolean\n    maxRetryCount: number\n    fileChunkSize: number\n  }\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultServerConfiguration: TServerConfiguration = {\n  protocol: \"WEBSOCKET\",\n  scheme: \"https\",\n  host: \"cloud.myscript.com\",\n  applicationKey: \"\",\n  hmacKey: \"\",\n  version: \"2.3.0\",\n  useWindowLocation: false,\n  websocket: {\n    pingEnabled: true,\n    pingDelay: 30000,\n    maxPingLostCount: 10,\n    autoReconnect: true,\n    maxRetryCount: 2,\n    fileChunkSize: 300000\n  }\n}\n","/**\n * @group Configuration\n * @remarks\n * Configure when the action is triggered.\n *\n * POINTER_UP :   Action is triggered on every PenUP.\n *                This is the recommended mode for CDK V3 WebSocket recognitions.\n *\n * QUIET_PERIOD : Action is triggered after a quiet period in milli-seconds on every pointer up.\n *                The value is set to 1000 for example recognition will be triggered when the user stops writing for 1 seconds.\n *                This is the recommended mode for all REST discoveries.\n *\n * DEMAND :       Action is triggered on external demande\n */\n export type TTriggerConfiguration = {\n  exportContent: \"QUIET_PERIOD\" | \"POINTER_UP\" | \"DEMAND\"\n  exportContentDelay: number\n  resizeTriggerDelay: number\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultTriggerConfiguration: TTriggerConfiguration = {\n  exportContent: \"POINTER_UP\",\n  exportContentDelay: 1000,\n  resizeTriggerDelay: 100\n}\n","\n/**\n * @group Configuration\n */\nexport type TUndoRedoConfiguration = {\n  maxStackSize: number\n}\n\n/**\n * @group Event\n */\nexport const DefaultUndoRedoConfiguration: TUndoRedoConfiguration = {\n  maxStackSize: 100\n}\n","\nimport { LoggerClass } from \"../Constants\"\nimport { LoggerManager } from \"../logger\"\nimport { PartialDeep, mergeDeep } from \"../utils\"\nimport { DefaultGrabberConfiguration, TGrabberConfiguration } from \"./GrabberConfiguration\"\nimport { DefaultRecognitionConfiguration, TRecognitionConfiguration } from \"./RecognitionConfiguration\"\nimport { DefaultRenderingConfiguration, TRenderingConfiguration } from \"./RenderingConfiguration\"\nimport { DefaultServerConfiguration, TServerConfiguration } from \"./ServerConfiguration\"\nimport { DefaultTriggerConfiguration, TTriggerConfiguration } from \"./TriggerConfiguration\"\nimport { DefaultUndoRedoConfiguration, TUndoRedoConfiguration } from \"./UndoRedoConfiguration\"\n\n/**\n * @group Configuration\n */\nexport type TConfiguration = {\n  server: TServerConfiguration\n  recognition: TRecognitionConfiguration\n  grabber: TGrabberConfiguration\n  rendering: TRenderingConfiguration\n  triggers: TTriggerConfiguration\n  \"undo-redo\": TUndoRedoConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultConfiguration: TConfiguration = {\n  server: DefaultServerConfiguration,\n  recognition: DefaultRecognitionConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  rendering: DefaultRenderingConfiguration,\n  triggers: DefaultTriggerConfiguration,\n  \"undo-redo\": DefaultUndoRedoConfiguration\n}\n\n/**\n * @group Configuration\n */\nexport class Configuration implements TConfiguration\n{\n  #logger = LoggerManager.getLogger(LoggerClass.CONFIGURATION)\n\n  grabber: TGrabberConfiguration\n  recognition: TRecognitionConfiguration\n  rendering: TRenderingConfiguration\n  server: TServerConfiguration\n  triggers: TTriggerConfiguration\n  \"undo-redo\": TUndoRedoConfiguration\n\n  constructor(configuration?: PartialDeep<TConfiguration>)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.grabber = JSON.parse(JSON.stringify(DefaultConfiguration.grabber))\n    this.recognition = JSON.parse(JSON.stringify(DefaultConfiguration.recognition))\n    this.rendering = JSON.parse(JSON.stringify(DefaultConfiguration.rendering))\n    this.server = JSON.parse(JSON.stringify(DefaultConfiguration.server))\n    this.triggers = JSON.parse(JSON.stringify(DefaultConfiguration.triggers))\n\n    this.overrideDefaultConfiguration(configuration)\n  }\n\n  overrideDefaultConfiguration(configuration?: PartialDeep<TConfiguration>): void\n  {\n    this.#logger.info(\"overrideDefaultConfiguration\", { configuration })\n    const defaultConf = JSON.parse(JSON.stringify(DefaultConfiguration))\n    this.grabber = mergeDeep({}, defaultConf.grabber, configuration?.grabber)\n    this.recognition = mergeDeep({}, defaultConf.recognition, configuration?.recognition)\n    this.rendering = mergeDeep({}, defaultConf.rendering, configuration?.rendering)\n    this.server = mergeDeep({}, defaultConf.server, configuration?.server)\n    this.triggers = mergeDeep({}, defaultConf.triggers, configuration?.triggers)\n    this[\"undo-redo\"] = mergeDeep({}, defaultConf[\"undo-redo\"], configuration?.[\"undo-redo\"])\n\n    this.recognition.text.mimeTypes = configuration?.recognition?.text?.mimeTypes || defaultConf.recognition.text.mimeTypes\n    this.recognition.math.mimeTypes = configuration?.recognition?.math?.mimeTypes || defaultConf.recognition.math.mimeTypes\n    this.recognition.diagram.mimeTypes = configuration?.recognition?.diagram?.mimeTypes || defaultConf.recognition.diagram.mimeTypes\n\n    if (this.server?.useWindowLocation) {\n      this.server.scheme = window.location.protocol.indexOf(\"s\") > -1 ? \"https\" : \"http\"\n      this.server.host = window.location.host\n    }\n\n    if (\n      this.server.protocol === \"REST\" &&\n      this.triggers.exportContent === \"POINTER_UP\"\n    ) {\n      this.triggers.exportContent = \"QUIET_PERIOD\"\n      this.triggers.exportContentDelay = Math.max(this.triggers.exportContentDelay, 50)\n    }\n\n    if (\n      this.server.protocol === \"WEBSOCKET\" &&\n      this.recognition.type === \"TEXT\"\n    ) {\n      if (\n        this.rendering.smartGuide.enable &&\n        !this.recognition.text.mimeTypes.includes(\"application/vnd.myscript.jiix\")\n      ) {\n        // mimeType required for smartGuide\n        this.recognition.text.mimeTypes.push(\"application/vnd.myscript.jiix\")\n      }\n    } else {\n      // smartGuide enable only on websocket text\n      this.rendering.smartGuide.enable = false\n    }\n    this.#logger.debug(\"overrideDefaultConfiguration\", { configuration: this })\n  }\n}\n","import { LoggerClass, LoggerLevel } from \"../Constants\"\n\n/**\n * @group Configuration\n */\nexport type TLoggerConfiguration = {\n  [key in keyof typeof LoggerClass]: LoggerLevel\n}\n\n/**\n * @group Configuration\n */\nexport const DefaultLoggerConfiguration: TLoggerConfiguration = {\n  [LoggerClass.EDITOR]: LoggerLevel.ERROR,\n  [LoggerClass.BEHAVIORS]: LoggerLevel.ERROR,\n  [LoggerClass.RECOGNIZER]: LoggerLevel.ERROR,\n  [LoggerClass.GRABBER]: LoggerLevel.ERROR,\n  [LoggerClass.RENDERER]: LoggerLevel.ERROR,\n  [LoggerClass.CONFIGURATION]: LoggerLevel.ERROR,\n  [LoggerClass.PUBLIC_EVENT]: LoggerLevel.ERROR,\n  [LoggerClass.INTERNAL_EVENT]: LoggerLevel.ERROR,\n  [LoggerClass.MODEL]: LoggerLevel.ERROR,\n  [LoggerClass.STROKE]: LoggerLevel.ERROR,\n  [LoggerClass.SMARTGUIDE]: LoggerLevel.ERROR,\n  [LoggerClass.STYLE]: LoggerLevel.ERROR,\n  [LoggerClass.UNDO_REDO]: LoggerLevel.ERROR\n}\n","/**\n * @group Constants\n * @remarks List all errors generated by the backend with their descriptions\n */\nexport const Error = {\n  NO_ACTIVITY: \"Session closed due to no activity.\",\n  WRONG_CREDENTIALS: \"Application credentials are invalid. Please check or regenerate your application key and hmackey.\",\n  TOO_OLD: \"Session is too old. Max Session Duration Reached.\",\n  UNKNOW: \"An unknown error has occurred.\",\n  ABNORMAL_CLOSURE: \"MyScript recognition server is not reachable.\",\n  CANT_ESTABLISH: \"Unable to establish a connection to MyScript recognition server. Check the host and your connectivity.\",\n  GOING_AWAY: \"MyScript recognition server is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.\",\n  PROTOCOL_ERROR: \"MyScript recognition server terminated the connection due to a protocol error.\",\n  UNSUPPORTED_DATA: \"MyScript recognition server terminated the connection because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)\",\n  INVALID_FRAME_PAULOAD: \"MyScript recognition server terminated the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).\",\n  POLICY_VIOLATION: \"MyScript recognition server terminated the connection because it received a message that violates its policy.\",\n  MESSAGE_TOO_BIG: \"MyScript recognition server terminated the connection because a data frame was received that is too large.\",\n  INTERNAL_ERROR: \"MyScript recognition server terminated the connection because it encountered an unexpected condition that prevented it from fulfilling the request.\",\n  SERVICE_RESTART: \"MyScript recognition server terminated the connection because it is restarting.\",\n  TRY_AGAIN: \"MyScript recognition server terminated the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.\",\n  BAD_GATEWAY: \"MyScript recognition server was acting as a gateway or proxy and received an invalid response from the upstream server.\",\n  TLS_HANDSHAKE: \"MyScript recognition server connection was closed due to a failure to perform a TLS handshake\"\n} as const\n\n/**\n * @group Constants\n * @group Event\n * @description Lists all events that can be listened to on the editor or DOM element\n */\nexport const EventType = {\n  /**\n   * @description event emitted when history has changed i.e. the context of undo-redo\n   */\n  CHANGED: \"changed\",\n  /**\n   * @description event emitted when clearing is complete\n   */\n  CLEARED: \"cleared\",\n  /**\n   * @description event emitted after the conversion is complete\n   */\n  CONVERTED: \"converted\",\n  /**\n   * @description event emitted when the editor encounters an error\n   */\n  ERROR: \"error\",\n  /**\n   * @description event emitted on click on pointer events\n   */\n  POINTEREVENTS: \"pointer_events\",\n  /**\n   * @description event emitted after the end of the export\n   */\n  EXPORTED: \"exported\",\n  /**\n   * @description event emitted after the end of the import\n   */\n  IMPORTED: \"imported\",\n  /**\n   * @description event emitted when the server is idle after a job\n   */\n  IDLE: \"idle\",\n  /**\n   * @description event emitted after full editor initialization\n   */\n  LOADED: \"loaded\",\n} as const\n\n/**\n * @group Constants\n * @group Event\n * @description Lists all internal library events\n */\nexport const InternalEventType = {\n  SVG_PATCH: \"internal_svg_patch\",\n  EXPORTED: \"internal_exported\",\n  CLEAR_MESSAGE: \"internal_clear_message\",\n  ERROR: \"internal_error\",\n  NOTIF: \"internal_notif\",\n  IMPORT_JIIX: \"internal_import_jiix\",\n  CONVERT: \"internal_convert\",\n  CLEAR: \"internal_clear\",\n  CONTEXT_CHANGE: \"internal_context_change\",\n  IDLE: \"internal_idle\",\n  WS_CLOSED: \"internal_websocket_closed\"\n} as const\n\n/**\n * @group Editor\n * @group Constants\n * @group Model/Export\n * @description List all supported MIME types for export. Please note, the MIME types supported depend on the recognition type configured\n */\nexport const enum ExportType {\n  JIIX = \"application/vnd.myscript.jiix\",\n  TEXT = \"text/plain\",\n  LATEX = \"application/x-latex\",\n  MATHML = \"application/mathml+xml\",\n  SVG = \"image/svg+xml\",\n  OFFICE_DOCUMENT = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n}\n\n/**\n * @group Constants\n * @group Editor\n * @description List the possibilities of interactions\n */\nexport const enum Intention\n{\n  Write = \"write\",\n  Erase = \"erase\",\n}\n\n/**\n * @group Constants\n * @group Logger\n */\nexport const enum LoggerLevel\n{\n  DEBUG = \"1\",\n  INFO = \"2\",\n  WARN = \"3\",\n  ERROR = \"4\"\n}\n\n/**\n * @group Constants\n * @group Logger\n */\nexport const enum LoggerClass\n{\n  EDITOR = \"EDITOR\",\n  RECOGNIZER = \"RECOGNIZER\",\n  GRABBER = \"GRABBER\",\n  BEHAVIORS = \"BEHAVIORS\",\n  CONFIGURATION = \"CONFIGURATION\",\n  PUBLIC_EVENT = \"PUBLIC_EVENT\",\n  MODEL = \"MODEL\",\n  RENDERER = \"RENDERER\",\n  SMARTGUIDE = \"SMARTGUIDE\",\n  STYLE = \"STYLE\",\n  UNDO_REDO = \"UNDO_REDO\",\n  STROKE = \"STROKE\",\n  INTERNAL_EVENT = \"INTERNAL_EVENT\"\n}\n","import { InternalEventType, LoggerClass } from \"../Constants\"\nimport { TConverstionState } from \"../configuration\"\nimport { LoggerManager } from \"../logger\"\nimport { TExport, TJIIXExport } from \"../model\"\nimport { TWSMessageEventSVGPatch } from \"../recognizer\"\nimport { TUndoRedoContext } from \"../undo-redo\"\n\n/**\n * @group Event\n */\nexport class InternalEvent extends EventTarget\n{\n  static #instance: InternalEvent\n  #abortController: AbortController\n  #logger = LoggerManager.getLogger(LoggerClass.INTERNAL_EVENT)\n\n  private constructor()\n  {\n    super()\n    this.#logger.info(\"constructor\")\n    this.#abortController = new AbortController()\n  }\n\n  public static getInstance(): InternalEvent\n  {\n    if (!InternalEvent.#instance) {\n      InternalEvent.#instance = new InternalEvent()\n    }\n\n    return InternalEvent.#instance\n  }\n\n  removeAllListeners(): void\n  {\n    this.#logger.info(\"removeAllListeners\")\n    this.#abortController.abort()\n    this.#abortController = new AbortController()\n  }\n\n  #emit(type: string, data?: unknown): void\n  {\n    this.dispatchEvent(new CustomEvent(type, Object.assign({ bubbles: true, composed: true }, data ? { detail: data } : undefined)))\n  }\n\n  emitSVGPatch(patchChange: TWSMessageEventSVGPatch): void\n  {\n    this.#logger.info(\"emitSVGPatch\", { patchChange })\n    this.#emit(InternalEventType.SVG_PATCH, patchChange)\n  }\n  addSVGPatchListener(callback: (contentChange: TWSMessageEventSVGPatch) => void): void\n  {\n    this.#logger.info(\"addSVGPatchListener\", { callback })\n    this.addEventListener(InternalEventType.SVG_PATCH, (evt: unknown) => callback(((evt as CustomEvent).detail as TWSMessageEventSVGPatch)), { signal: this.#abortController.signal })\n  }\n\n  emitExported(exports: TExport): void\n  {\n    this.#logger.info(\"emitExported\", { exports })\n    this.#emit(InternalEventType.EXPORTED, exports)\n  }\n  addExportedListener(callback: (exports: TExport) => void): void\n  {\n    this.#logger.info(\"addExportedListener\", { callback })\n    this.addEventListener(InternalEventType.EXPORTED, (evt: unknown) => callback(((evt as CustomEvent).detail as TExport)), { signal: this.#abortController.signal })\n  }\n\n  emitClearMessage(): void\n  {\n    this.#logger.info(\"emitClearMessage\")\n    this.#emit(InternalEventType.CLEAR_MESSAGE)\n  }\n  addClearMessageListener(callback: () => void): void\n  {\n    this.#logger.info(\"addClearMessageListener\", { callback })\n    this.addEventListener(InternalEventType.CLEAR_MESSAGE, () => callback(), { signal: this.#abortController.signal })\n  }\n\n  emitError(err: Error): void\n  {\n    this.#logger.info(\"emitError\", { err })\n    this.#emit(InternalEventType.ERROR, err)\n  }\n\n  addErrorListener(callback: (err: Error) => void): void\n  {\n    this.#logger.info(\"addErrorListener\", { callback })\n    this.addEventListener(InternalEventType.ERROR, (evt: unknown) => callback(((evt as CustomEvent).detail as Error)), { signal: this.#abortController.signal })\n  }\n\n  emitWSClosed(): void\n  {\n    this.#logger.info(\"emitWSClosed\")\n    this.#emit(InternalEventType.WS_CLOSED)\n  }\n  addWSClosedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addWSClosedListener\", { callback })\n    this.addEventListener(InternalEventType.WS_CLOSED, () => callback(), { signal: this.#abortController.signal })\n  }\n\n  emitNotif(notif: { message: string, timeout?: number }): void\n  {\n    this.#logger.info(\"emitWNotif\", { notif })\n    this.#emit(InternalEventType.NOTIF, notif)\n  }\n  addNotifListener(callback: (notif: { message: string, timeout?: number }) => void): void\n  {\n    this.#logger.info(\"addNotifListener\", { callback })\n    this.addEventListener(InternalEventType.NOTIF, (evt: unknown) => callback(((evt as CustomEvent).detail as { message: string, timeout?: number })), { signal: this.#abortController.signal })\n  }\n\n  emitImportJIIX(jiix: TJIIXExport): void\n  {\n    this.#logger.info(\"emitImportJIIX\", { jiix })\n    this.#emit(InternalEventType.IMPORT_JIIX, jiix)\n  }\n  addImportJIIXListener(callback: (jiix: TJIIXExport) => void): void\n  {\n    this.#logger.info(\"addImportJIIXListener\", { callback })\n    this.addEventListener(InternalEventType.IMPORT_JIIX, (evt: unknown) => callback(((evt as CustomEvent).detail as TJIIXExport)), { signal: this.#abortController.signal })\n  }\n\n  emitConvert(conversionState: TConverstionState = \"DIGITAL_EDIT\"): void\n  {\n    this.#logger.info(\"emitConvert\", { conversionState })\n    this.#emit(InternalEventType.CONVERT, conversionState)\n  }\n  addConvertListener(callback: (params?: { conversionState?: TConverstionState, mimeTypes?: string[] }) => void): void\n  {\n    this.#logger.info(\"addConvertListener\", { callback })\n    this.addEventListener(InternalEventType.CONVERT, (evt: unknown) => callback(((evt as CustomEvent).detail as { conversionState?: TConverstionState, mimeTypes?: string[] })), { signal: this.#abortController.signal })\n  }\n\n  emitClear(): void\n  {\n    this.#logger.info(\"emitClear\")\n    this.#emit(InternalEventType.CLEAR)\n  }\n  addClearListener(callback: () => void): void\n  {\n    this.#logger.info(\"addClearListener\", { callback })\n    this.addEventListener(InternalEventType.CLEAR, () => callback(), { signal: this.#abortController.signal })\n  }\n\n  emitContextChange(context: TUndoRedoContext): void\n  {\n    this.#logger.info(\"emitContextChange\", { context })\n    this.#emit(InternalEventType.CONTEXT_CHANGE, context)\n  }\n  addContextChangeListener(callback: (context: TUndoRedoContext) => void): void\n  {\n    this.#logger.info(\"addContextChangeListener\", { callback })\n    this.addEventListener(InternalEventType.CONTEXT_CHANGE, (evt: unknown) => callback(((evt as CustomEvent).detail as TUndoRedoContext)), { signal: this.#abortController.signal })\n  }\n\n  emitIdle(idle: boolean): void\n  {\n    this.#logger.info(\"emitIdle\", { idle })\n    this.#emit(InternalEventType.IDLE, idle)\n  }\n  addIdleListener(callback: (idle: boolean) => void): void\n  {\n    this.#logger.info(\"addIdleListener\", { callback })\n    this.addEventListener(InternalEventType.IDLE, (evt: unknown) => callback(((evt as CustomEvent).detail as boolean)), { signal: this.#abortController.signal })\n  }\n\n}\n","import { EventType, LoggerClass } from \"../Constants\"\nimport { LoggerManager } from \"../logger\"\nimport { IModel, TExport } from \"../model\"\nimport { TUndoRedoContext } from \"../undo-redo\"\n\n/**\n * @group Event\n */\nexport class PublicEvent extends EventTarget\n{\n  static #instance: PublicEvent\n  #element?: HTMLElement\n  #logger = LoggerManager.getLogger(LoggerClass.PUBLIC_EVENT)\n\n  private constructor()\n  {\n    super()\n  }\n\n  public static getInstance(): PublicEvent\n  {\n    if (!PublicEvent.#instance) {\n      PublicEvent.#instance = new PublicEvent()\n    }\n\n    return PublicEvent.#instance\n  }\n\n  setElement(el: HTMLElement)\n  {\n    this.#logger.info(\"setElement\", { el })\n    this.#element = el\n  }\n\n  #emit(type: string, data?: unknown): void\n  {\n    const evt = new CustomEvent(type, Object.assign({ bubbles: true, composed: true }, data ? { detail: data } : undefined))\n    this.dispatchEvent(evt)\n    this.#element?.dispatchEvent(evt)\n  }\n\n  emitLoaded(): void\n  {\n    this.#logger.info(\"emitLoaded\")\n    this.#emit(EventType.LOADED)\n  }\n\n  emitExported(exports: TExport): void\n  {\n    this.#logger.info(\"emitExported\", { exports })\n    this.#emit(EventType.EXPORTED, exports)\n  }\n\n  emitChanged(undoRedoContext: TUndoRedoContext): void\n  {\n    this.#logger.info(\"emitChanged\", { undoRedoContext })\n    this.#emit(EventType.CHANGED, {\n      ...undoRedoContext,\n      canClear: !undoRedoContext.empty\n    })\n  }\n\n  emitIdle(idle: boolean): void\n  {\n    this.#logger.info(\"emitIdle\", { idle })\n    this.#emit(EventType.IDLE, idle)\n  }\n\n  emitCleared(model?: IModel): void\n  {\n    this.#logger.info(\"emitCleared\", { model })\n    this.#emit(EventType.CLEARED, model)\n  }\n\n  emitConverted(exports: TExport): void\n  {\n    this.#logger.info(\"emitConverted\", { exports })\n    this.#emit(EventType.CONVERTED, exports)\n  }\n\n  emitImported(exports: TExport): void\n  {\n    this.#logger.info(\"emitImported\", { exports })\n    this.#emit(EventType.IMPORTED, exports)\n  }\n}\n","import { LoggerClass } from \"../Constants\"\nimport { TGrabberConfiguration } from \"../configuration\"\nimport { LoggerManager } from \"../logger\"\nimport { TPointer } from \"../primitive\"\nimport { IGrabber } from \"./IGrabber\"\n\n/**\n * @group Grabber\n */\nexport class PointerEventGrabber implements IGrabber\n{\n  protected configuration: TGrabberConfiguration\n\n  protected domElement!: HTMLElement\n\n  protected activePointerId?: number\n\n  protected prevent = (e: Event) => e.preventDefault()\n  #logger = LoggerManager.getLogger(LoggerClass.GRABBER)\n\n  onPointerDown!: (evt: PointerEvent, point: TPointer) => void\n  onPointerMove!: (evt: PointerEvent, point: TPointer) => void\n  onPointerUp!: (evt: PointerEvent, point: TPointer) => void\n\n  constructor(configuration: TGrabberConfiguration)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n  }\n\n  protected roundFloat(oneFloat: number, requestedFloatPrecision: number): number\n  {\n    if (requestedFloatPrecision >= 0) {\n      const floatPrecision: number = Math.pow(10, requestedFloatPrecision)\n      return Math.round(oneFloat / floatPrecision) * floatPrecision\n    }\n    this.#logger.debug(\"roundFloat\", { oneFloat, requestedFloatPrecision })\n    return oneFloat\n  }\n\n  protected extractPoint(event: MouseEvent | TouchEvent): TPointer\n  {\n    let clientX: number, clientY: number\n    if (\"changedTouches\" in event) {\n      ({ clientX, clientY } = event.changedTouches[0])\n    } else {\n      ({ clientX, clientY } = event)\n    }\n    const rect: DOMRect = this.domElement.getBoundingClientRect()\n    const pointer = {\n      x: this.roundFloat(clientX - rect.left - this.domElement.clientLeft + this.domElement.scrollLeft, this.configuration.xyFloatPrecision),\n      y: this.roundFloat(clientY - rect.top - this.domElement.clientTop + this.domElement.scrollTop, this.configuration.xyFloatPrecision),\n      t: this.roundFloat(Date.now(), this.configuration.timestampFloatPrecision),\n      p: (event as PointerEvent).pressure || 1,\n    }\n    this.#logger.debug(\"extractPoint\", { event, pointer })\n    return pointer\n  }\n\n  protected pointerDownHandler = (evt: PointerEvent) =>\n  {\n    this.#logger.info(\"pointerDown\", { evt })\n\n    // exit if not a left click or multi-touch\n    if (evt.button !== 0 || evt.buttons !== 1) {\n      return\n    }\n\n    this.activePointerId = evt.pointerId\n\n    if (this.onPointerDown) {\n      const point = this.extractPoint(evt)\n      this.onPointerDown(evt, point)\n    }\n  }\n\n  protected pointerMoveHandler = (evt: PointerEvent) =>\n  {\n    this.#logger.info(\"pointerMove\", { evt })\n    if (this.activePointerId != undefined && this.activePointerId === evt.pointerId) {\n      if ((evt.target as HTMLElement).classList.contains(\"smartguide\")) {\n        this.pointerUpHandler(evt)\n        return\n      }\n      if (this.onPointerMove) {\n        const point = this.extractPoint(evt)\n        this.onPointerMove(evt, point)\n      }\n    }\n  }\n\n  protected pointerUpHandler = (evt: PointerEvent) =>\n  {\n    this.#logger.info(\"pointerUp\", { evt })\n    if (this.activePointerId != undefined && this.activePointerId === evt.pointerId) {\n      this.activePointerId = undefined\n      evt.stopPropagation()\n      if (this.onPointerUp) {\n        const point = this.extractPoint(evt)\n        this.onPointerUp(evt, point)\n      }\n    }\n  }\n\n  private pointerOutHandler = (evt: PointerEvent) =>\n  {\n    if (\n      this.activePointerId != undefined && this.activePointerId === evt.pointerId &&\n      !this.domElement.contains(evt.target as HTMLElement)\n    ) {\n      evt.stopPropagation()\n      this.activePointerId = undefined\n      if (this.onPointerUp) {\n        const point = this.extractPoint(evt)\n        this.onPointerUp(evt, point)\n      }\n    }\n  }\n\n  attach(domElement: HTMLElement)\n  {\n    this.#logger.info(\"attach\", { domElement })\n    if (this.domElement) {\n      this.detach()\n    }\n    this.domElement = domElement\n    this.domElement.addEventListener(\"pointerdown\", this.pointerDownHandler, this.configuration.listenerOptions)\n    this.domElement.addEventListener(\"pointermove\", this.pointerMoveHandler, this.configuration.listenerOptions)\n    this.domElement.addEventListener(\"pointerup\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement.addEventListener(\"pointerleave\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement.addEventListener(\"pointercancel\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement.addEventListener(\"pointerout\", this.pointerOutHandler, this.configuration.listenerOptions)\n\n    this.domElement.addEventListener(\"touchmove\", this.prevent)\n\n    // FIXME investigate why this is needed for iOS devices\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    document.documentElement.addEventListener(\"pointerdown\", () => { })\n  }\n\n  detach()\n  {\n    this.#logger.info(\"detach\")\n    this.domElement?.removeEventListener(\"pointerdown\", this.pointerDownHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"pointermove\", this.pointerMoveHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"pointerup\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"pointerleave\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"pointercancel\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"pointerout\", this.pointerOutHandler, this.configuration.listenerOptions)\n    this.domElement?.removeEventListener(\"touchmove\", this.prevent)\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    document.documentElement.removeEventListener(\"pointerdown\", () => { })\n  }\n}\n","import { TStyle } from \"./Style\"\n\n/**\n * @group Style\n * @property {String} -myscript-pen-width=1 Width of strokes and primitives in mm (no other unit is supported yet)\n * @property {String} -myscript-pen-fill-style=none\n * @property {String} -myscript-pen-fill-color=#FFFFFF00 Color filled inside the area delimited by strokes and primitives\n */\nexport type TPenStyle = TStyle & {\n  \"-myscript-pen-width\"?: number\n  \"-myscript-pen-fill-style\"?: string\n  \"-myscript-pen-fill-color\"?: string\n}\n\n/**\n * @group Style\n */\nexport const DefaultPenStyle: TPenStyle = {\n\n}\n","import { TPenStyle } from \"./PenStyle\"\n\n/**\n * @group Style\n */\nexport type TThemeMath = {\n  \"font-family\": string\n}\n\n/**\n * @group Style\n */\nexport type TThemeMathSolved = {\n  \"font-family\": string\n  color: string\n}\n\n/**\n * @group Style\n */\nexport type TThemeText = {\n  \"font-family\": string,\n  \"font-size\": number\n}\n\n/**\n * @group Style\n */\nexport type TTheme = {\n  ink: TPenStyle\n  \".math\": TThemeMath\n  \".math-solved\": TThemeMathSolved\n  \".text\": TThemeText\n  [key: string]: unknown\n}\n\n/**\n * @group Style\n */\nexport const DefaultTheme: TTheme = {\n  ink: {\n    color: \"#000000\",\n    width: 1,\n    \"-myscript-pen-width\": 1,\n    \"-myscript-pen-fill-style\": \"none\",\n    \"-myscript-pen-fill-color\": \"#FFFFFF00\"\n  },\n  \".math\": {\n    \"font-family\": \"STIXGeneral\"\n  },\n  \".math-solved\": {\n    \"font-family\": \"STIXGeneral\",\n    color: \"#A8A8A8FF\"\n  },\n  \".text\": {\n    \"font-family\": \"MyScriptInter\",\n    \"font-size\": 10\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.JsonCSS=e():t.JsonCSS=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=1)}([function(t,e,n){\"use strict\";function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(e,\"__esModule\",{value:!0});var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i=function t(e){var n=this;o(this,t),this.toJSON=function(t){if(\"string\"!=typeof t)return console.error(\"Need a CSS string but given \",void 0===t?\"undefined\":r(t),t),\"Not a valid CSS..!\";var e={},o=void 0,i=void 0,u=void 0;try{t.split(\"{\").forEach(function(t){if(i=t.trim())if(-1===i.indexOf(\"}\"))e[i]={},o=i;else{i.substring(0,i.indexOf(\"}\")).split(\";\").forEach(function(t){(u=t.split(\":\"))&&2===u.length&&(e[o][u[0].trim().replace(/^\\\"|\\\"$/g,\"\")]=n._trimSemiColon(u[1].trim().replace(/^\\\"|\\\"$/g,\"\")))});try{o=i.split(\"}\")[1].trim(),o&&(e[o]={})}catch(t){}}})}catch(t){return\"Not a valid CSS..!\"}return e},this.toCSS=function(t){if(\"object\"!==(void 0===t?\"undefined\":r(t)))return console.error(\"Need a JSON object but given \",void 0===t?\"undefined\":r(t),t),\"Not a valid JSON..!\";var e=\"\";try{for(var n in t)if(t.hasOwnProperty(n)){e+=n+\" {\\n\";for(var o in t[n])t[n].hasOwnProperty(o)&&(e+=o+\": \"+t[n][o]+\";\\n\");e+=\"}\\n\"}}catch(t){return\"Not a valid JSON..!\"}return e},this._trimSemiColon=function(t){return\";\"===t.slice(-1)?t.slice(0,n.length-1):t}};e.default=i},function(t,e,n){\"use strict\";t.exports=n(0).default}])});","import JsonCSS from \"json-css\"\nimport { TTheme } from \"./Theme\"\nimport { TPenStyle } from \"./PenStyle\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst parser: any = new JsonCSS()\n\n/**\n * @group Style\n */\nexport const StyleHelper = {\n  themeToCSS(json: TTheme): string\n  {\n    return parser.toCSS(json) as string\n    // css = css.replace( /[\\r\\n]+/gm, \"\" )\n    // return css\n  },\n  themeToJSON(style: string): TTheme\n  {\n    const theme = parser.toJSON(style) as TTheme\n    theme[\".text\"][\"font-size\"] = Number(theme[\".text\"][\"font-size\"])\n    theme.ink[\"-myscript-pen-width\"] = Number(theme.ink[\"-myscript-pen-width\"])\n    theme.ink.width = Number(theme.ink.width)\n    return theme\n  },\n  penStyleToCSS (penStyle: TPenStyle): string {\n    let css = parser.toCSS({ css: penStyle }) as string\n    css = css.substring(6, css.length - 3)\n    return css\n  },\n  penStyleToJSON (penStyleString: string): TPenStyle {\n    const penStyle = parser.toJSON(`css {${penStyleString}}`).css as TPenStyle\n    if (penStyle.width) {\n      penStyle.width = Number(penStyle.width)\n    } else {\n      delete penStyle.width\n    }\n    if (penStyle[\"-myscript-pen-width\"]) {\n      penStyle[\"-myscript-pen-width\"] = Number(penStyle[\"-myscript-pen-width\"])\n    } else {\n      delete penStyle[\"-myscript-pen-width\"]\n    }\n    return penStyle\n  },\n\n  stringToJSON(style: string): {[key: string]: string}\n  {\n    return parser.toJSON(`css {${style}}`).css\n  },\n  JSONToString(style: {[key: string]: string}): string\n  {\n    return Object.entries(style).map(([k, v]) => `${k}:${v}`).join(\";\")\n  }\n}\n","import { TStyle } from \"../style\"\nimport { createUUID } from \"../utils\"\n\nexport const enum SymbolType\n{\n  Stroke = \"stroke\",\n  Shape = \"shape\",\n  Text = \"text\"\n}\n\n/**\n * @group Primitive\n */\nexport type TSymbol = {\n  id: string\n  creationTime: number\n  modificationDate: number\n  type: SymbolType | string\n  style: TStyle\n}\n\n/**\n * @group Primitive\n */\nexport abstract class AbstractSymbol\n{\n  id: string\n  creationTime: number\n  modificationDate: number\n  type: SymbolType\n  style: TStyle\n\n  constructor(type: SymbolType, style: TStyle)\n  {\n    this.creationTime = Date.now()\n    this.id = `${type}-${createUUID()}`\n    this.modificationDate = this.creationTime\n    this.type = type\n    this.style = style\n  }\n\n  abstract getClone(): AbstractSymbol\n}\n","import { LoggerClass } from \"../Constants\"\nimport { LoggerManager } from \"../logger\"\nimport { PartialDeep, mergeDeep } from \"../utils\"\nimport { DefaultPenStyle, TPenStyle } from \"./PenStyle\"\nimport { DefaultTheme, TTheme } from \"./Theme\"\n\n/**\n * @group Style\n */\nexport class StyleManager\n{\n  #penStyle!: TPenStyle\n  #theme!: TTheme\n  #penStyleClasses!: string\n  #currentPenStyle!: TPenStyle\n  #logger =  LoggerManager.getLogger(LoggerClass.STYLE)\n\n  constructor(penStyle?: PartialDeep<TPenStyle>, theme?: PartialDeep<TTheme>)\n  {\n    this.#logger.info(\"constructor\", { penStyle, theme })\n    this.setTheme(theme)\n    this.setPenStyleClasses()\n    this.setPenStyle(penStyle)\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.#currentPenStyle || this.#penStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.#penStyle\n  }\n  setPenStyle(style?: PartialDeep<TPenStyle>)\n  {\n    this.#logger.info(\"setPenStyle\", { style })\n    this.#penStyle = mergeDeep(structuredClone(DefaultPenStyle), style || {}) as TPenStyle\n    this.#currentPenStyle = style || (this.theme[`.${ this.#penStyleClasses }`]) as TPenStyle\n    this.#logger.debug(\"setPenStyle\", this.#currentPenStyle)\n  }\n\n  get theme(): TTheme\n  {\n    return this.#theme\n  }\n  setTheme(theme?: PartialDeep<TTheme>)\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    this.#theme = mergeDeep(structuredClone(DefaultTheme), theme || {}) as TTheme\n    this.#logger.debug(\"setTheme\", this.#theme)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.#penStyleClasses\n  }\n  setPenStyleClasses(penStyleClass = \"\")\n  {\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClass })\n    this.#penStyleClasses = penStyleClass\n    this.#currentPenStyle = (this.theme[`.${ this.#penStyleClasses }`]) as TPenStyle\n    this.#logger.debug(\"setPenStyleClasses\", this.#currentPenStyle)\n  }\n\n}\n","import { LoggerClass } from \"../Constants\"\nimport { LoggerManager } from \"../logger\"\nimport { DefaultPenStyle, TPenStyle } from \"../style\"\nimport { PartialDeep } from \"../utils\"\nimport { TPointer } from \"./Point\"\nimport { AbstractSymbol, SymbolType, TSymbol } from \"./Symbol\"\n\n/**\n * @group Primitive\n */\nexport type TStrokeToSend = {\n  id: string\n  pointerType: string\n  x: number[]\n  y: number[]\n  t: number[]\n  p: number[]\n}\n\n/**\n * @group Primitive\n */\nexport type TStrokeGroupToSend = {\n  penStyle?: string\n  strokes: TStrokeToSend[]\n}\n\n/**\n * @group Primitive\n */\nexport type TStroke = TSymbol & {\n  pointerId: number\n  pointerType: string\n  pointers: TPointer[]\n  length: number\n}\n\n/**\n * @group Primitive\n */\nexport type TStrokeGroup = {\n  penStyle: TPenStyle\n  strokes: Stroke[]\n}\n\n/**\n * @group Primitive\n */\nexport class Stroke extends AbstractSymbol implements TStroke\n{\n  #logger = LoggerManager.getLogger(LoggerClass.STROKE)\n\n  pointerId: number\n  pointerType: string\n  pointers: TPointer[]\n  length: number\n  style: TPenStyle\n\n  constructor(style: TPenStyle, pointerId: number, pointerType = \"pen\")\n  {\n    super(SymbolType.Stroke, style)\n    this.#logger.info(\"constructor\", { style, pointerId, pointerType })\n\n    this.style = style\n    this.pointerId = pointerId\n    this.pointerType = pointerType\n    this.pointers = []\n    this.length = 0\n  }\n\n  getClone(): Stroke\n  {\n    const clone = new Stroke(this.style, this.pointerId, this.pointerType)\n    clone.id = this.id\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    clone.length = this.length\n    return clone\n  }\n\n  formatToSend(): TStrokeToSend\n  {\n    const json: TStrokeToSend = {\n      id: this.id,\n      pointerType: this.pointerType,\n      p: [],\n      t: [],\n      x: [],\n      y: []\n    }\n    this.pointers.forEach(p => {\n      json.p.push(p.p)\n      json.t.push(p.t)\n      json.x.push(p.x)\n      json.y.push(p.y)\n    })\n    return json\n  }\n}\n\n/**\n * @group Primitive\n * @group Utils\n */\nexport function convertPartialStrokesToStrokes(json: PartialDeep<TStroke>[]): Stroke[]\n{\n  const errors: string[] = []\n  const strokes: Stroke[] = []\n  json.forEach((j, ji) => {\n    let flag = true\n    const stroke = new Stroke(j.style || DefaultPenStyle, j.pointerId || 1)\n    if (j.id) stroke.id = j.id\n    if (!j.pointers?.length) {\n      errors.push(`stroke ${ji + 1} has not pointers`)\n      flag = false\n      return\n    }\n    j.pointers?.forEach((pp, pIndex) => {\n      if (!pp) {\n        errors.push(`stroke ${ji + 1} has no pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      const pointer: TPointer = {\n        p: pp.p || 1,\n        t: pp.t || pIndex,\n        x: 0,\n        y: 0\n      }\n      if (pp?.x == undefined || pp?.x == null) {\n        errors.push(`stroke ${ji + 1} has no x at pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      else {\n        pointer.x = pp.x\n      }\n      if (pp?.y == undefined || pp?.y == null) {\n        errors.push(`stroke ${ji + 1} has no y at pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      else {\n        pointer.y = pp.y\n      }\n      if (flag) {\n        stroke.pointers.push(pointer)\n      }\n    })\n    if (flag) {\n      strokes.push(stroke)\n    }\n  })\n\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"))\n  }\n\n  return strokes\n}\n","import { LoggerClass } from \"../Constants\"\nimport { LoggerManager } from \"../logger\"\nimport { TPenStyle } from \"../style\"\nimport { computeDistance } from \"../utils\"\nimport { TExport } from \"./Export\"\nimport { IModel, TRecognitionPositions } from \"./IModel\"\nimport { Stroke, TPoint, TPointer } from \"../primitive\"\n\n/**\n * @group Model\n */\nexport class Model implements IModel\n{\n  readonly creationTime: number\n  modificationDate: number\n  positions: TRecognitionPositions\n  currentSymbol?: Stroke\n  symbols: Stroke[]\n  exports?: TExport\n  converts?: TExport\n  width: number\n  height: number\n  rowHeight: number\n  idle: boolean\n  #logger = LoggerManager.getLogger(LoggerClass.MODEL)\n\n  constructor(width = 100, height = 100, rowHeight = 0, creationDate = Date.now())\n  {\n    this.#logger.info(\"constructor\", { width, height, creationDate })\n    this.creationTime = creationDate\n    this.modificationDate = creationDate\n    this.width = width\n    this.height = height\n    this.rowHeight = rowHeight\n    this.symbols = []\n    this.positions = {\n      lastSentPosition: 0,\n      lastReceivedPosition: 0\n    }\n    this.idle = true\n  }\n\n  protected computePressure(distance: number, globalDistance: number): number\n  {\n    let ratio = 1.0\n    if (distance === globalDistance) {\n      ratio = 1.0\n    } else if (distance < 10) {\n      ratio = 0.2 + Math.pow(0.1 * distance, 0.4)\n    } else if (distance > globalDistance - 10) {\n      ratio = 0.2 + Math.pow(0.1 * (globalDistance - distance), 0.4)\n    }\n    const pressure = ratio * Math.max(0.1, 1.0 - (0.1 * Math.sqrt(distance)))\n    return isNaN(pressure) ? 0.5 : Math.round(pressure * 100) / 100\n  }\n\n  protected filterPointByAcquisitionDelta(stroke: Stroke, point: TPointer, lastPointer?: TPointer): boolean\n  {\n    const delta: number = (2 + ((stroke.style[\"-myscript-pen-width\"] || 0) / 4))\n    return !lastPointer ||\n      stroke.pointers.length === 0 ||\n      Math.abs(lastPointer.x - point.x) >= delta ||\n      Math.abs(lastPointer.y - point.y) >= delta\n  }\n\n  getStrokeFromPoint(point: TPoint): Stroke[]\n  {\n    this.#logger.info(\"getStrokeFromPoint\", { point })\n    const isBetween = (val: number, min: number, max: number): boolean => (val >= min && val <= max)\n\n    const _strokeList: Stroke[] = []\n    this.symbols.forEach((stroke) =>\n    {\n      for (let i = 0; i < stroke.pointers.length; i++) {\n        const strokePointer = stroke.pointers[i]\n        if (\n          isBetween(strokePointer.x, point.x - 5, point.x + 5) &&\n          isBetween(strokePointer.y, point.y - 5, point.y + 5)\n        ) {\n          _strokeList.push(stroke)\n          break\n        }\n        else {\n          if (computeDistance(point, strokePointer) < 10) {\n            _strokeList.push(stroke)\n            break\n          }\n        }\n      }\n    })\n    this.#logger.debug(\"getStrokeFromPoint\", { strokes: _strokeList })\n    return _strokeList\n  }\n\n  addPoint(stroke: Stroke, pointer: TPointer): void\n  {\n    this.#logger.debug(\"addPoint\", { stroke, pointer })\n    const lastPointer = stroke.pointers.at(-1)\n    if (this.filterPointByAcquisitionDelta(stroke, pointer, lastPointer)) {\n      const distance = lastPointer ? computeDistance(pointer, lastPointer) : 0\n      stroke.length += distance\n      pointer.p = this.computePressure(distance, stroke.length)\n      stroke.pointers.push(pointer)\n      stroke.modificationDate = Date.now()\n    }\n  }\n\n  addStroke(stroke: Stroke): void\n  {\n    this.#logger.info(\"addStroke\", { stroke })\n    this.symbols.push(stroke)\n    this.modificationDate = Date.now()\n    this.converts = undefined\n    this.exports = undefined\n  }\n\n  updateStroke(updatedStroke: Stroke): void\n  {\n    this.#logger.info(\"updateStroke\", { updatedStroke })\n    const strokeIndex = this.symbols.findIndex((s: Stroke): boolean => s.id === updatedStroke.id)\n    if (strokeIndex !== -1) {\n      updatedStroke.modificationDate = Date.now()\n      this.symbols.splice(strokeIndex, 1, updatedStroke)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"updateStroke\", this.symbols)\n  }\n\n  removeStroke(id: string): void\n  {\n    this.#logger.info(\"removeStroke\", { id })\n    const strokeIndex = this.symbols.findIndex(s => s.id === id)\n    if (strokeIndex !== -1) {\n      this.positions.lastSentPosition--\n      this.positions.lastReceivedPosition--\n      this.symbols.splice(strokeIndex, 1)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"removeStroke\", this.symbols)\n  }\n\n  removeStrokesFromPoint(point: TPoint): string[]\n  {\n    this.#logger.info(\"removeStrokesFromPoint\", { point })\n    const strokes = this.getStrokeFromPoint(point)\n    strokes.forEach(strokeToRemove =>\n    {\n      this.removeStroke(strokeToRemove.id)\n    })\n    this.#logger.debug(\"removeStrokesFromPoint\", strokes.map(s => s.id))\n    return strokes.map(s => s.id)\n  }\n\n  extractUnsentStrokes(): Stroke[]\n  {\n    return this.symbols.slice(this.positions.lastSentPosition)\n  }\n\n  initCurrentStroke(point: TPointer, pointerId: number, pointerType: string, style: TPenStyle, dpi = 96): void\n  {\n    this.#logger.info(\"initCurrentStroke\", { point, pointerId, pointerType, style, dpi })\n    if (style[\"-myscript-pen-width\"]) {\n      const pxWidth = (style[\"-myscript-pen-width\"] * dpi) / 25.4\n      style.width = pxWidth / 2\n    }\n    this.modificationDate = Date.now()\n    this.exports = undefined\n    this.currentSymbol = new Stroke(style, pointerId, pointerType)\n    this.#logger.debug(\"initCurrentStroke\", this.currentSymbol)\n    this.addPoint(this.currentSymbol, point)\n  }\n\n  appendToCurrentStroke(point: TPointer): void\n  {\n    this.#logger.info(\"appendToCurrentStroke\", { point })\n    if (this.currentSymbol) {\n      this.addPoint(this.currentSymbol, point)\n    }\n    this.#logger.debug(\"appendToCurrentStroke\", this.currentSymbol)\n  }\n\n  endCurrentStroke(point: TPointer): void\n  {\n    this.#logger.info(\"endCurrentStroke\", { point })\n    if (this.currentSymbol) {\n      this.addPoint(this.currentSymbol, point)\n      this.addStroke(this.currentSymbol)\n      this.currentSymbol = undefined\n    }\n    this.#logger.debug(\"endCurrentStroke\", this.currentSymbol)\n  }\n\n  updatePositionSent(position: number = this.symbols.length): void\n  {\n    this.#logger.info(\"updatePositionSent\", { position })\n    this.positions.lastSentPosition = position\n    this.#logger.debug(\"updatePositionSent\", this.positions.lastSentPosition)\n  }\n\n  updatePositionReceived(): void\n  {\n    this.#logger.info(\"updatePositionReceived\")\n    this.positions.lastReceivedPosition = this.positions.lastSentPosition\n    this.#logger.debug(\"updatePositionReceived\", this.positions.lastReceivedPosition)\n  }\n\n  mergeExport(exports: TExport)\n  {\n    this.#logger.info(\"mergeExport\", { exports })\n    if (this.exports) {\n      Object.assign(this.exports, exports)\n    } else {\n      this.exports = exports\n    }\n    this.#logger.debug(\"mergeExport\", this.exports)\n  }\n\n  mergeConvert(converts: TExport)\n  {\n    this.#logger.info(\"mergeConvert\", { converts })\n    if (this.converts) {\n      Object.assign(this.converts, converts)\n    } else {\n      this.converts = converts\n    }\n    this.#logger.debug(\"mergeConvert\", this.converts)\n  }\n\n  getClone(): Model\n  {\n    this.#logger.info(\"getClone\")\n    const clonedModel = new Model(this.width, this.height, this.rowHeight, this.creationTime)\n    clonedModel.modificationDate = JSON.parse(JSON.stringify(this.modificationDate))\n    clonedModel.currentSymbol = this.currentSymbol ? this.currentSymbol.getClone() : undefined\n    clonedModel.symbols = this.symbols.map(s => s.getClone())\n    clonedModel.positions = JSON.parse(JSON.stringify(this.positions))\n    clonedModel.exports = this.exports ? JSON.parse(JSON.stringify(this.exports)) : undefined\n    clonedModel.converts = this.converts ? JSON.parse(JSON.stringify(this.converts)) : undefined\n    clonedModel.idle = this.idle\n    this.#logger.debug(\"getClone\", { clonedModel })\n    return clonedModel\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.modificationDate = Date.now()\n    this.currentSymbol = undefined\n    this.symbols = []\n    this.positions.lastSentPosition = 0\n    this.positions.lastReceivedPosition = 0\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n  }\n}\n","import { LoggerClass, Error as ErrorConst } from \"../Constants\"\nimport { TConverstionState, TDiagramConfiguration, TExportConfiguration, TMathConfiguration, TRawContentConfiguration, TRecognitionConfiguration, TServerConfiguration, TTextConfiguration } from \"../configuration\"\nimport { LoggerManager } from \"../logger\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { TStrokeGroup, TStrokeGroupToSend } from \"../primitive\"\nimport { StyleHelper, TPenStyle } from \"../style\"\nimport { computeHmac, isVersionSuperiorOrEqual } from \"../utils\"\n\ntype ApiError = {\n  code?: string\n  message: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRestPostConfiguration = {\n  lang: string,\n  diagram?: TDiagramConfiguration,\n  math?: TMathConfiguration,\n  \"raw-content\"?: TRawContentConfiguration,\n  text?: TTextConfiguration,\n  export: TExportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TRestPostData = {\n  configuration: TRestPostConfiguration,\n  xDPI: number,\n  yDPI: number,\n  contentType: string,\n  conversionState?: TConverstionState\n  height: number,\n  width: number,\n  strokeGroups: TStrokeGroupToSend[]\n}\n\n/**\n * @group Recognizer\n */\nexport class RestRecognizer\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RECOGNIZER)\n\n  protected serverConfiguration: TServerConfiguration\n  protected recognitionConfiguration: TRecognitionConfiguration\n\n  constructor(serverConfig: TServerConfiguration, recognitionConfig: TRecognitionConfiguration)\n  {\n    this.#logger.info(\"constructor\", { serverConfig, recognitionConfig })\n    this.serverConfiguration = serverConfig\n    this.recognitionConfiguration = recognitionConfig\n  }\n\n  get url()\n  {\n    return `${ this.serverConfiguration.scheme }://${ this.serverConfiguration.host }/api/v4.0/iink/batch`\n  }\n\n  get postConfig(): TRestPostConfiguration\n  {\n    switch (this.recognitionConfiguration.type) {\n      case \"DIAGRAM\":\n        return {\n          lang: this.recognitionConfiguration.lang,\n          diagram: this.recognitionConfiguration.diagram,\n          export: this.recognitionConfiguration.export\n        }\n      case \"MATH\":\n        return {\n          lang: this.recognitionConfiguration.lang,\n          math: this.recognitionConfiguration.math,\n          export: this.recognitionConfiguration.export\n        }\n      case \"Raw Content\":\n        return {\n          lang: this.recognitionConfiguration.lang,\n          \"raw-content\": this.recognitionConfiguration[\"raw-content\"],\n          export: this.recognitionConfiguration.export\n        }\n      case \"TEXT\":\n        return {\n          lang: this.recognitionConfiguration.lang,\n          text: this.recognitionConfiguration.text,\n          export: this.recognitionConfiguration.export\n        }\n      default:\n        throw new Error(`get postConfig error Recognition type unkow \"${ this.recognitionConfiguration.type }\"`)\n        break\n    }\n  }\n\n  protected buildData(model: Model): TRestPostData\n  {\n    this.#logger.info(\"buildData\", { model })\n    const isPenStyleEqual = (ps1: TPenStyle, ps2: TPenStyle) =>\n    {\n      return ps1 && ps2 && ps1[\"-myscript-pen-fill-color\"] === ps2[\"-myscript-pen-fill-color\"] &&\n        ps1[\"-myscript-pen-fill-style\"] === ps2[\"-myscript-pen-fill-style\"] &&\n        ps1[\"-myscript-pen-width\"] === ps2[\"-myscript-pen-width\"] &&\n        ps1.color === ps2.color &&\n        ps1.width === ps2.width\n    }\n\n    const strokeGroupByPenStyle: TStrokeGroup[] = []\n    model.symbols.forEach((s) =>\n    {\n      const groupIndex = strokeGroupByPenStyle.findIndex(sg => isPenStyleEqual(sg.penStyle, s.style))\n      if (groupIndex > -1) {\n        strokeGroupByPenStyle[groupIndex].strokes.push(s)\n      } else {\n        strokeGroupByPenStyle.push({\n          penStyle: s.style,\n          strokes: [s]\n        })\n      }\n    })\n\n    const strokeGroupsToSend: TStrokeGroupToSend[] = []\n    strokeGroupByPenStyle.forEach((group: TStrokeGroup) =>\n    {\n      const newPenStyle = JSON.stringify(group.penStyle) === \"{}\" ? undefined : StyleHelper.penStyleToCSS(group.penStyle as TPenStyle)\n      const newGroup = {\n        penStyle: newPenStyle,\n        strokes: group.strokes.map(s => s.formatToSend())\n      }\n      strokeGroupsToSend.push(newGroup)\n    })\n\n    const contentType: string = this.recognitionConfiguration.type === \"Raw Content\" ?\n      \"Raw Content\" :\n      this.recognitionConfiguration.type.charAt(0).toUpperCase() + this.recognitionConfiguration.type.slice(1).toLowerCase()\n\n    const data = {\n      configuration: this.postConfig,\n      xDPI: 96,\n      yDPI: 96,\n      contentType,\n      height: model.height,\n      width: model.width,\n      strokeGroups: strokeGroupsToSend\n    }\n    this.#logger.debug(\"buildData\", { data })\n    return data\n  }\n\n  protected async post(data: unknown, mimeType: string): Promise<unknown>\n  {\n    this.#logger.info(\"post\", { data, mimeType })\n    const headers = new Headers()\n    headers.append(\"Accept\", \"application/json,\" + mimeType)\n    headers.append(\"applicationKey\", this.serverConfiguration.applicationKey)\n    try {\n      const hmac = await computeHmac(JSON.stringify(data), this.serverConfiguration.applicationKey, this.serverConfiguration.hmacKey)\n      headers.append(\"hmac\", hmac)\n    } catch (error) {\n      this.#logger.error(\"post.computeHmac\", error)\n    }\n    headers.append(\"Content-Type\", \"application/json\")\n\n    if (isVersionSuperiorOrEqual(this.serverConfiguration.version, \"2.0.4\")) {\n      headers.append(\"myscript-client-name\", \"iink-ts\")\n      headers.append(\"myscript-client-version\", \"1.0.5\")\n    }\n\n    const reqInit: RequestInit = {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(data)\n    }\n    const request = new Request(this.url, reqInit)\n    const response: Response = await fetch(request)\n    if (response.ok) {\n      const contentType = response.headers.get(\"content-type\")\n      let result: unknown\n      switch (contentType) {\n        case \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\n        case \"image/png\":\n        case \"image/jpeg\":\n          result = await response.blob()\n          break\n        case \"application/json\":\n          result = await response.json()\n          break\n        case \"application/vnd.myscript.jiix\":\n          result = await response.clone().json().catch(async () => await response.text())\n          break\n        default:\n          result = await response.text()\n          break\n      }\n      this.#logger.debug(\"post\", { result })\n      return result\n    } else {\n      const err = await response.json() as ApiError\n      this.#logger.error(\"post\", { err })\n      throw err\n    }\n  }\n\n  protected async tryFetch(data: TRestPostData, mimeType: string): Promise<TExport | never>\n  {\n    this.#logger.debug(\"tryFetch\", { data, mimeType })\n    return this.post(data, mimeType)\n      .then((res) =>\n      {\n        const exports: TExport = {}\n        exports[mimeType] = res as TJIIXExport | string | Blob\n        this.#logger.debug(\"tryFetch\", { exports })\n        return exports\n      })\n      .catch((err) =>\n      {\n        this.#logger.error(\"tryFetch\", { data, mimeType, err })\n        let message = err.message || ErrorConst.UNKNOW\n        if (!err.code) {\n          message = ErrorConst.CANT_ESTABLISH\n        } else if (err.code === \"access.not.granted\") {\n          message = ErrorConst.WRONG_CREDENTIALS\n        }\n        const error = new Error(message)\n        throw error\n      })\n  }\n\n  protected getMimeTypes(requestedMimeTypes?: string[]): string[]\n  {\n    this.#logger.info(\"getMimeTypes\", { requestedMimeTypes })\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.recognitionConfiguration.type) {\n        case \"DIAGRAM\":\n          mimeTypes = this.recognitionConfiguration.diagram.mimeTypes\n          break\n        case \"MATH\":\n          mimeTypes = this.recognitionConfiguration.math.mimeTypes\n          break\n        case \"Raw Content\":\n          mimeTypes = [\"application/vnd.myscript.jiix\"]\n          break\n        case \"TEXT\":\n          mimeTypes = this.recognitionConfiguration.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${ this.recognitionConfiguration.type }\" is unknown.\\n Possible types are:\\n -DIAGRAM\\n -MATH\\n -Raw Content\\n -TEXT`)\n          break\n      }\n    }\n    return mimeTypes\n  }\n\n  async convert(model: Model, conversionState?: TConverstionState, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"convert\", { model, conversionState, requestedMimeTypes })\n    const myModel = model.getClone()\n    const mimeTypes = this.getMimeTypes(requestedMimeTypes)\n    const dataToConcert = this.buildData(myModel)\n    dataToConcert.conversionState = conversionState\n    const promises = mimeTypes.map(mt => this.tryFetch(dataToConcert, mt))\n    const exports: TExport[] = await Promise.all(promises)\n    exports.forEach(e =>\n    {\n      myModel.mergeConvert(e)\n    })\n    this.#logger.debug(\"convert\", { model: myModel })\n    return myModel\n  }\n\n  async export(model: Model, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"export\", { model, requestedMimeTypes })\n    const myModel = model.getClone()\n    if (myModel.symbols.length === 0) {\n      return Promise.resolve(myModel)\n    }\n    const mimeTypes = this.getMimeTypes(requestedMimeTypes)\n    if (!mimeTypes.length) {\n      this.#logger.error(\"export\", { model, requestedMimeTypes, \"Export failed, no mimeTypes define in recognition configuration\": String })\n      return Promise.reject(new Error(\"Export failed, no mimeTypes define in recognition configuration\"))\n    }\n    const mimeTypesRequiringExport: string[] = mimeTypes.filter(m => !myModel.exports || !myModel.exports[m])\n    const data = this.buildData(model)\n    const exports: TExport[] = await Promise.all(mimeTypesRequiringExport.map(mimeType => this.tryFetch(data, mimeType)))\n    exports.forEach(e =>\n    {\n      myModel.mergeExport(e)\n    })\n    this.#logger.debug(\"export\", { model: myModel })\n    return myModel\n  }\n\n  async resize(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"resize\", { model })\n    return this.export(model)\n  }\n\n}\n","import { LoggerClass, Error as ErrorConst } from \"../Constants\"\nimport { TConverstionState, TRecognitionConfiguration, TServerConfiguration } from \"../configuration\"\nimport { InternalEvent } from \"../event\"\nimport { LoggerManager } from \"../logger\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { Stroke } from \"../primitive\"\nimport { StyleHelper, TPenStyle, TTheme } from \"../style\"\nimport { TUndoRedoContext } from \"../undo-redo\"\nimport { DeferredPromise, PartialDeep, computeHmac, isVersionSuperiorOrEqual } from \"../utils\"\nimport { TWSMessageEvent, TWSMessageEventContentChange, TWSMessageEventError, TWSMessageEventExport, TWSMessageEventHMACChallenge, TWSMessageEventPartChange, TWSMessageEventSVGPatch } from \"./WSRecognizerMessage\"\n\n/**\n * A websocket dialog have this sequence :\n * --------------------------- Client --------------------------------------------------- Server ----------------------------------\n * init: send newContentPackage or restoreIInkSession           ==================>\n *                                                              <==================       ack\n * answer ack:\n *  send the hmac (if enable)                                   ==================>\n *  send the configuration                                      ==================>\n *                                                              <==================       contentPackageDescription\n * answer contentPackageDescription:\n *  send newContentPart or openContentPart                      ==================>\n *                                                              <==================        partChanged\n *                                                              <==================        contentChanged\n *                                                              <==================        newPart\n *                                                              <==================        svgPatch\n *\n * setPenStyle (send the parameters)                            ==================>\n * setTheme (send the parameters)                               ==================>\n * setPenStyleClasses (send the parameters)                     ==================>\n *                                                              <==================        svgPatch\n * addStrokes (send the strokes ) ============>\n *                                                              <==================        update\n */\n\n/**\n * @group Recognizer\n */\nexport class WSRecognizer\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RECOGNIZER)\n  protected serverConfiguration: TServerConfiguration\n  protected recognitionConfiguration: TRecognitionConfiguration\n\n  protected socket!: WebSocket\n  protected pingCount = 0\n  protected reconnectionCount = 0\n  protected viewSizeHeight!: number\n  protected viewSizeWidth!: number\n  protected sessionId?: string\n  // contentPartCount = 0\n  currentPartId?: string\n  protected currentErrorCode?: string | number\n\n  protected penStyle?: TPenStyle\n  protected penStyleClasses?: string\n  protected theme?: TTheme\n\n  protected connected?: DeferredPromise<void>\n  protected initialized?: DeferredPromise<void>\n  protected ackDeferred?: DeferredPromise<void>\n  protected addStrokeDeferred?: DeferredPromise<TExport>\n  protected exportDeferred?: DeferredPromise<TExport>\n  protected convertDeferred?: DeferredPromise<TExport>\n  protected importDeferred?: DeferredPromise<TExport>\n  protected resizeDeferred?: DeferredPromise<void>\n  protected undoDeferred?: DeferredPromise<TExport>\n  protected redoDeferred?: DeferredPromise<TExport>\n  protected clearDeferred?: DeferredPromise<TExport>\n  protected importPointEventsDeferred?: DeferredPromise<TExport>\n  protected waitForIdleDeferred?: DeferredPromise<void>\n\n  url: string\n\n  constructor(serverConfig: TServerConfiguration, recognitionConfig: TRecognitionConfiguration)\n  {\n    this.serverConfiguration = serverConfig\n    this.recognitionConfiguration = recognitionConfig\n    const scheme = (this.serverConfiguration.scheme === \"https\") ? \"wss\" : \"ws\"\n    this.url = `${ scheme }://${ this.serverConfiguration.host }/api/v4.0/iink/document?applicationKey=${ this.serverConfiguration.applicationKey }`\n    this.#logger.info(\"constructor\", { serverConfig, recognitionConfig, url: this.url })\n  }\n\n  get mimeTypes(): string[]\n  {\n    switch (this.recognitionConfiguration.type.toLocaleLowerCase()) {\n      case \"text\":\n        return this.recognitionConfiguration.text.mimeTypes\n      case \"math\":\n        return this.recognitionConfiguration.math.mimeTypes\n      default:\n        throw new Error(`Unauthorized recognition type: \"${ this.recognitionConfiguration.type }\"`)\n    }\n  }\n\n  get internalEvent(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  protected infinitePing(): void\n  {\n    this.pingCount++\n    if (this.serverConfiguration.websocket.maxPingLostCount < this.pingCount) {\n      this.socket.close(1000, \"PING_LOST\")\n    } else if (this.socket.readyState <= 1) {\n      setTimeout(() =>\n      {\n        if (this.socket.readyState <= 1) {\n          this.socket.send(JSON.stringify({ type: \"ping\" }))\n          this.infinitePing()\n        }\n      }, this.serverConfiguration.websocket.pingDelay)\n    }\n  }\n\n  protected openCallback(): void\n  {\n    this.connected?.resolve()\n    const params: TWSMessageEvent = {\n      type: this.sessionId ? \"restoreIInkSession\" : \"newContentPackage\",\n      iinkSessionId: this.sessionId,\n      applicationKey: this.serverConfiguration.applicationKey,\n      xDpi: 96,\n      yDpi: 96,\n      viewSizeHeight: this.viewSizeHeight,\n      viewSizeWidth: this.viewSizeWidth\n    }\n    if (isVersionSuperiorOrEqual(this.serverConfiguration.version, \"2.0.4\")) {\n      params[\"myscript-client-name\"] = \"iink-ts\"\n      params[\"myscript-client-version\"] = \"1.0.5\"\n    }\n    this.send(params)\n  }\n\n  protected rejectDeferredPending(error: Error): void\n  {\n    if (this.connected?.isPending) {\n      this.connected?.reject(error)\n    }\n    if (this.initialized?.isPending) {\n      this.initialized?.reject(error)\n    }\n    if (this.addStrokeDeferred?.isPending) {\n      this.addStrokeDeferred?.reject(error)\n    }\n    if (this.exportDeferred?.isPending) {\n      this.exportDeferred?.reject(error)\n    }\n    if (this.convertDeferred?.isPending) {\n      this.convertDeferred?.reject(error)\n    }\n    if (this.importDeferred?.isPending) {\n      this.importDeferred?.reject(error)\n    }\n    if (this.resizeDeferred?.isPending) {\n      this.resizeDeferred?.reject(error)\n    }\n    if (this.undoDeferred?.isPending) {\n      this.undoDeferred?.reject(error)\n    }\n    if (this.redoDeferred?.isPending) {\n      this.redoDeferred?.reject(error)\n    }\n    if (this.clearDeferred?.isPending) {\n      this.clearDeferred.reject(error)\n    }\n    if (this.waitForIdleDeferred?.isPending) {\n      this.waitForIdleDeferred.reject(error)\n    }\n  }\n\n  protected closeCallback(evt: CloseEvent): void\n  {\n    let message = \"\"\n    if (!this.currentErrorCode) {\n      switch (evt.code) {\n        case 1000:\n          // Normal Closure\n          break\n        case 1001:\n          message = ErrorConst.GOING_AWAY\n          break\n        case 1002:\n          message = ErrorConst.PROTOCOL_ERROR\n          break\n        case 1003:\n          message = ErrorConst.UNSUPPORTED_DATA\n          break\n        case 1006:\n          message = ErrorConst.ABNORMAL_CLOSURE\n          break\n        case 1007:\n          message = ErrorConst.INVALID_FRAME_PAULOAD\n          break\n        case 1008:\n          message = ErrorConst.POLICY_VIOLATION\n          break\n        case 1009:\n          message = ErrorConst.MESSAGE_TOO_BIG\n          break\n        case 1011:\n          message = ErrorConst.INTERNAL_ERROR\n          break\n        case 1012:\n          message = ErrorConst.SERVICE_RESTART\n          break\n        case 1013:\n          message = ErrorConst.TRY_AGAIN\n          break\n        case 1014:\n          message = ErrorConst.BAD_GATEWAY\n          break\n        case 1015:\n          message = ErrorConst.TLS_HANDSHAKE\n          break\n        default:\n          this.#logger.warn(\"closeCallback\", \"unknow CloseEvent.code\", { evt })\n          message = ErrorConst.CANT_ESTABLISH\n          break\n      }\n    }\n    const error = new Error(message || evt.reason)\n\n    this.rejectDeferredPending(error)\n\n    if (!this.currentErrorCode && evt.code !== 1000) {\n      this.internalEvent.emitError(error)\n    }\n  }\n\n  protected async manageAckMessage(websocketMessage: TWSMessageEvent): Promise<void>\n  {\n    this.#logger.info(\"manageAckMessage\", { websocketMessage })\n    const hmacChallengeMessage = websocketMessage as TWSMessageEventHMACChallenge\n    if (hmacChallengeMessage.hmacChallenge) {\n      this.send({\n        type: \"hmac\",\n        hmac: await computeHmac(hmacChallengeMessage.hmacChallenge, this.serverConfiguration.applicationKey, this.serverConfiguration.hmacKey)\n      })\n    }\n    if (hmacChallengeMessage.iinkSessionId) {\n      this.sessionId = hmacChallengeMessage.iinkSessionId\n    }\n\n    const recognitionConfig = structuredClone(this.recognitionConfiguration) as PartialDeep<TRecognitionConfiguration>\n    if (!isVersionSuperiorOrEqual(this.serverConfiguration.version, \"2.3.0\")) {\n      delete recognitionConfig.convert\n    }\n    this.send({ ...recognitionConfig, type: \"configuration\" })\n    this.ackDeferred?.resolve()\n  }\n\n  protected async manageContentPackageDescriptionMessage(): Promise<void>\n  {\n    this.reconnectionCount = 0\n    await this.ackDeferred?.promise\n    this.#logger.info(\"manageContentPackageDescriptionMessage\")\n    if (this.currentPartId) {\n      this.send({ type: \"openContentPart\", id: this.currentPartId, mimeTypes: this.mimeTypes })\n    }\n    else {\n      this.send({ type: \"newContentPart\", contentType: this.recognitionConfiguration.type, mimeTypes: this.mimeTypes })\n    }\n  }\n\n  protected managePartChangeMessage(websocketMessage: TWSMessageEvent): void\n  {\n    this.#logger.info(\"managePartChangeMessage\", { websocketMessage })\n    const partChangeMessage = websocketMessage as TWSMessageEventPartChange\n    this.currentPartId = partChangeMessage.partId\n    this.initialized?.resolve()\n  }\n\n  protected manageExportMessage(websocketMessage: TWSMessageEvent): void\n  {\n    this.#logger.info(\"manageExportMessage\", { websocketMessage })\n    const exportMessage = websocketMessage as TWSMessageEventExport\n    if (exportMessage.exports[\"application/vnd.myscript.jiix\"]) {\n      exportMessage.exports[\"application/vnd.myscript.jiix\"] = JSON.parse(exportMessage.exports[\"application/vnd.myscript.jiix\"].toString()) as TJIIXExport\n    }\n    this.initialized?.resolve()\n    this.addStrokeDeferred?.resolve(exportMessage.exports)\n    this.exportDeferred?.resolve(exportMessage.exports)\n    this.convertDeferred?.resolve(exportMessage.exports)\n    this.importDeferred?.resolve(exportMessage.exports)\n    this.undoDeferred?.resolve(exportMessage.exports)\n    this.redoDeferred?.resolve(exportMessage.exports)\n    this.clearDeferred?.resolve(exportMessage.exports)\n    this.importPointEventsDeferred?.resolve(exportMessage.exports)\n    this.internalEvent.emitExported(exportMessage.exports)\n  }\n\n  protected async manageWaitForIdle(): Promise<void>\n  {\n    this.internalEvent.emitIdle(true)\n    this.waitForIdleDeferred?.resolve()\n  }\n\n  protected manageErrorMessage(websocketMessage: TWSMessageEvent): void\n  {\n    const err = websocketMessage as TWSMessageEventError\n    this.currentErrorCode = err.data?.code || err.code\n    let message = err.data?.message || err.message || ErrorConst.UNKNOW\n\n    switch (this.currentErrorCode) {\n      case \"no.activity\":\n        message = ErrorConst.NO_ACTIVITY\n        break\n      case \"access.not.granted\":\n        message = ErrorConst.WRONG_CREDENTIALS\n        break\n      case \"session.too.old\":\n        message = ErrorConst.TOO_OLD\n        break\n    }\n    const error = new Error(message)\n    this.rejectDeferredPending(error)\n    this.internalEvent.emitError(error)\n  }\n\n  protected manageContentChangeMessage(websocketMessage: TWSMessageEvent): void\n  {\n    this.#logger.info(\"manageContentChangeMessage\", { websocketMessage })\n    const contentChangeMessage = websocketMessage as TWSMessageEventContentChange\n    const context: TUndoRedoContext = {\n      canRedo: contentChangeMessage.canRedo,\n      canUndo: contentChangeMessage.canUndo,\n      empty: contentChangeMessage.empty,\n      stackIndex: contentChangeMessage.undoStackIndex,\n      possibleUndoCount: contentChangeMessage.possibleUndoCount,\n      stack: []\n    }\n    this.internalEvent.emitContextChange(context)\n  }\n\n  protected manageSVGPatchMessage(websocketMessage: TWSMessageEvent): void\n  {\n    this.#logger.info(\"manageSVGPatchMessage\", { websocketMessage })\n    this.resizeDeferred?.resolve()\n    const svgPatchMessage = websocketMessage as TWSMessageEventSVGPatch\n    this.internalEvent.emitSVGPatch(svgPatchMessage)\n  }\n\n  protected messageCallback(message: MessageEvent<string>): void\n  {\n    this.#logger.debug(\"messageCallback\", { message })\n    this.currentErrorCode = undefined\n    const websocketMessage: TWSMessageEvent = JSON.parse(message.data)\n    if (websocketMessage.type !== \"pong\") {\n      this.pingCount = 0\n      switch (websocketMessage.type) {\n        case \"ack\":\n          this.manageAckMessage(websocketMessage)\n          break\n        case \"contentPackageDescription\":\n          this.manageContentPackageDescriptionMessage()\n          break\n        case \"partChanged\":\n          this.managePartChangeMessage(websocketMessage)\n          break\n        case \"newPart\":\n          this.initialized?.resolve()\n          break\n        case \"contentChanged\":\n          this.manageContentChangeMessage(websocketMessage)\n          break\n        case \"exported\":\n          this.manageExportMessage(websocketMessage)\n          break\n        case \"svgPatch\":\n          this.manageSVGPatchMessage(websocketMessage)\n          break\n        case \"error\":\n          this.manageErrorMessage(websocketMessage)\n          break\n        case \"idle\":\n          this.manageWaitForIdle()\n          break\n        default:\n          this.#logger.warn(\"messageCallback\", `Message type unknow: \"${ websocketMessage.type }\".`)\n      }\n    }\n  }\n\n  async init(height: number, width: number): Promise<void>\n  {\n    try {\n      this.#logger.info(\"init\", { height, width })\n      this.destroy()\n      this.connected = new DeferredPromise<void>()\n      this.initialized = new DeferredPromise<void>()\n      this.ackDeferred = new DeferredPromise<void>()\n      this.viewSizeHeight = height\n      this.viewSizeWidth = width\n      this.pingCount = 0\n      this.socket = new WebSocket(this.url)\n\n      if (this.serverConfiguration.websocket.pingEnabled) {\n        this.infinitePing()\n      }\n\n      this.socket.addEventListener(\"open\", this.openCallback.bind(this))\n      this.socket.addEventListener(\"close\", this.closeCallback.bind(this))\n      this.socket.addEventListener(\"message\", this.messageCallback.bind(this))\n\n      return this.initialized.promise\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (err: any) {\n      const error = new Error(ErrorConst.CANT_ESTABLISH)\n      this.internalEvent.emitError(error)\n      this.initialized?.reject(error)\n      return this.initialized?.promise\n    }\n  }\n\n  async send(message: TWSMessageEvent): Promise<void>\n  {\n    if (!this.connected) {\n      return Promise.reject(new Error(\"Recognizer must be initilized\"))\n    }\n    await this.connected.promise\n    if (this.socket.readyState === this.socket.OPEN) {\n      this.#logger.debug(\"send\", { message })\n      this.socket.send(JSON.stringify(message))\n      return Promise.resolve()\n    } else {\n      if (this.socket.readyState != this.socket.CONNECTING && this.serverConfiguration.websocket.autoReconnect) {\n        this.reconnectionCount++\n        if (this.serverConfiguration.websocket.maxRetryCount >= this.reconnectionCount) {\n          this.#logger.debug(\"send\", `try to reconnect number: ${ this.reconnectionCount }.`)\n          this.internalEvent.emitClearMessage()\n          await this.init(this.viewSizeHeight, this.viewSizeWidth)\n          await this.setPenStyle(this.penStyle as TPenStyle)\n          await this.setPenStyleClasses(this.penStyleClasses as string)\n          await this.setTheme(this.theme as TTheme)\n          return this.send(message)\n        }\n        else {\n          return Promise.reject(new Error(\"Unable to send message. The maximum number of connection attempts has been reached.\"))\n        }\n      }\n    }\n  }\n\n  async addStrokes(strokes: Stroke[]): Promise<TExport>\n  {\n    this.#logger.info(\"addStrokes\", { strokes })\n    await this.initialized?.promise\n    this.addStrokeDeferred = new DeferredPromise<TExport>()\n    if (strokes.length === 0) {\n      this.addStrokeDeferred.resolve({} as TExport)\n    }\n    else {\n      await this.send({\n        type: \"addStrokes\",\n        strokes: strokes.map(s => s.formatToSend())\n      })\n    }\n    return this.addStrokeDeferred?.promise\n  }\n\n  async setPenStyle(penStyle: TPenStyle): Promise<void>\n  {\n    this.#logger.info(\"setPenStyle\", { penStyle })\n    await this.initialized?.promise\n    this.penStyle = penStyle\n    const message: TWSMessageEvent = {\n      type: \"setPenStyle\",\n      style: StyleHelper.penStyleToCSS(penStyle)\n    }\n    return this.send(message)\n  }\n\n  async setPenStyleClasses(penStyleClasses: string): Promise<void>\n  {\n    await this.initialized?.promise\n    this.penStyleClasses = penStyleClasses\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClasses })\n    const message: TWSMessageEvent = {\n      type: \"setPenStyleClasses\",\n      styleClasses: penStyleClasses\n    }\n    return this.send(message)\n  }\n\n  async setTheme(theme: TTheme): Promise<void>\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    await this.initialized?.promise\n    this.theme = theme\n    const message: TWSMessageEvent = {\n      type: \"setTheme\",\n      theme: StyleHelper.themeToCSS(theme)\n    }\n    return this.send(message)\n  }\n\n  async export(model: Model, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"export\", { model, requestedMimeTypes })\n    await this.initialized?.promise\n    this.exportDeferred = new DeferredPromise<TExport>()\n    const localModel = model.getClone()\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.recognitionConfiguration.type) {\n        case \"DIAGRAM\":\n          mimeTypes = this.recognitionConfiguration.diagram.mimeTypes\n          break\n        case \"MATH\":\n          mimeTypes = this.recognitionConfiguration.math.mimeTypes\n          break\n        case \"Raw Content\":\n          mimeTypes = [\"application/vnd.myscript.jiix\"]\n          break\n        case \"TEXT\":\n          mimeTypes = this.recognitionConfiguration.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${ this.recognitionConfiguration.type }\" is unknown.\\n Possible types are:\\n -DIAGRAM\\n -MATH\\n -Raw Content\\n -TEXT`)\n      }\n    }\n\n    if (!mimeTypes.length) {\n      return Promise.reject(new Error(`Export failed, no mimeTypes define in recognition ${ this.recognitionConfiguration.type } configuration`))\n    }\n\n    const message: TWSMessageEvent = {\n      type: \"export\",\n      partId: this.currentPartId,\n      mimeTypes\n    }\n    await this.send(message)\n    const exports: TExport = await this.exportDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(exports)\n    this.#logger.debug(\"export\", { model: localModel })\n    return localModel\n  }\n\n  async import(model: Model, data: Blob, mimeType?: string): Promise<Model>\n  {\n    this.#logger.info(\"import\", { data, mimeType })\n    await this.initialized?.promise\n    const localModel = model.getClone()\n    const chunkSize = this.serverConfiguration.websocket.fileChunkSize\n    const importFileId = Math.random().toString(10).substring(2, 6)\n    this.importDeferred = new DeferredPromise<TExport>()\n    const readBlob = (blob: Blob): Promise<string | never> =>\n    {\n      const fileReader = new FileReader()\n      return new Promise((resolve, reject) =>\n      {\n        fileReader.onloadend = (ev) => resolve(ev.target?.result as string)\n        fileReader.onerror = () => reject()\n        fileReader.readAsText(blob)\n      })\n    }\n\n    const importFileMessage: TWSMessageEvent = {\n      type: \"importFile\",\n      importFileId,\n      mimeType\n    }\n    await this.send(importFileMessage)\n    for (let i = 0; i < data.size; i += chunkSize) {\n      const blobPart = data.slice(i, i + chunkSize, data.type)\n      const partFileString = await readBlob(blobPart)\n      const fileChuckMessage: TWSMessageEvent = {\n        type: \"fileChunk\",\n        importFileId,\n        data: partFileString,\n        lastChunk: i + chunkSize > data.size\n      }\n      await this.send(fileChuckMessage)\n    }\n    const exports = await this.importDeferred?.promise\n    this.importDeferred = undefined\n    localModel.mergeExport(exports)\n    return localModel\n  }\n\n  async resize(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"resize\", { model })\n    await this.initialized?.promise\n    this.resizeDeferred = new DeferredPromise<void>()\n    const localModel = model.getClone()\n    this.viewSizeHeight = localModel.height\n    this.viewSizeWidth = localModel.width\n    const message: TWSMessageEvent = {\n      type: \"changeViewSize\",\n      height: this.viewSizeHeight,\n      width: this.viewSizeWidth,\n    }\n    await this.send(message)\n    await this.resizeDeferred?.promise\n    return localModel\n  }\n\n  async importPointEvents(strokes: Stroke[]): Promise<TExport>\n  {\n    this.#logger.info(\"importPointsEvents\", { strokes })\n    await this.initialized?.promise\n    this.importPointEventsDeferred = new DeferredPromise<TExport>()\n    const message: TWSMessageEvent = {\n      type: \"pointerEvents\",\n      events: strokes.map(s => s.formatToSend())\n    }\n    this.send(message)\n    const exportPoints = await this.importPointEventsDeferred?.promise\n    this.importPointEventsDeferred = undefined\n    this.#logger.debug(\"importPointEvents\", { exportPoints })\n    return exportPoints as TExport\n  }\n\n  async convert(model: Model, conversionState?: TConverstionState): Promise<Model>\n  {\n    this.#logger.info(\"convert\", { model, conversionState })\n    await this.initialized?.promise\n    this.convertDeferred = new DeferredPromise<TExport>()\n    const localModel = model.getClone()\n    const message: TWSMessageEvent = {\n      type: \"convert\",\n      conversionState\n    }\n    await this.send(message)\n    const myExportConverted: TExport = await this.convertDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeConvert(myExportConverted)\n    this.#logger.debug(\"convert\", { model: localModel })\n    return localModel\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    await this.initialized?.promise\n    this.waitForIdleDeferred = new DeferredPromise<void>()\n    const message: TWSMessageEvent = {\n      type: \"waitForIdle\",\n    }\n    await this.send(message)\n    return this.waitForIdleDeferred?.promise\n  }\n\n  async undo(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"undo\", { model })\n    await this.initialized?.promise\n    const localModel = model.getClone()\n    this.undoDeferred = new DeferredPromise<TExport>()\n    const message: TWSMessageEvent = {\n      type: \"undo\",\n    }\n    await this.send(message)\n    const undoExports = await this.undoDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(undoExports)\n    this.#logger.debug(\"undo\", { model: localModel })\n    this.undoDeferred = undefined\n    return localModel\n  }\n\n  async redo(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"redo\", { model })\n    await this.initialized?.promise\n    const localModel = model.getClone()\n    this.redoDeferred = new DeferredPromise<TExport>()\n    const message: TWSMessageEvent = {\n      type: \"redo\",\n    }\n    await this.send(message)\n    const redoExports = await this.redoDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(redoExports)\n    this.#logger.debug(\"redo\", { model: redoExports })\n    this.redoDeferred = undefined\n    return localModel\n  }\n\n  async clear(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"clear\", { model })\n    await this.initialized?.promise\n    const localModel = model.getClone()\n    localModel.modificationDate = Date.now()\n    this.clearDeferred = new DeferredPromise<TExport>()\n    const message: TWSMessageEvent = {\n      type: \"clear\",\n    }\n    await this.send(message)\n    const clearExports = await this.clearDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(clearExports)\n    this.clearDeferred = undefined\n    this.#logger.info(\"clear\", { model: localModel })\n    return localModel\n  }\n\n  close(code: number, reason: string): void\n  {\n    if (this.socket.readyState === this.socket.OPEN || this.socket.readyState === this.socket.CONNECTING) {\n      this.#logger.info(\"close\", { code, reason })\n      this.socket.removeEventListener(\"close\", this.closeCallback)\n      this.socket.removeEventListener(\"message\", this.messageCallback)\n      this.socket.removeEventListener(\"open\", this.openCallback)\n      this.socket.close(code, reason)\n    }\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    this.connected = undefined\n    this.initialized = undefined\n    this.ackDeferred = undefined\n    this.addStrokeDeferred = undefined\n    this.exportDeferred = undefined\n    this.convertDeferred = undefined\n    this.importDeferred = undefined\n    this.resizeDeferred = undefined\n    this.undoDeferred = undefined\n    this.redoDeferred = undefined\n    this.clearDeferred = undefined\n    if (this.socket) {\n      this.socket.removeEventListener(\"close\", this.closeCallback)\n      this.socket.removeEventListener(\"message\", this.messageCallback)\n      this.socket.removeEventListener(\"open\", this.openCallback)\n      this.close(1000, \"Recognizer destroyed\")\n    }\n  }\n}\n","import { LoggerClass } from \"../../Constants\"\nimport { LoggerManager } from \"../../logger\"\nimport { TPoint, TCanvasShapeEllipseSymbol, TCanvasShapeLineSymbol, TCanvasShapeTableSymbol, TSymbol } from \"../../primitive\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererShape\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RENDERER)\n\n  symbols = {\n    table: \"table\",\n    ellipse: \"ellipse\",\n    line: \"line\"\n  }\n\n  protected phi(angle: number): number\n  {\n    let returnedAngle = ((angle + Math.PI) % (Math.PI * 2)) - Math.PI\n    if (returnedAngle < -Math.PI) {\n      returnedAngle += Math.PI * 2\n    }\n    this.#logger.debug(\"phi\", { angle, returnedAngle })\n    return returnedAngle\n  }\n\n  protected drawEllipseArc(context2D: CanvasRenderingContext2D, shapeEllipse: TCanvasShapeEllipseSymbol): TPoint[]\n  {\n    this.#logger.debug(\"drawEllipseArc\", { context2D, shapeEllipse })\n    const { centerPoint, maxRadius, minRadius, orientation, startAngle, sweepAngle } = shapeEllipse\n    const angleStep = 0.02\n    const z1 = Math.cos(orientation) * maxRadius\n    const z2 = Math.cos(orientation) * minRadius\n    const z3 = Math.sin(orientation) * maxRadius\n    const z4 = Math.sin(orientation) * minRadius\n    const n = Math.floor(Math.abs(sweepAngle) / angleStep)\n    const boundariesPoints = []\n    context2D.save()\n    try {\n      context2D.beginPath()\n      for (let i = 0; i <= n; i++) {\n        const angle = startAngle + ((i / n) * sweepAngle)\n        const alpha = Math.atan2(Math.sin(angle) / minRadius, Math.cos(angle) / maxRadius)\n        const cosAlpha = Math.cos(alpha)\n        const sinAlpha = Math.sin(alpha)\n        const x = (centerPoint.x + (z1 * cosAlpha)) - (z4 * sinAlpha)\n        const y = (centerPoint.y + (z2 * sinAlpha)) + (z3 * cosAlpha)\n        if (i === 0) {\n          context2D.moveTo(x, y)\n        } else {\n          context2D.lineTo(x, y)\n        }\n        if (i === 0 || i === n) {\n          boundariesPoints.push({ x, y })\n        }\n      }\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"drawEllipseArc\", { error })\n    } finally {\n      context2D.restore()\n    }\n    return boundariesPoints\n  }\n\n  protected drawLine(context2D: CanvasRenderingContext2D, p1: TPoint, p2: TPoint)\n  {\n    this.#logger.debug(\"drawLine\", { context2D, p1, p2 })\n    context2D.save()\n    try {\n      context2D.beginPath()\n      context2D.moveTo(p1.x, p1.y)\n      context2D.lineTo(p2.x, p2.y)\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"drawLine\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawArrowHead(context2D: CanvasRenderingContext2D, headPoint: TPoint, angle: number, length: number)\n  {\n    this.#logger.debug(\"drawArrowHead\", { context2D, headPoint, angle, length })\n    const alpha = this.phi(angle + (Math.PI * (7 / 8)))\n    const beta = this.phi(angle - (Math.PI * (7 / 8)))\n    context2D.save()\n    try {\n      context2D.fillStyle = context2D.strokeStyle\n\n      context2D.moveTo(headPoint.x, headPoint.y)\n      context2D.beginPath()\n      context2D.lineTo(headPoint.x + (length * Math.cos(alpha)), headPoint.y + (length * Math.sin(alpha)))\n      context2D.lineTo(headPoint.x + (length * Math.cos(beta)), headPoint.y + (length * Math.sin(beta)))\n      context2D.lineTo(headPoint.x, headPoint.y)\n      context2D.fill()\n    } catch(error) {\n      this.#logger.error(\"drawArrowHead\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawShapeEllipse(context2D: CanvasRenderingContext2D, shapeEllipse: TCanvasShapeEllipseSymbol)\n  {\n    this.#logger.debug(\"drawShapeEllipse\", { context2D, shapeEllipse })\n    const points = this.drawEllipseArc(context2D, shapeEllipse)\n\n    if (shapeEllipse?.beginDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, points[0], shapeEllipse.beginTangentAngle, 12.0)\n    }\n    if (shapeEllipse?.endDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, points[1], shapeEllipse.endTangentAngle, 12.0)\n    }\n  }\n\n  protected drawShapeLine(context2D: CanvasRenderingContext2D, shapeLine: TCanvasShapeLineSymbol)\n  {\n    this.#logger.debug(\"drawShapeLine\", { context2D, shapeLine })\n    this.drawLine(context2D, shapeLine.firstPoint, shapeLine.lastPoint)\n    if (shapeLine.beginDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, shapeLine.firstPoint, shapeLine.beginTangentAngle, 12.0)\n    }\n    if (shapeLine.endDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, shapeLine.lastPoint, shapeLine.endTangentAngle, 12.0)\n    }\n  }\n\n  draw(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.info(\"draw\", { context2D, symbol })\n    context2D.save()\n    context2D.lineWidth = symbol.style.width as number\n    context2D.strokeStyle = symbol.style.color as string\n\n    switch (symbol.type) {\n      case this.symbols.table: {\n        const tableSymbols = symbol as TCanvasShapeTableSymbol\n        tableSymbols.lines.forEach(line => this.drawLine(context2D, line.p1, line.p2))\n        break\n      }\n      case this.symbols.ellipse: {\n        this.drawShapeEllipse(context2D, symbol as TCanvasShapeEllipseSymbol)\n        break\n      }\n      case this.symbols.line: {\n        this.drawShapeLine(context2D, symbol as TCanvasShapeLineSymbol)\n        break\n      }\n      default:\n        this.#logger.warn(\"draw\", `${ symbol.type } not implemented`)\n        break\n    }\n  }\n\n}\n","import { LoggerClass } from \"../../Constants\"\nimport { LoggerManager } from \"../../logger\"\nimport { Stroke, TPointer } from \"../../primitive\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererStroke\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RENDERER)\n\n  protected renderArc(context2d: CanvasRenderingContext2D, center: TPointer, radius: number): void\n  {\n    this.#logger.debug(\"renderArc\", { context2d, center, radius })\n    context2d.arc(center.x, center.y, radius, 0, Math.PI * 2, true)\n  }\n\n  protected renderLine(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderLine\", { context2d, begin, end, width })\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n\n    context2d.moveTo(linkPoints1[0].x, linkPoints1[0].y)\n    context2d.lineTo(linkPoints2[0].x, linkPoints2[0].y)\n    context2d.lineTo(linkPoints2[1].x, linkPoints2[1].y)\n    context2d.lineTo(linkPoints1[1].x, linkPoints1[1].y)\n  }\n\n  protected renderFinal(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderFinal\", { context2d, begin, end, width })\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    context2d.moveTo(linkPoints[0].x, linkPoints[0].y)\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - ((i * Math.PI) / ARCSPLIT)\n      context2d.lineTo(end.x - ((end.p * width) * Math.sin(newAngle)), end.y + (end.p * width * Math.cos(newAngle)))\n    }\n  }\n\n  protected renderQuadratic(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, ctrl: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderQuadratic\", { context2d, begin, end, ctrl, width })\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, ctrl), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(ctrl, end), width)\n    const linkPoints3 = computeLinksPointers(ctrl, computeAngleAxeRadian(begin, end), width)\n\n    context2d.moveTo(linkPoints1[0].x, linkPoints1[0].y)\n    context2d.quadraticCurveTo(linkPoints3[0].x, linkPoints3[0].y, linkPoints2[0].x, linkPoints2[0].y)\n    context2d.lineTo(linkPoints2[1].x, linkPoints2[1].y)\n    context2d.quadraticCurveTo(linkPoints3[1].x, linkPoints3[1].y, linkPoints1[1].x, linkPoints1[1].y)\n  }\n\n  draw(context2d: CanvasRenderingContext2D, stroke: Stroke): void\n  {\n    this.#logger.info(\"draw\", { context2d, stroke })\n    const NUMBER_POINTS = stroke.pointers.length\n    const NUMBER_QUADRATICS = NUMBER_POINTS - 2\n    const width = (stroke.style.width as number) > 0 ? (stroke.style.width as number) : context2d.lineWidth\n    const color = (stroke.style.color as string) ? (stroke.style.color as string) : context2d.strokeStyle\n    const firstPoint = stroke.pointers[0] as TPointer\n\n    context2d.save()\n    try {\n      context2d.beginPath()\n      if (NUMBER_POINTS < 3) {\n        this.renderArc(context2d, firstPoint, width * 0.6)\n      } else {\n        this.renderArc(context2d, firstPoint, width * firstPoint.p)\n        const secondPoint: TPointer = computeMiddlePointer(firstPoint, stroke.pointers[1])\n        this.renderLine(context2d, firstPoint, secondPoint, width)\n\n        // Possibility to try this (the start looks better when the ink is large)\n        // var first = computeMiddlePoint(stroke.pointers[0], stroke.pointers[1]);\n        // context2d.arc(first.x, first.y, width * first.p, 0, Math.PI * 2, true);\n\n        for (let i = 0; i < NUMBER_QUADRATICS; i++) {\n          const begin: TPointer = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n          const end: TPointer = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n          const ctrl: TPointer = stroke.pointers[i + 1]\n          this.renderQuadratic(context2d, begin, end, ctrl, width)\n        }\n        const beginLine: TPointer = computeMiddlePointer(stroke.pointers[NUMBER_POINTS - 2], stroke.pointers[NUMBER_POINTS - 1])\n        const endLine: TPointer = stroke.pointers[NUMBER_POINTS - 1]\n        this.renderLine(context2d, beginLine, endLine, width)\n\n        const beginFinal: TPointer = stroke.pointers[NUMBER_POINTS - 2]\n        const endFinal: TPointer = stroke.pointers[NUMBER_POINTS - 1]\n        this.renderFinal(context2d, beginFinal, endFinal, width)\n      }\n      context2d.closePath()\n      if (color !== undefined) {\n        context2d.fillStyle = color\n        context2d.fill()\n      }\n      context2d.save()\n    }\n    catch (error) {\n      this.#logger.error(\"draw\", { error })\n    }\n    finally {\n      context2d.restore()\n    }\n  }\n}\n","import { LoggerClass } from \"../../Constants\"\nimport { LoggerManager } from \"../../logger\"\nimport { TSymbol, TCanvasTextSymbol, TCanvasTextUnderlineSymbol, TCanvasUnderLineSymbol, TPoint } from \"../../primitive\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererText\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RENDERER)\n\n  symbols = {\n    char: \"char\",\n    string: \"string\",\n    textLine: \"textLine\"\n  }\n\n  protected drawUnderline(context2D: CanvasRenderingContext2D, textUnderline: TCanvasTextUnderlineSymbol, underline: TCanvasUnderLineSymbol)\n  {\n    this.#logger.debug(\"#drawUnderline\", { context2D, textUnderline, underline })\n    context2D.save()\n    try {\n      const delta = textUnderline.data.width / textUnderline.label.length\n      const p1: TPoint = {\n        x: textUnderline.data.topLeftPoint.x + (underline.data.firstCharacter * delta),\n        y: textUnderline.data.topLeftPoint.y + textUnderline.data.height\n      }\n      const p2: TPoint = {\n        x: textUnderline.data.topLeftPoint.x + (underline.data.lastCharacter * delta),\n        y: textUnderline.data.topLeftPoint.y + textUnderline.data.height\n      }\n      context2D.beginPath()\n      context2D.moveTo(p1.x, p1.y)\n      context2D.lineTo(p2.x, p2.y)\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"#drawUnderline\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawText(context2D: CanvasRenderingContext2D, text: TCanvasTextSymbol)\n  {\n    this.#logger.debug(\"#drawText\", { context2D, text })\n    context2D.save()\n    try {\n      context2D.font = `${ text.data.textHeight }px serif`\n      context2D.textAlign = (text.data.justificationType === \"CENTER\") ? \"center\" : \"left\"\n      context2D.textBaseline = \"bottom\"\n      context2D.fillStyle = context2D.strokeStyle\n      context2D.fillText(text.label, text.data.topLeftPoint.x, (text.data.topLeftPoint.y + text.data.height))\n    } catch(error) {\n      this.#logger.error(\"#drawText\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawTextLine(context2D: CanvasRenderingContext2D, textUnderline: TCanvasTextUnderlineSymbol)\n  {\n    this.#logger.debug(\"#drawTextLine\", { context2D, textUnderline })\n    this.drawText(context2D, textUnderline)\n    textUnderline.underlineList.forEach((underline) =>\n    {\n      this.drawUnderline(context2D, textUnderline, underline)\n    })\n  }\n\n  draw(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.info(\"draw\", { context2D, symbol })\n    context2D.lineWidth = (symbol.style.width as number)\n    context2D.strokeStyle = (symbol.style.color as string)\n    switch (symbol.type) {\n      case this.symbols.char:\n      case this.symbols.string:\n        this.drawText(context2D, symbol as TCanvasTextSymbol)\n        break\n      case this.symbols.textLine:\n        this.drawTextLine(context2D, symbol as TCanvasTextUnderlineSymbol)\n        break\n      default:\n        this.#logger.warn(\"draw\", `${symbol.type} not implemented`)\n        break\n    }\n  }\n}\n","import { LoggerClass } from \"../../Constants\"\nimport { TRenderingConfiguration } from \"../../configuration\"\nimport { LoggerManager } from \"../../logger\"\nimport { IModel } from \"../../model\"\nimport { Stroke, TSymbol } from \"../../primitive\"\nimport { CanvasRendererShape } from \"./CanvasRendererShape\"\nimport { CanvasRendererStroke } from \"./CanvasRendererStroke\"\nimport { CanvasRendererText } from \"./CanvasRendererText\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RENDERER)\n  configuration: TRenderingConfiguration\n  strokeRenderer: CanvasRendererStroke\n  shapeRenderer: CanvasRendererShape\n  textRenderer: CanvasRendererText\n  context!: {\n    parent: HTMLElement\n    renderingCanvas: HTMLCanvasElement\n    renderingCanvasContext: CanvasRenderingContext2D\n    capturingCanvas: HTMLCanvasElement\n    capturingCanvasContext: CanvasRenderingContext2D\n  }\n\n  constructor(config: TRenderingConfiguration)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = config\n    this.strokeRenderer = new CanvasRendererStroke()\n    this.shapeRenderer = new CanvasRendererShape()\n    this.textRenderer = new CanvasRendererText()\n  }\n\n  protected createCanvas(type: string): HTMLCanvasElement\n  {\n    this.#logger.debug(\"createCanvas\", { type })\n    const canvas: HTMLCanvasElement = document.createElement(\"canvas\")\n    canvas.id = type\n    canvas.classList.add(type)\n    canvas.classList.add(\"ms-canvas\")\n    return canvas\n  }\n\n  protected resizeContent(): void\n  {\n    const pixelRatio: number = window.devicePixelRatio\n    const elements: HTMLCanvasElement[] = [this.context.renderingCanvas, this.context.capturingCanvas]\n    elements.forEach((canvas) =>\n    {\n      const domElement = canvas.parentNode as HTMLElement\n      const width = Math.max(this.configuration.minWidth, domElement.clientWidth)\n      const height = Math.max(this.configuration.minHeight, domElement.clientHeight)\n      canvas.width = width * pixelRatio\n      canvas.height = height * pixelRatio\n      canvas.getContext(\"2d\")?.scale(pixelRatio, pixelRatio)\n      canvas.style.width = `${ width }px`\n      canvas.style.height = `${ height }px`\n    })\n  }\n\n  protected drawSymbol(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.debug(\"drawSymbol\", { symbol })\n    if (symbol.type === \"stroke\") {\n      const stroke = symbol as Stroke\n      if (stroke.pointerType !== \"eraser\") {\n        this.strokeRenderer.draw(context2D, stroke)\n      }\n    } else if (Object.keys(this.textRenderer.symbols).includes(symbol.type)) {\n      this.textRenderer.draw(context2D, symbol)\n    } else if (Object.keys(this.shapeRenderer.symbols).includes(symbol.type)) {\n      this.shapeRenderer.draw(context2D, symbol)\n    } else {\n      this.#logger.warn(\"drawSymbol\", `symbol type unknow: ${symbol.type}`)\n    }\n  }\n\n  init(element: HTMLElement): void\n  {\n    this.#logger.info(\"init\", { element })\n    const renderingCanvas: HTMLCanvasElement = this.createCanvas(\"ms-rendering-canvas\")\n    element.appendChild(renderingCanvas)\n\n    const capturingCanvas: HTMLCanvasElement = this.createCanvas(\"ms-capture-canvas\")\n    element.appendChild(capturingCanvas)\n\n    this.context = {\n      parent: element,\n      renderingCanvas,\n      renderingCanvasContext: renderingCanvas.getContext(\"2d\") as CanvasRenderingContext2D,\n      capturingCanvas,\n      capturingCanvasContext: capturingCanvas.getContext(\"2d\") as CanvasRenderingContext2D\n    }\n\n    this.resizeContent()\n  }\n\n  drawModel(model: IModel): void\n  {\n    this.#logger.info(\"drawModel\", { model })\n    this.context.renderingCanvasContext?.clearRect(0, 0, this.context.renderingCanvas.width, this.context.renderingCanvas.height)\n    model.symbols.forEach(symbol => this.drawSymbol(this.context.renderingCanvasContext, symbol))\n    this.context.capturingCanvasContext.clearRect(0, 0, this.context.capturingCanvas.width, this.context.capturingCanvas.height)\n  }\n\n  drawPendingStroke(stroke: Stroke | undefined): void\n  {\n    this.#logger.info(\"drawPendingStroke\", { stroke })\n    this.context.capturingCanvasContext.clearRect(0, 0, this.context.capturingCanvas.width, this.context.capturingCanvas.height)\n    if (stroke && stroke?.pointerType !== \"eraser\") {\n      this.strokeRenderer.draw(this.context.capturingCanvasContext, stroke)\n    }\n  }\n\n  resize(model: IModel): void\n  {\n    this.#logger.info(\"resize\", { model })\n    this.resizeContent()\n    this.drawModel(model)\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    if (this.context.parent) {\n      this.context.parent.innerHTML = \"\"\n    }\n  }\n}\n","import { TPointer, TStroke } from \"../../primitive\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\n\n/**\n * @group Renderer\n */\nexport class SVGStroker\n{\n\n  protected getArcPath(center: TPointer, radius: number): string\n  {\n    const svgPath = [\n      `M ${ center.x },${ center.y }`,\n      `m ${ -radius },0`,\n      `a ${ radius },${ radius } 0 1 0 ${ radius * 2 },0`,\n      `a ${ radius },${ radius } 0 1 0 ${ -(radius * 2) },0`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected getLinePath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x },${ linkPoints1[0].y }`,\n      `L ${ linkPoints2[0].x },${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x },${ linkPoints2[1].y }`,\n      `L ${ linkPoints1[1].x },${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected getFinalPath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    const parts = [`M ${ linkPoints[0].x },${ linkPoints[0].y }`]\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - (i * (Math.PI / ARCSPLIT))\n      parts.push(`L ${ end.x - (end.p * width * Math.sin(newAngle)) },${ end.y + (end.p * width * Math.cos(newAngle)) }`)\n    }\n    const svgPath = parts.join(\" \")\n    return svgPath\n  }\n\n  protected getQuadraticPath(begin: TPointer, end: TPointer, central: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, central), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(central, end), width)\n    const linkPoints3 = computeLinksPointers(central, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x },${ linkPoints1[0].y }`,\n      `Q ${ linkPoints3[0].x },${ linkPoints3[0].y } ${ linkPoints2[0].x },${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x },${ linkPoints2[1].y }`,\n      `Q ${ linkPoints3[1].x },${ linkPoints3[1].y } ${ linkPoints1[1].x },${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected buildSVGPath(stroke: TStroke): string\n  {\n    const STROKE_LENGTH = stroke.pointers.length\n    const STROKE_WIDTH = (stroke.style.width as number)\n    const NB_QUADRATICS = STROKE_LENGTH - 2\n    const firstPoint = stroke.pointers[0]\n\n    const parts = []\n    if (STROKE_LENGTH < 3) {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * 0.6))\n    } else {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * firstPoint.p))\n      parts.push(this.getLinePath(firstPoint, computeMiddlePointer(firstPoint, stroke.pointers[1]), STROKE_WIDTH))\n\n      for (let i = 0; i < NB_QUADRATICS; i++) {\n        const begin = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n        const end = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n        const central = stroke.pointers[i + 1]\n        parts.push(this.getQuadraticPath(begin, end, central, STROKE_WIDTH)\n        )\n      }\n      const beforeLastPoint = stroke.pointers[STROKE_LENGTH - 2]\n      const lastPoint = stroke.pointers[STROKE_LENGTH - 1]\n      parts.push(this.getLinePath(computeMiddlePointer(beforeLastPoint, lastPoint), lastPoint, STROKE_WIDTH))\n      parts.push(this.getFinalPath(beforeLastPoint, lastPoint, STROKE_WIDTH))\n    }\n    return parts.join(\" \")\n  }\n\n  drawStroke(svgElement: SVGElement, stroke: TStroke, attrs?: { name: string, value: string }[]): void\n  {\n    const svgPathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\")\n    svgPathElement.classList.add(\"pending-stroke\")\n    svgPathElement.setAttribute(\"id\", stroke.id)\n    svgPathElement.setAttribute(\"type\", stroke.pointerType)\n    attrs?.forEach(a =>\n    {\n      svgPathElement.setAttribute(a.name, a.value)\n    })\n    const svgPath = this.buildSVGPath(stroke)\n    svgPathElement.setAttribute(\"d\", `${ svgPath }Z`)\n    svgElement.appendChild(svgPathElement)\n  }\n}\n","import { LoggerClass } from \"../../Constants\"\nimport { TRenderingConfiguration } from \"../../configuration\"\nimport { LoggerManager } from \"../../logger\"\nimport { IModel } from \"../../model\"\nimport { TStroke } from \"../../primitive\"\nimport { TUpdatePatch, TUpdatePatchAppendChild, TUpdatePatchInsertBefore, TUpdatePatchRemoveAttribut, TUpdatePatchRemoveChild, TUpdatePatchRemoveElement, TUpdatePatchReplaceAll, TUpdatePatchReplaceELement, TUpdatePatchSetAttribut } from \"../../recognizer\"\nimport { SVGStroker } from \"./SVGStroker\"\n\n/**\n * @group Renderer\n */\nexport class WSSVGRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerClass.RENDERER)\n\n  config: TRenderingConfiguration\n  stroker: SVGStroker\n  context!: {\n    parent: HTMLElement\n  }\n\n  constructor(config: TRenderingConfiguration)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.config = config\n    this.stroker = new SVGStroker()\n  }\n\n  init(element: HTMLElement): void\n  {\n    this.#logger.info(\"init\", { element })\n    element.style.fontSize = \"10px\"\n    this.context = {\n      parent: element\n    }\n  }\n\n  protected drawStroke(svgElement: SVGElement, stroke: TStroke)\n  {\n    let style: string\n    if (stroke.pointerType === \"eraser\") {\n      stroke.style.width = 20\n      style = \"fill:grey;stroke:transparent;shadowBlur:5;opacity:0.2;\"\n    } else {\n      style = `fill:${ stroke.style.color };stroke:transparent;`\n    }\n    this.stroker.drawStroke(svgElement, stroke, [{ name: \"style\", value: style }])\n  }\n\n  protected replaceAll(layerName: string, update: TUpdatePatchReplaceAll): void\n  {\n    const oldLayer = this.context.parent.querySelector(`svg[data-layer=\"${ layerName }\"]`) as SVGElement | null\n    oldLayer?.remove()\n    this.context.parent.insertAdjacentHTML(\"beforeend\", update.svg)\n    const layer = this.context.parent.querySelector(`svg[data-layer=\"${ layerName }\"]`) as SVGElement\n    if (layerName === \"MODEL\") {\n      const pendingStrokesGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n      pendingStrokesGroup.id = \"pendingStrokes\"\n      layer.appendChild(pendingStrokesGroup)\n    }\n  }\n\n  protected replaceElement(update: TUpdatePatchReplaceELement): void\n  {\n    const elementToRemove = this.context.parent.querySelector(`#${ update.id }`) as HTMLElement | null\n    if (elementToRemove) {\n      const parent = elementToRemove.parentNode as HTMLElement | null | undefined\n      elementToRemove?.remove()\n      parent?.insertAdjacentHTML(\"beforeend\", update.svg)\n    }\n  }\n\n  protected appendChild(layerName: string, update: TUpdatePatchAppendChild): void\n  {\n    const parentSelector = update.parentId ? `#${ update.parentId }` : `svg[data-layer=\"${ layerName }\"]`\n    const parent = this.context.parent.querySelector(parentSelector) as HTMLElement\n    parent?.insertAdjacentHTML(\"beforeend\", update.svg)\n  }\n\n  protected removeChild(update: TUpdatePatchRemoveChild): void\n  {\n    this.context.parent.querySelector(`#${ update.parentId } > *:nth-child(${ update.index + 1 })`)?.remove()\n  }\n\n  protected removeElement(update: TUpdatePatchRemoveElement): void\n  {\n    const elementToRemove = this.context.parent.querySelector(`#${ update.id }`)\n    if (elementToRemove) {\n      if (update.id.includes(\"s\") || update.id.includes(\"MODEL\")) {\n        elementToRemove.remove()\n      } else {\n        elementToRemove.setAttribute(\"class\", \"removed-stroke\")\n        setTimeout(() =>\n        {\n          elementToRemove?.remove()\n        }, 100)\n      }\n    }\n  }\n\n  protected insertBefore(update: TUpdatePatchInsertBefore): void\n  {\n    const parent = this.context.parent.querySelector(`#${ update.refId }`) as HTMLElement | null\n    parent?.insertAdjacentHTML(\"beforebegin\", update.svg)\n  }\n\n  protected setAttribute(update: TUpdatePatchSetAttribut): void\n  {\n    const selector = update.id ? `#${ update.id }` : \"svg\"\n    const element = this.context.parent.querySelector(selector) as HTMLElement | null\n    element?.setAttribute(update.name, update.value)\n  }\n\n  protected removeAttribute(update: TUpdatePatchRemoveAttribut): void\n  {\n    const selector = update.id ? `#${ update.id }` : \"svg\"\n    const element = this.context.parent.querySelector(selector) as HTMLElement | null\n    element?.removeAttribute(update.name)\n  }\n\n  updateLayer(layerName: string, update: TUpdatePatch): void\n  {\n    this.#logger.info(\"updateLayer\", { layerName, update })\n    switch (update.type) {\n      case \"REPLACE_ALL\":\n        this.replaceAll(layerName, update as TUpdatePatchReplaceAll)\n        break\n      case \"REPLACE_ELEMENT\":\n        this.replaceElement(update as TUpdatePatchReplaceELement)\n        break\n      case \"APPEND_CHILD\":\n        this.appendChild(layerName, update as TUpdatePatchAppendChild)\n        break\n      case \"REMOVE_ELEMENT\":\n        this.removeElement(update as TUpdatePatchRemoveElement)\n        break\n      case \"REMOVE_CHILD\":\n        this.removeChild(update as TUpdatePatchRemoveChild)\n        break\n      case \"INSERT_BEFORE\":\n        this.insertBefore(update as TUpdatePatchInsertBefore)\n        break\n      case \"SET_ATTRIBUTE\":\n        this.setAttribute(update as TUpdatePatchSetAttribut)\n        break\n      case \"REMOVE_ATTRIBUTE\":\n        this.removeAttribute(update as TUpdatePatchRemoveAttribut)\n        break\n      default:\n        this.#logger.warn(\"updateLayer\", `update.type unknow ${update.type}`)\n        break\n    }\n  }\n\n  updatesLayer(layerName: string, updates: TUpdatePatch[]): void\n  {\n    this.#logger.info(\"updatesLayer\", { layerName, updates })\n    updates.forEach(u => this.updateLayer(layerName, u))\n    this.clearPendingStroke()\n  }\n\n  clearPendingStroke(): void\n  {\n    this.#logger.info(\"clearPendingStroke\")\n    const pendingStrokeGroup = this.context.parent.querySelector(\"#pendingStrokes\") as SVGElement\n    if (pendingStrokeGroup) {\n      pendingStrokeGroup.innerHTML = \"\"\n    }\n  }\n\n  drawPendingStroke(stroke: TStroke): void\n  {\n    this.#logger.info(\"drawPendingStroke\", { stroke })\n    if (stroke) {\n      const pendingStrokeGroup = this.context.parent.querySelector(\"#pendingStrokes\") as SVGElement\n      if (pendingStrokeGroup) {\n        const oldStroke = pendingStrokeGroup.querySelector(`#${ stroke?.id }`)\n        if (oldStroke) {\n          oldStroke.remove()\n        }\n        this.drawStroke(pendingStrokeGroup, stroke)\n      }\n    }\n  }\n\n  clearErasingStrokes(): void\n  {\n    const erasingStrokeList = this.context.parent.querySelectorAll(\"[type=eraser]\") as NodeListOf<SVGElement>\n    erasingStrokeList.forEach(erasingStroke => {\n      erasingStroke.remove()\n    })\n  }\n\n  resize(model: IModel): void\n  {\n    this.#logger.info(\"resize\", { model })\n    const rect = this.context.parent.getBoundingClientRect()\n    const svgList = this.context.parent.querySelectorAll(\"svg\")\n    const width = Math.max(rect.width, model.width)\n    const height = Math.max(rect.height, model.height)\n    svgList.forEach(svg =>\n    {\n      svg.setAttribute(\"viewBox\", `0 0 ${ width }, ${ height }`)\n      svg.setAttribute(\"width\", `${ width }px`)\n      svg.setAttribute(\"height\", `${ height }px`)\n    })\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\", { context: this.context })\n    if (this.context?.parent) {\n      this.context.parent.querySelectorAll(\"svg\").forEach(n => n.remove())\n    }\n  }\n}\n","import { IModel } from \"../model\"\n\n/**\n * @group UndoRedo\n */\nexport type TUndoRedoContext = {\n  canUndo: boolean\n  canRedo: boolean\n  empty: boolean\n  stackIndex: number\n  possibleUndoCount: number\n  stack: IModel[]\n}\n\n/**\n * @group UndoRedo\n */\nexport class UndoRedoContext implements TUndoRedoContext\n{\n  canUndo: boolean\n  canRedo: boolean\n  empty: boolean\n  stackIndex: number\n  possibleUndoCount: number\n  stack: IModel[]\n\n  constructor(model: IModel)\n  {\n    this.stackIndex = 0\n    this.possibleUndoCount = 0\n    this.canRedo = false\n    this.canUndo = false\n    this.empty = true\n    this.stack = [model.getClone()]\n  }\n}\n","import { LoggerClass } from \"../Constants\"\nimport { TUndoRedoConfiguration } from \"../configuration\"\nimport { InternalEvent } from \"../event\"\nimport { LoggerManager } from \"../logger\"\nimport { IModel } from \"../model\"\nimport { UndoRedoContext } from \"./UndoRedoContext\"\n\n/**\n * @group UndoRedo\n */\nexport class UndoRedoManager\n{\n  #logger = LoggerManager.getLogger(LoggerClass.UNDO_REDO)\n\n  context: UndoRedoContext\n  configuration: TUndoRedoConfiguration\n\n  constructor(configuration: TUndoRedoConfiguration, model: IModel)\n  {\n    this.#logger.info(\"constructor\", { configuration, model })\n    this.configuration = configuration\n    this.context = new UndoRedoContext(model)\n  }\n\n  get internalEvent(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  private updateCanUndoRedo(): void\n  {\n    this.context.canRedo = this.context.stack.length - 1 > this.context.stackIndex\n    this.context.canUndo = this.context.stackIndex > 0\n    const currentModel = this.context.stack[this.context.stackIndex]\n    this.context.empty = currentModel.symbols.length === 0\n  }\n\n  addModelToStack(model: IModel): void\n  {\n    this.#logger.info(\"addModelToStack\", { model })\n    if (this.context.stackIndex + 1 < this.context.stack.length) {\n      this.context.stack.splice(this.context.stackIndex + 1)\n    }\n\n    this.context.stack.push(model.getClone())\n    this.context.stackIndex = this.context.stack.length - 1\n\n    if (this.context.stack.length > this.configuration.maxStackSize) {\n      this.context.stack.shift()\n      this.context.stackIndex--\n    }\n\n    this.updateCanUndoRedo()\n    this.internalEvent.emitContextChange(this.context)\n  }\n\n  removeLastModelInStack(): void\n  {\n    this.#logger.info(\"removeLastModelInStack\")\n    if (this.context.stackIndex === this.context.stack.length - 1) {\n      this.context.stackIndex--\n    }\n    this.context.stack.pop()\n    this.updateCanUndoRedo()\n  }\n\n  updateModelInStack(model: IModel): void\n  {\n    this.#logger.info(\"updateModelInStack\", { model })\n    const index = this.context.stack.findIndex(m => m.modificationDate === model.modificationDate)\n    if (index > -1) {\n      this.context.stack.splice(index, 1, model.getClone())\n    }\n    this.updateCanUndoRedo()\n    this.internalEvent.emitContextChange(this.context)\n  }\n\n  undo(): IModel\n  {\n    this.#logger.info(\"undo\")\n    if (this.context.canUndo) {\n      this.context.stackIndex--\n      this.updateCanUndoRedo()\n      this.internalEvent.emitContextChange(this.context)\n    }\n    const previousModel = this.context.stack[this.context.stackIndex].getClone()\n    this.#logger.debug(\"undo\", previousModel)\n    return previousModel\n  }\n\n  redo(): IModel\n  {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.context.stackIndex++\n      this.updateCanUndoRedo()\n      this.internalEvent.emitContextChange(this.context)\n    }\n    const nextModel = this.context.stack[this.context.stackIndex].getClone()\n    this.#logger.debug(\"redo\", nextModel)\n    return nextModel\n  }\n\n  reset(model: IModel): void\n  {\n    this.#logger.info(\"reset\", { model })\n    this.context = new UndoRedoContext(model)\n    this.internalEvent.emitContextChange(this.context)\n  }\n\n}\n","import { Intention, LoggerClass } from \"../Constants\"\nimport { Configuration, TConfiguration, TConverstionState } from \"../configuration\"\nimport { InternalEvent } from \"../event\"\nimport { PointerEventGrabber } from \"../grabber\"\nimport { LoggerManager } from \"../logger\"\nimport { IModel, Model, TExport } from \"../model\"\nimport { Stroke, TStroke, TPointer } from \"../primitive\"\nimport { RestRecognizer } from \"../recognizer\"\nimport { CanvasRenderer } from \"../renderer\"\nimport { DefaultPenStyle, StyleManager, TPenStyle, TTheme } from \"../style\"\nimport { TUndoRedoContext, UndoRedoManager } from \"../undo-redo\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { IBehaviors, TBehaviorOptions } from \"./IBehaviors\"\n\n/**\n * @group Behavior\n */\nexport class RestBehaviors implements IBehaviors\n{\n  name = \"RestBehaviors\"\n  #logger = LoggerManager.getLogger(LoggerClass.BEHAVIORS)\n  #configuration: TConfiguration\n  #model: Model\n  #resizeTimer?: ReturnType<typeof setTimeout>\n  #exportTimer?: ReturnType<typeof setTimeout>\n\n  grabber: PointerEventGrabber\n  renderer: CanvasRenderer\n  recognizer: RestRecognizer\n  undoRedoManager: UndoRedoManager\n  styleManager: StyleManager\n  intention: Intention\n\n  constructor(options: PartialDeep<TBehaviorOptions>)\n  {\n    this.#logger.info(\"constructor\", { options })\n    this.#configuration = new Configuration(options?.configuration)\n    this.styleManager = new StyleManager(options?.penStyle, options?.theme)\n\n    this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    this.renderer = new CanvasRenderer(this.#configuration.rendering)\n    this.recognizer = new RestRecognizer(this.#configuration.server, this.#configuration.recognition)\n\n    this.intention = Intention.Write\n    this.#model = new Model()\n    this.undoRedoManager = new UndoRedoManager(this.#configuration[\"undo-redo\"], this.model)\n  }\n\n  protected onPointerDown(evt: PointerEvent, point: TPointer): void\n  {\n    this.#logger.info(\"onPointerDown\", { intention: this.intention, evt, point })\n    const { pointerType } = evt\n    const style: TPenStyle = Object.assign({}, this.theme?.ink, this.currentPenStyle)\n    switch (this.intention) {\n      case Intention.Erase: {\n        if (this.model.removeStrokesFromPoint(point).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case Intention.Write:\n        this.model.initCurrentStroke(point, evt.pointerId, pointerType, style)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.#logger.warn(\"#onPointerDown\", `onPointerDown intention unknow: \"${ this.intention }\"`)\n        break\n    }\n  }\n\n  protected onPointerMove(_evt: PointerEvent, point: TPointer): void\n  {\n    this.#logger.info(\"onPointerMove\", { intention: this.intention, point })\n    switch (this.intention) {\n      case Intention.Erase: {\n        if (this.model.removeStrokesFromPoint(point).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case Intention.Write:\n        this.model.appendToCurrentStroke(point)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.#logger.warn(\"#onPointerMove\", `onPointerMove intention unknow: \"${ this.intention }\"`)\n        break\n    }\n  }\n\n  protected async onPointerUp(_evt: PointerEvent, point: TPointer): Promise<void>\n  {\n    this.#logger.info(\"onPointerUp\", { intention: this.intention, point })\n    switch (this.intention) {\n      case Intention.Erase:\n        this.model.removeStrokesFromPoint(point)\n        if (this.context.stack.at(-1)?.modificationDate !== this.model.modificationDate) {\n          await this.updateModelRendering()\n        }\n        break\n      case Intention.Write:\n        this.model.endCurrentStroke(point)\n        await this.updateModelRendering()\n        break\n      default:\n        this.#logger.warn(\"#onPointerUp\", `onPointerUp intention unknow: \"${ this.intention }\"`)\n        break\n    }\n  }\n\n  get internalEvent(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  get model(): Model\n  {\n    return this.#model\n  }\n\n  get context(): TUndoRedoContext\n  {\n    return this.undoRedoManager.context\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.styleManager.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.styleManager.penStyle\n  }\n  async setPenStyle(penStyle?: TPenStyle | undefined): Promise<void>\n  {\n    this.#logger.info(\"setPenStyle\", { penStyle })\n    this.styleManager.setPenStyle(penStyle)\n    return Promise.resolve()\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.styleManager.penStyleClasses\n  }\n  async setPenStyleClasses(penStyleClasses?: string | undefined): Promise<void>\n  {\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClasses })\n    this.styleManager.setPenStyleClasses(penStyleClasses)\n    return Promise.resolve()\n  }\n\n  get theme(): TTheme\n  {\n    return this.styleManager.theme\n  }\n  async setTheme(theme?: PartialDeep<TTheme>): Promise<void>\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    this.styleManager.setTheme(theme)\n    return Promise.resolve()\n  }\n\n  get configuration(): TConfiguration\n  {\n    return this.#configuration\n  }\n\n  async init(domElement: HTMLElement): Promise<void>\n  {\n    this.#logger.info(\"init\", { domElement })\n    this.model.width = Math.max(domElement.clientWidth, this.#configuration.rendering.minWidth)\n    this.model.height = Math.max(domElement.clientHeight, this.#configuration.rendering.minHeight)\n    this.undoRedoManager.updateModelInStack(this.model)\n\n    this.renderer.init(domElement)\n\n    this.grabber.attach(domElement)\n    this.grabber.onPointerDown = this.onPointerDown.bind(this)\n    this.grabber.onPointerMove = this.onPointerMove.bind(this)\n    this.grabber.onPointerUp = this.onPointerUp.bind(this)\n    return Promise.resolve()\n  }\n\n  drawCurrentStroke(): void\n  {\n    this.#logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    this.renderer.drawPendingStroke(this.model.currentSymbol)\n  }\n\n  async updateModelRendering(): Promise<IModel>\n  {\n    this.#logger.info(\"updateModelRendering\")\n    this.renderer.drawModel(this.model)\n    const deferred = new DeferredPromise<Model>()\n    this.undoRedoManager.addModelToStack(this.model)\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      clearTimeout(this.#exportTimer)\n      let currentModel = this.model.getClone()\n      this.#exportTimer = setTimeout(async () =>\n      {\n        try {\n          currentModel = await this.recognizer.export(currentModel)\n          this.undoRedoManager.updateModelInStack(currentModel)\n          if (this.model.modificationDate === currentModel.modificationDate) {\n            this.model.exports = currentModel.exports\n          }\n          deferred.resolve(this.model)\n        } catch (error) {\n          this.#logger.error(\"updateModelRendering\", { error })\n          this.internalEvent.emitError(error as Error)\n          deferred.reject(error as Error)\n        }\n      }, this.#configuration.triggers.exportContent === \"QUIET_PERIOD\" ? this.#configuration.triggers.exportContentDelay : 0)\n    } else {\n      deferred.resolve(this.model)\n    }\n    await deferred.promise\n    this.internalEvent.emitExported(this.model.exports as TExport)\n    this.#logger.debug(\"updateModelRendering\", this.model.exports)\n    return deferred.promise\n  }\n\n  async export(mimeTypes?: string[]): Promise<IModel>\n  {\n    this.#logger.info(\"export\", { mimeTypes })\n    const newModel = await this.recognizer.export(this.model.getClone(), mimeTypes)\n    if (this.model.modificationDate === newModel.modificationDate) {\n      this.model.mergeExport(newModel.exports as TExport)\n    }\n    this.undoRedoManager.updateModelInStack(newModel)\n    this.#logger.debug(\"export\", this.model)\n    return this.model\n  }\n\n  async convert(conversionState?: TConverstionState, requestedMimeTypes?: string[]): Promise<IModel>\n  {\n    this.#logger.info(\"convert\", { conversionState, requestedMimeTypes })\n    const newModel = await this.recognizer.convert(this.model, conversionState, requestedMimeTypes)\n    Object.assign(this.#model, newModel)\n    this.#logger.debug(\"convert\", this.model)\n    return this.model\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<IModel>\n  {\n    const errors: string[] = []\n    strokes.forEach((s, strokeIndex) =>\n    {\n      let flag = true\n      const stroke = new Stroke(s.style || DefaultPenStyle, s.pointerId || 1)\n      if (s.id) stroke.id = s.id\n      if (!s.pointers?.length) {\n        errors.push(`stroke ${strokeIndex + 1} has not pointers`)\n        flag = false\n        return\n      }\n      s.pointers?.forEach((pp, pIndex) => {\n        if (!pp) {\n          errors.push(`stroke ${strokeIndex + 1} has no pointer at ${pIndex}`)\n          flag = false\n          return\n        }\n        const pointer: TPointer = {\n          p: pp.p || 1,\n          t: pp.t || pIndex,\n          x: 0,\n          y: 0\n        }\n        if (pp?.x == undefined || pp?.x == null) {\n          errors.push(`stroke ${strokeIndex + 1} has no x at pointer at ${pIndex}`)\n          flag = false\n          return\n        }\n        else {\n          pointer.x = pp.x\n        }\n        if (pp?.y == undefined || pp?.y == null) {\n          errors.push(`stroke ${strokeIndex + 1} has no y at pointer at ${pIndex}`)\n          flag = false\n          return\n        }\n        else {\n          pointer.y = pp.y\n        }\n        if (flag) {\n          stroke.pointers.push(pointer)\n        }\n      })\n      if (flag) {\n        this.model.addStroke(stroke)\n      }\n    })\n\n    if (errors.length) {\n      this.internalEvent.emitError( new Error(errors.join(\"\\n\")))\n    }\n    try {\n      const newModel = await this.updateModelRendering()\n      Object.assign(this.#model, newModel)\n      return this.model\n    } catch (error) {\n      this.internalEvent.emitError(error as Error)\n      throw error as Error\n    }\n  }\n\n  async resize(height: number, width: number): Promise<IModel>\n  {\n    this.#logger.info(\"resize\", { height, width })\n    const deferredResize = new DeferredPromise<Model>()\n    this.model.height = height\n    this.model.width = width\n    this.renderer.resize(this.model)\n    if (this.model.symbols.length) {\n      clearTimeout(this.#resizeTimer)\n      this.#resizeTimer = setTimeout(async () =>\n      {\n        const resizeModel = await this.recognizer.resize(this.model)\n        deferredResize.resolve(resizeModel)\n      }, this.#configuration.triggers.resizeTriggerDelay)\n    } else {\n      deferredResize.resolve(this.model)\n    }\n    this.#model = await deferredResize.promise\n    this.#logger.debug(\"resize\", { model: this.model })\n    this.internalEvent.emitExported(this.model.exports as TExport)\n    return this.model\n  }\n\n  async undo(): Promise<IModel>\n  {\n    this.#logger.info(\"undo\")\n    this.#model = this.undoRedoManager.undo() as Model\n    this.renderer.drawModel(this.#model)\n    this.#model = await this.recognizer.export(this.#model)\n    this.undoRedoManager.updateModelInStack(this.#model)\n    this.internalEvent.emitExported(this.#model.exports as TExport)\n    this.#logger.debug(\"undo\", this.#model)\n    return this.#model\n  }\n\n  async redo(): Promise<IModel>\n  {\n    this.#logger.info(\"redo\")\n    this.#model = this.undoRedoManager.redo() as Model\n    this.renderer.drawModel(this.#model)\n    this.#model = await this.recognizer.export(this.#model)\n    this.undoRedoManager.updateModelInStack(this.#model)\n    this.internalEvent.emitExported(this.#model.exports as TExport)\n    this.#logger.debug(\"redo\", this.#model)\n    return this.#model\n  }\n\n  async clear(): Promise<IModel>\n  {\n    this.#logger.info(\"clear\")\n    this.model.clear()\n    this.undoRedoManager.addModelToStack(this.model)\n    this.renderer.drawModel(this.model)\n    this.internalEvent.emitExported(this.model.exports as TExport)\n    this.#logger.debug(\"clear\", this.model)\n    return this.model\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.#logger.info(\"destroy\")\n    this.grabber.detach()\n    this.renderer.destroy()\n    return Promise.resolve()\n  }\n}\n","import { Intention, LoggerClass } from \"../Constants\"\nimport { Configuration, TConfiguration, TConverstionState } from \"../configuration\"\nimport { InternalEvent } from \"../event\"\nimport { PointerEventGrabber } from \"../grabber\"\nimport { LoggerManager } from \"../logger\"\nimport { IModel, Model, TExport } from \"../model\"\nimport { TWSMessageEventSVGPatch, WSRecognizer } from \"../recognizer\"\nimport { WSSVGRenderer } from \"../renderer\"\nimport { DefaultPenStyle, StyleManager, TPenStyle, TTheme } from \"../style\"\nimport { TUndoRedoContext, UndoRedoManager } from \"../undo-redo\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { Stroke, TStroke, TPointer } from \"../primitive\"\nimport { IBehaviors, TBehaviorOptions } from \"./IBehaviors\"\n\n/**\n * @group Behavior\n */\nexport class WSBehaviors implements IBehaviors\n{\n  name = \"WSBehaviors\"\n  #logger = LoggerManager.getLogger(LoggerClass.BEHAVIORS)\n  #configuration: TConfiguration\n  #model: Model\n  #resizeTimer?: ReturnType<typeof setTimeout>\n\n  grabber: PointerEventGrabber\n  renderer: WSSVGRenderer\n  recognizer: WSRecognizer\n  undoRedoManager: UndoRedoManager\n  styleManager: StyleManager\n  intention: Intention\n\n\n  constructor(options: PartialDeep<TBehaviorOptions>)\n  {\n    this.#logger.info(\"constructor\", { options })\n    this.#configuration = new Configuration(options?.configuration)\n    this.styleManager = new StyleManager(options?.penStyle, options?.theme)\n\n    this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    this.renderer = new WSSVGRenderer(this.#configuration.rendering)\n    this.recognizer = new WSRecognizer(this.#configuration.server, this.#configuration.recognition)\n\n    this.intention = Intention.Write\n    this.#model = new Model()\n    this.undoRedoManager = new UndoRedoManager(this.#configuration[\"undo-redo\"], this.model)\n  }\n\n  get internalEvent(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  get model(): Model\n  {\n    return this.#model\n  }\n\n  get context(): TUndoRedoContext\n  {\n    return this.undoRedoManager.context\n  }\n\n  get configuration(): TConfiguration\n  {\n    return this.#configuration\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.styleManager.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.styleManager.penStyle\n  }\n  setPenStyle(penStyle?: PartialDeep<TPenStyle>): Promise<void>\n  {\n    this.#logger.info(\"setPenStyle\", { penStyle })\n    this.styleManager.setPenStyle(penStyle)\n    this.#logger.debug(\"setPenStyle\", this.styleManager.penStyle)\n    return this.recognizer.setPenStyle(this.styleManager.penStyle)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.styleManager.penStyleClasses\n  }\n  setPenStyleClasses(penClass?: string): Promise<void>\n  {\n    this.#logger.info(\"setPenStyleClasses\", { penClass })\n    this.styleManager.setPenStyleClasses(penClass)\n    this.#logger.debug(\"setPenStyleClasses\", this.styleManager.penStyleClasses)\n    return this.recognizer.setPenStyleClasses(this.styleManager.penStyleClasses)\n  }\n\n  get theme(): TTheme\n  {\n    return this.styleManager.theme\n  }\n  setTheme(theme?: PartialDeep<TTheme>): Promise<void>\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    this.styleManager.setTheme(theme)\n    this.#logger.debug(\"setTheme\", this.styleManager.theme)\n    return this.recognizer.setTheme(this.styleManager.theme)\n  }\n\n  protected onExport(exports: TExport): void\n  {\n    this.#logger.debug(\"onExport\", { exports })\n    this.model.mergeExport(exports)\n  }\n\n  protected onPointerDown(evt: PointerEvent, point: TPointer): void\n  {\n    this.#logger.info(\"onPointerDown\", { intention: this.intention, evt, point })\n    let { pointerType } = evt\n    const style: TPenStyle = Object.assign({}, this.theme?.ink, this.currentPenStyle)\n    if (this.intention === Intention.Erase) {\n      pointerType = \"eraser\"\n    }\n    this.model.initCurrentStroke(point, evt.pointerId, pointerType, style)\n    this.drawCurrentStroke()\n  }\n\n  protected onPointerMove(_evt: PointerEvent, point: TPointer): void\n  {\n    this.#logger.info(\"onPointerMove\", { intention: this.intention, point })\n    this.model.appendToCurrentStroke(point)\n    this.drawCurrentStroke()\n  }\n\n  protected async onPointerUp(_evt: PointerEvent, point: TPointer): Promise<void>\n  {\n    try {\n      this.#logger.info(\"onPointerUp\", { intention: this.intention, point })\n      this.model.endCurrentStroke(point)\n      await this.synchronizeModelWithBackend()\n    } catch (error) {\n      this.internalEvent.emitError(error as Error)\n    }\n  }\n\n  protected onSVGPatch(evt: TWSMessageEventSVGPatch): void\n  {\n    this.#logger.info(\"onSVGPatch\", { evt })\n    this.renderer.updatesLayer(evt.layer, evt.updates)\n  }\n\n  async init(domElement: HTMLElement): Promise<void>\n  {\n    this.#logger.info(\"init\", { domElement })\n    const compStyles = window.getComputedStyle(domElement);\n    this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\",\"\")), this.#configuration.rendering.minWidth)\n    this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\",\"\")), this.#configuration.rendering.minHeight)\n    this.undoRedoManager.updateModelInStack(this.model)\n\n    this.renderer.init(domElement)\n\n    this.grabber.attach(domElement)\n    this.grabber.onPointerDown = this.onPointerDown.bind(this)\n    this.grabber.onPointerMove = this.onPointerMove.bind(this)\n    this.grabber.onPointerUp = this.onPointerUp.bind(this)\n\n    this.internalEvent.addExportedListener(this.onExport.bind(this))\n    this.internalEvent.addSVGPatchListener(this.onSVGPatch.bind(this))\n\n    await this.recognizer.init(this.model.height, this.model.width)\n    await this.setPenStyle(this.penStyle)\n    await this.setTheme(this.theme as PartialDeep<TTheme>)\n    await this.setPenStyleClasses(this.penStyleClasses)\n  }\n\n  drawCurrentStroke(): void\n  {\n    this.#logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    const currentSymbol = this.model.currentSymbol as Stroke\n    if (currentSymbol) {\n      this.renderer.drawPendingStroke(currentSymbol)\n    }\n  }\n\n  async synchronizeModelWithBackend(): Promise<IModel>\n  {\n    this.#logger.info(\"synchronizeModelWithBackend\")\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      const unsentStrokes = this.model.extractUnsentStrokes()\n      this.model.updatePositionSent()\n      this.undoRedoManager.addModelToStack(this.model)\n      this.renderer.clearErasingStrokes()\n      const exports = await this.recognizer.addStrokes(unsentStrokes)\n      this.model.mergeExport(exports)\n      this.undoRedoManager.updateModelInStack(this.model)\n    }\n    this.#logger.debug(\"synchronizeModelWithBackend\", this.model)\n    return this.model\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    return this.recognizer.waitForIdle()\n  }\n\n  async export(mimeTypes?: string[]): Promise<IModel>\n  {\n    this.#logger.info(\"export\", { mimeTypes })\n    try {\n      if (this.#configuration.triggers.exportContent === \"DEMAND\") {\n        const unsentStrokes = this.model.extractUnsentStrokes()\n        this.model.updatePositionSent()\n        const exports = await this.recognizer.addStrokes(unsentStrokes)\n        this.model.updatePositionReceived()\n        this.model.mergeExport(exports)\n        this.#logger.debug(\"export\", this.model)\n        return this.model\n      } else {\n        return this.recognizer.export(this.model, mimeTypes)\n      }\n    } catch (error) {\n      this.#logger.error(\"export\", { error } )\n      this.internalEvent.emitError(error as Error)\n      return Promise.reject(error)\n    }\n  }\n\n  async convert(conversionState?: TConverstionState): Promise<IModel>\n  {\n    this.#logger.info(\"convert\", { conversionState })\n    this.undoRedoManager.addModelToStack(this.model)\n    this.context.stack.push(this.model.getClone())\n    this.#model = await this.recognizer.convert(this.model, conversionState)\n    this.#logger.debug(\"convert\", this.model)\n    this.undoRedoManager.addModelToStack(this.model)\n    return this.model\n  }\n\n  async import(data: Blob, mimeType?: string): Promise<IModel>\n  {\n    this.#logger.info(\"import\", { data, mimeType })\n    this.context.stack.push(this.model.getClone())\n    const m = await this.recognizer.import(this.model, data, mimeType)\n    this.undoRedoManager.addModelToStack(m)\n    return m\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<IModel>\n  {\n    this.#logger.info(\"importPointEvents\", { strokes })\n    const errors: string[] = []\n    const strokesToImport = strokes.map((s, strokeIndex) => {\n      const str = new Stroke(s.style || DefaultPenStyle, s.pointerId || 1)\n      if (s.id) str.id = s.id\n      if (s.pointerType) str.pointerType = s.pointerType\n      if (!s.pointers?.length) {\n        errors.push(`stroke ${strokeIndex + 1} has not pointers`)\n      }\n      let flag = true\n      s.pointers?.forEach((pp, pIndex) => {\n        flag = true\n        if (!pp) {\n          errors.push(`stroke ${strokeIndex + 1} has no pointer at ${pIndex}`)\n          return\n        }\n        const pointer: TPointer = {\n          p: pp.p || 1,\n          t: pp.t || pIndex,\n          x: 0,\n          y: 0\n        }\n        if (pp?.x == undefined || pp?.x == null) {\n          errors.push(`stroke ${strokeIndex + 1} has no x at pointer at ${pIndex}`)\n          flag = false\n        }\n        else {\n          pointer.x = pp.x\n        }\n        if (pp?.y == undefined || pp?.y == null) {\n          errors.push(`stroke ${strokeIndex + 1} has no y at pointer at ${pIndex}`)\n          flag = false\n        }\n        else {\n          pointer.y = pp.y\n        }\n        if (flag) {\n          str.pointers.push(pointer)\n        }\n      })\n      return str\n    })\n    if (errors.length) {\n      this.internalEvent.emitError( new Error(errors.join(\"\\n\")))\n    }\n    strokesToImport.map(s => this.model.addStroke(s))\n    const exportPoints = await this.recognizer.importPointEvents(strokesToImport)\n    this.model.mergeExport(exportPoints)\n    this.#logger.debug(\"importPointEvents\", this.model)\n    return this.model\n  }\n\n  async resize(height: number, width: number): Promise<IModel>\n  {\n    this.#logger.info(\"resize\", { height, width })\n    const deferredResize = new DeferredPromise<Model>()\n    this.model.height = height\n    this.model.width = width\n    const clonedModel = this.model.getClone()\n    this.renderer.resize(clonedModel)\n    clearTimeout(this.#resizeTimer)\n    this.#resizeTimer = setTimeout(async () =>\n    {\n      try {\n        const resizeModel = await this.recognizer.resize(clonedModel)\n        deferredResize.resolve(resizeModel)\n      } catch (error) {\n        this.#logger.error(\"resize\", { height, width, error } )\n        deferredResize.reject(error as Error)\n      }\n    }, this.#configuration.triggers.resizeTriggerDelay)\n\n    this.#model = await deferredResize.promise\n    this.internalEvent.emitExported(this.model.exports as TExport)\n    this.#logger.debug(\"resize\", this.model)\n    return this.model\n  }\n\n  async undo(): Promise<IModel>\n  {\n    this.#logger.info(\"undo\")\n    if (this.context.canUndo) {\n      this.#model = this.undoRedoManager.undo() as Model\n      return this.recognizer.undo(this.model)\n    }\n    else {\n      throw new Error(\"Undo not allowed\")\n    }\n  }\n\n  async redo(): Promise<IModel>\n  {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.#model = this.undoRedoManager.redo() as Model\n      this.#logger.debug(\"undo\", this.#model)\n      return this.recognizer.redo(this.model)\n    }\n    else {\n      throw new Error(\"Redo not allowed\")\n    }\n  }\n\n  async clear(): Promise<IModel>\n  {\n    this.#logger.info(\"clear\")\n    this.model.clear()\n    this.undoRedoManager.addModelToStack(this.model)\n    return this.recognizer.clear(this.model)\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.#logger.info(\"destroy\")\n    this.grabber.detach()\n    this.renderer.destroy()\n    this.recognizer.destroy()\n    return Promise.resolve()\n  }\n}\n","import { LoggerClass } from \"../Constants\"\nimport { TMarginConfiguration, TRenderingConfiguration } from \"../configuration\"\nimport { InternalEvent } from \"../event\"\nimport { LoggerManager } from \"../logger\"\nimport { TJIIXExport, TJIIXWord } from \"../model\"\nimport { convertMillimeterToPixel, createUUID } from \"../utils\"\n\n/**\n * @group SmartGuide\n */\nexport class SmartGuide\n{\n  uuid: string\n  #smartGuideElement!: HTMLDivElement\n  #wrapperElement!: HTMLDivElement\n  #prompterContainerElement!: HTMLDivElement\n  #prompterTextElement!: HTMLDivElement\n  #ellipsisElement!: HTMLDivElement\n  #tagElement!: HTMLDivElement\n  #candidatesElement!: HTMLDivElement\n  #menuElement!: HTMLDivElement\n  #convertElement!: HTMLButtonElement\n  #copyElement!: HTMLButtonElement\n  #deleteElement!: HTMLButtonElement\n  #isMenuOpen!: boolean\n  margin: TMarginConfiguration\n  renderingConfiguration!: TRenderingConfiguration\n  jiix?: TJIIXExport\n  lastWord?: TJIIXWord\n  wordToChange?: TJIIXWord\n  #logger = LoggerManager.getLogger(LoggerClass.SMARTGUIDE)\n\n  constructor()\n  {\n    this.#logger.info(\"constructor\")\n    this.uuid = createUUID()\n    this.margin = {\n      bottom: 0,\n      left: 0,\n      right: 0,\n      top: 0\n    }\n    this.#createRootElement()\n    this.#createWrapperElement()\n    this.#createPrompterContainerElement()\n    this.#createPrompterTextElement()\n    this.#createEllipsisElement()\n    this.#createTagElement()\n    this.#createCandidatesElement()\n    this.#createMoreMenuElement()\n    this.#createConvertElement()\n    this.#createCopyElement()\n    this.#createDeleteElement()\n  }\n\n  get internalEvent(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  #createRootElement(): void\n  {\n    this.#smartGuideElement = document.createElement(\"div\")\n    this.#smartGuideElement.id = `smartguide-${ this.uuid }`\n    this.#smartGuideElement.classList.add(\"smartguide\")\n  }\n\n  #createWrapperElement(): void\n  {\n    this.#wrapperElement = document.createElement(\"div\")\n    this.#wrapperElement.id = `smartguide-wrapper-${ this.uuid }`\n    this.#wrapperElement.classList.add(\"smartguide-wrapper\")\n  }\n\n  #createPrompterContainerElement(): void\n  {\n    this.#prompterContainerElement = document.createElement(\"div\")\n    this.#prompterContainerElement.id = `prompter-container-${ this.uuid }`\n    this.#prompterContainerElement.classList.add(\"prompter-container\")\n  }\n\n  #createPrompterTextElement(): void\n  {\n    this.#prompterTextElement = document.createElement(\"div\")\n    this.#prompterTextElement.id = `prompter-text-${ this.uuid }`\n    this.#prompterTextElement.classList.add(\"prompter-text\")\n    this.#prompterTextElement.setAttribute(\"touch-action\", \"none\")\n  }\n\n  #createEllipsisElement(): void\n  {\n    this.#ellipsisElement = document.createElement(\"div\")\n    this.#ellipsisElement.id = `ellipsis-${ this.uuid }`\n    this.#ellipsisElement.classList.add(\"ellipsis\")\n    this.#ellipsisElement.innerHTML = \"...\"\n  }\n\n  #createTagElement(): void\n  {\n    this.#tagElement = document.createElement(\"div\")\n    this.#tagElement.id = `tag-icon-${ this.uuid }`\n    this.#tagElement.classList.add(\"tag-icon\")\n    this.#tagElement.innerHTML = \"&#182;\"\n  }\n\n  #createCandidatesElement(): void\n  {\n    this.#candidatesElement = document.createElement(\"div\")\n    this.#candidatesElement.id = `candidates-${ this.uuid }`\n    this.#candidatesElement.classList.add(\"candidates\")\n  }\n\n  #createMoreMenuElement(): void\n  {\n    this.#menuElement = document.createElement(\"div\")\n    this.#menuElement.id = `more-menu-${ this.uuid }`\n    this.#menuElement.classList.add(\"more-menu\")\n  }\n\n  #createConvertElement(): void\n  {\n    this.#convertElement = document.createElement(\"button\")\n    this.#convertElement.id = `convert-${ this.uuid }`\n    this.#convertElement.classList.add(\"options-label-button\")\n    this.#convertElement.innerHTML = \"Convert\"\n  }\n\n  #createCopyElement(): void\n  {\n    this.#copyElement = document.createElement(\"button\")\n    this.#copyElement.id = `copy-${ this.uuid }`\n    this.#copyElement.classList.add(\"options-label-button\")\n    this.#copyElement.innerHTML = \"Copy\"\n  }\n\n  #createDeleteElement(): void\n  {\n    this.#deleteElement = document.createElement(\"button\")\n    this.#deleteElement.id = `delete-${ this.uuid }`\n    this.#deleteElement.classList.add(\"options-label-button\")\n    this.#deleteElement.innerHTML = \"Delete\"\n  }\n\n  init(domElement: HTMLElement, margin: TMarginConfiguration, renderingConfiguration: TRenderingConfiguration): void\n  {\n    this.#logger.info(\"init\", { domElement, margin, renderingConfiguration })\n    domElement.appendChild(this.#smartGuideElement)\n    this.#smartGuideElement.appendChild(this.#wrapperElement)\n\n    this.#wrapperElement.appendChild(this.#tagElement)\n\n    this.#prompterContainerElement.appendChild(this.#prompterTextElement)\n    this.#wrapperElement.appendChild(this.#prompterContainerElement)\n\n    this.#wrapperElement.appendChild(this.#ellipsisElement)\n\n    this.#menuElement.appendChild(this.#convertElement)\n    this.#menuElement.appendChild(this.#copyElement)\n    this.#menuElement.appendChild(this.#deleteElement)\n    this.#menuElement.classList.add(\"close\")\n    this.#wrapperElement.appendChild(this.#menuElement)\n    this.#isMenuOpen = false\n\n    this.#candidatesElement.style.display = \"none\"\n    this.#wrapperElement.appendChild(this.#candidatesElement)\n    this.margin = margin\n    this.renderingConfiguration = renderingConfiguration\n    this.#addListeners()\n\n    this.resize()\n  }\n\n  #showCandidates = (target: HTMLElement) =>\n  {\n    this.#logger.info(\"showCandidates\", { target })\n    const wordId = parseInt(target.id.replace(\"word-\", \"\").replace(this.uuid, \"\"))\n    const words = this.jiix?.words as TJIIXWord[]\n    this.wordToChange = words[wordId]\n    if (this.wordToChange) {\n      this.wordToChange.id = wordId.toString()\n      this.#candidatesElement.innerHTML = \"\"\n      if (this.wordToChange?.candidates) {\n        this.#candidatesElement.style.display = \"flex\"\n        this.wordToChange.candidates.forEach((word, index) =>\n        {\n          if (this.wordToChange?.label === word) {\n            this.#candidatesElement.innerHTML += `<span id=\"cdt-${ index }${ this.uuid }\" class=\"selected-word\">${ word }</span>`\n          } else {\n            this.#candidatesElement.innerHTML += `<span id=\"cdt-${ index }${ this.uuid }\">${ word }</span>`\n          }\n        })\n\n        target.appendChild(this.#candidatesElement)\n      }\n    }\n  }\n  #hideCandidates(): void\n  {\n    this.#candidatesElement.style.display = \"none\"\n  }\n\n  #openMenu(): void\n  {\n    this.#menuElement.classList.add(\"open\")\n    this.#menuElement.classList.remove(\"close\")\n    this.#isMenuOpen = true\n  }\n  #closeMenu(): void\n  {\n    this.#menuElement.classList.add(\"close\")\n    this.#menuElement.classList.remove(\"open\")\n    this.#isMenuOpen = false\n  }\n\n  #onClickEllipsis = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickEllipsis\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.#isMenuOpen ? this.#closeMenu() : this.#openMenu()\n    this.#hideCandidates()\n  }\n\n  #onClickConvert = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickConvert\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.internalEvent.emitConvert()\n    this.#closeMenu()\n  }\n\n  #createTextAreaElement(value: string): HTMLTextAreaElement\n  {\n    const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\"\n    const textArea = document.createElement(\"textarea\")\n    textArea.style.fontSize = \"12pt\"\n    textArea.style.display = \"absolute\"\n    textArea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\"\n    const yPosition = window.pageYOffset || document.documentElement.scrollTop\n    textArea.style.top = `${ yPosition }px`\n    textArea.setAttribute(\"readonly\", \"\")\n    textArea.value = value\n    return textArea\n  }\n\n  #selectText(textArea: HTMLTextAreaElement)\n  {\n    if (navigator.userAgent.match(/ipad|iphone/i)) {\n      const range = document.createRange()\n      range.selectNodeContents(textArea)\n      const selection = window.getSelection()\n      if (selection) {\n        selection.removeAllRanges()\n        selection.addRange(range)\n        textArea.setSelectionRange(0, 999999)\n      }\n    } else {\n      textArea.select()\n    }\n  }\n\n  #onClickCopy = async (evt: Event): Promise<void> =>\n  {\n    this.#logger.info(\"onClickCopy\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    try {\n      this.#closeMenu()\n      let message = \"Nothing to copy\"\n      if (this.#prompterTextElement.innerText) {\n        message = `\"${ this.#prompterTextElement.innerText }\" copied to clipboard`\n        const fakeEl = this.#createTextAreaElement(this.#prompterTextElement.innerText)\n        this.#prompterContainerElement.appendChild(fakeEl)\n        this.#selectText(fakeEl)\n        document.execCommand(\"copy\")\n        fakeEl.remove()\n      }\n      this.internalEvent.emitNotif({ message, timeout: 1500 })\n    } catch (error) {\n      this.#logger.error(\"onClickCopy\", error)\n      this.internalEvent.emitError(error as Error)\n    }\n  }\n\n  #onClickDelete = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickDelete\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.internalEvent.emitClear()\n    this.#closeMenu()\n  }\n\n  #onClickCandidate = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickCandidate\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    const target = evt.target as HTMLElement\n    const candidate = target.innerText\n    if (this.jiix?.words && candidate !== this.wordToChange?.label && this.wordToChange?.candidates?.includes(candidate)) {\n      this.jiix.words[parseInt(this.wordToChange?.id as string)].label = candidate\n      this.internalEvent.emitImportJIIX(this.jiix)\n    }\n    this.#candidatesElement.style.display = \"none\"\n  }\n\n  #onClickPrompter = (evt: Event): void =>\n  {\n    this.#logger.info(\"onClickPrompter\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.#closeMenu()\n    const target = evt.target as HTMLElement\n    if (target.id !== this.#prompterTextElement.id) {\n      this.#showCandidates(target)\n    } else {\n      this.#hideCandidates()\n    }\n  }\n\n  #stopPropagation = (evt: Event) =>\n  {\n    evt.preventDefault()\n    evt.stopPropagation()\n  }\n\n  #onClickOutSide = () =>\n  {\n    this.#hideCandidates()\n    this.#closeMenu()\n  }\n\n  #addListeners(): void\n  {\n    this.#smartGuideElement.addEventListener(\"pointerdown\", this.#stopPropagation.bind(this))\n    this.#ellipsisElement.addEventListener(\"pointerdown\", this.#onClickEllipsis.bind(this))\n    this.#convertElement.addEventListener(\"pointerdown\", this.#onClickConvert.bind(this))\n    this.#copyElement.addEventListener(\"pointerdown\", this.#onClickCopy.bind(this))\n    this.#deleteElement.addEventListener(\"pointerdown\", this.#onClickDelete.bind(this))\n    this.#prompterTextElement.addEventListener(\"pointerdown\", this.#onClickPrompter.bind(this))\n    this.#candidatesElement.addEventListener(\"pointerdown\", this.#onClickCandidate.bind(this))\n    document.addEventListener(\"pointerdown\", this.#onClickOutSide.bind(this))\n  }\n\n  #removeListeners(): void\n  {\n    this.#smartGuideElement.addEventListener(\"pointerdown\", this.#stopPropagation)\n    this.#ellipsisElement.removeEventListener(\"pointerdown\", this.#onClickEllipsis)\n    this.#convertElement.removeEventListener(\"pointerdown\", this.#onClickConvert)\n    this.#copyElement.removeEventListener(\"pointerdown\", this.#onClickCopy)\n    this.#deleteElement.removeEventListener(\"pointerdown\", this.#onClickDelete)\n    this.#prompterTextElement.removeEventListener(\"pointerdown\", this.#onClickPrompter)\n    this.#candidatesElement.removeEventListener(\"pointerdown\", this.#onClickCandidate)\n    document.removeEventListener(\"pointerdown\", this.#onClickOutSide)\n  }\n\n  resize(): void\n  {\n    this.#logger.info(\"resize\")\n    const marginLeft = convertMillimeterToPixel(this.margin.left)\n    const marginRight = convertMillimeterToPixel(this.margin.right)\n    this.#wrapperElement.style.marginLeft = `${ marginLeft }px`\n    this.#wrapperElement.style.marginRight = `${ marginRight }px`\n  }\n\n  update(exports: TJIIXExport): void\n  {\n    this.#logger.info(\"update\", { exports })\n    this.jiix = exports\n    const createWordSpan = (index: number, word?: TJIIXWord) =>\n    {\n      const span = document.createElement(\"span\")\n      span.id = `word-${ index }${ this.uuid }`\n      if (word) {\n        span.textContent = word.label\n      } else {\n        span.innerHTML = \"&nbsp;\"\n      }\n      this.#logger.debug(\"update\", { span })\n      return span\n    }\n\n    const populatePrompter = () =>\n    {\n      this.#logger.info(\"populatePrompter\")\n      this.#prompterTextElement.innerHTML = \"\"\n      if (this.jiix?.words) {\n        const words = this.jiix.words as TJIIXWord[]\n        const myFragment = document.createDocumentFragment()\n        words.forEach((word, index) =>\n        {\n          if (word.label === \" \" || word.label.includes(\"\\n\")) {\n            myFragment.appendChild(createWordSpan(index))\n          } else if (index !== words.length - 1) {\n            myFragment.appendChild(createWordSpan(index, word))\n          } else {\n            this.#prompterTextElement.appendChild(myFragment)\n            if (this.lastWord) {\n              this.lastWord = word\n            }\n            const span = createWordSpan(index, word)\n            // This is used to scroll to last word if last word is modified\n\n            if ((this.lastWord?.candidates !== word.candidates) && (this.lastWord?.label !== word.label)) {\n              this.lastWord = word\n            }\n            if (this.wordToChange?.id === index.toString()) {\n              span.classList.add(\"modified-word\")\n              this.wordToChange = undefined\n            }\n            else {\n              span.classList.add(\"added-word\")\n            }\n            this.#prompterTextElement.appendChild(span)\n            this.#prompterContainerElement.scrollLeft = span.offsetLeft\n            this.#logger.debug(\"update => populatePrompter\", { span, lastWord: this.lastWord })\n          }\n        })\n      }\n    }\n    populatePrompter()\n    if (this.jiix?.words?.length) {\n      this.#ellipsisElement.style.setProperty(\"pointer-events\", \"auto\")\n    }\n    else {\n      this.#ellipsisElement.style.setProperty(\"pointer-events\", \"none\")\n    }\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.#prompterTextElement.innerHTML = \"\"\n    this.#candidatesElement.innerHTML = \"\"\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    this.#removeListeners()\n    this.#smartGuideElement.remove()\n  }\n}\n","import style from \"./iink.css\"\nimport { IBehaviors, RestBehaviors, TBehaviorOptions, WSBehaviors } from \"./behaviors\"\nimport { SmartGuide } from \"./smartguide\"\nimport { DeferredPromise, PartialDeep, mergeDeep } from \"./utils\"\nimport { LoggerManager } from \"./logger\"\nimport { ExportType, Intention, LoggerClass } from \"./Constants\"\nimport { DefaultLoggerConfiguration, TConfiguration, TConverstionState, TLoggerConfiguration, TMarginConfiguration } from \"./configuration\"\nimport { IModel, TExport, TJIIXExport } from \"./model\"\nimport { TStroke } from \"./primitive\"\nimport { InternalEvent, PublicEvent } from \"./event\"\nimport { TUndoRedoContext } from \"./undo-redo\"\nimport { IGrabber } from \"./grabber\"\nimport { TPenStyle, TTheme } from \"./style\"\n\n/**\n * @group Editor\n */\nexport type HTMLEditorElement = HTMLElement &\n{\n  editor: Editor\n}\n\n/**\n * @group Editor\n */\nexport class Editor\n{\n  logger = LoggerManager.getLogger(LoggerClass.EDITOR)\n  wrapperHTML: HTMLEditorElement\n  #loaderHTML: HTMLDivElement\n  #messageHTML: HTMLDivElement\n  #behaviors!: IBehaviors\n  #smartGuide?: SmartGuide\n  #initializationDeferred: DeferredPromise<void>\n\n  #loggerConfiguration!: TLoggerConfiguration\n\n  constructor(wrapperHTML: HTMLElement, options: PartialDeep<TBehaviorOptions>, globalClassCss = \"ms-editor\")\n  {\n    this.#initializationDeferred = new DeferredPromise<void>()\n    this.loggerConfiguration = mergeDeep({}, options.logger, DefaultLoggerConfiguration)\n    this.logger.info(\"constructor\", { wrapperHTML, options, globalClassCss })\n\n    this.wrapperHTML = wrapperHTML as HTMLEditorElement\n    this.wrapperHTML.classList.add(globalClassCss)\n    this.wrapperHTML.classList.add(\"draw\")\n    this.events.setElement(this.wrapperHTML)\n\n    const styleElement = document.createElement(\"style\")\n    styleElement.appendChild(document.createTextNode(style as string))\n    this.wrapperHTML.appendChild(styleElement)\n\n    this.#loaderHTML = document.createElement(\"div\")\n    this.#loaderHTML.classList.add(\"loader\")\n    this.#loaderHTML.style.display = \"none\"\n    this.wrapperHTML.appendChild(this.#loaderHTML)\n\n    this.#messageHTML = document.createElement(\"div\")\n    this.#messageHTML.classList.add(\"message\")\n    this.#messageHTML.style.display = \"none\"\n    this.wrapperHTML.appendChild(this.#messageHTML)\n\n    this.#instantiateBehaviors(options)\n  }\n\n  get loggerConfiguration(): TLoggerConfiguration\n  {\n    return this.#loggerConfiguration\n  }\n\n  set loggerConfiguration(loggerConfig: TLoggerConfiguration)\n  {\n    this.#loggerConfiguration = Object.assign({}, DefaultLoggerConfiguration, loggerConfig)\n    LoggerManager.setLoggerLevel(this.#loggerConfiguration)\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return this.#initializationDeferred.promise\n  }\n\n  get model(): IModel\n  {\n    return this.behaviors.model\n  }\n\n  get behaviors(): IBehaviors\n  {\n    return this.#behaviors\n  }\n\n  get configuration(): TConfiguration\n  {\n    return this.behaviors.configuration\n  }\n  set configuration(configuration: TConfiguration)\n  {\n    this.logger.info(\"set configuration\", { configuration })\n    this.#instantiateBehaviors({ configuration })\n    this.initialize()\n  }\n\n  get intention(): Intention\n  {\n    return this.behaviors.intention\n  }\n  set intention(i: Intention)\n  {\n    this.behaviors.intention = i\n    switch (this.behaviors.intention) {\n      case Intention.Erase:\n        this.wrapperHTML.classList.remove(\"draw\")\n        this.wrapperHTML.classList.add(\"erase\")\n        this.wrapperHTML.classList.remove(\"select\")\n        break\n      default:\n        this.wrapperHTML.classList.add(\"draw\")\n        this.wrapperHTML.classList.remove(\"erase\")\n        this.wrapperHTML.classList.remove(\"select\")\n        break\n    }\n    this.logger.debug(\"set intention\", this.wrapperHTML)\n  }\n\n  get events(): PublicEvent\n  {\n    return PublicEvent.getInstance()\n  }\n\n  get internalEvents(): InternalEvent\n  {\n    return InternalEvent.getInstance()\n  }\n\n  get context(): TUndoRedoContext\n  {\n    return this.behaviors.context\n  }\n\n  get grabber(): IGrabber\n  {\n    return this.behaviors.grabber\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.behaviors.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.behaviors.penStyle\n  }\n  set penStyle(ps: PartialDeep<TPenStyle>)\n  {\n    this.logger.info(\"set penStyle\", { ps })\n    this.behaviors.setPenStyle(ps)\n  }\n\n  get theme(): TTheme\n  {\n    return this.behaviors.theme\n  }\n  set theme(theme: PartialDeep<TTheme>)\n  {\n    this.logger.info(\"set theme\", { t: theme })\n    this.behaviors.setTheme(theme)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.behaviors.penStyleClasses\n  }\n  set penStyleClasses(styleClasses: string)\n  {\n    this.logger.info(\"set penStyleClasses\", { psc: styleClasses })\n    this.behaviors.setPenStyleClasses(styleClasses)\n  }\n\n  get gestures(): boolean\n  {\n    return this.configuration.recognition.gesture.enable\n  }\n  set gestures(apply: boolean)\n  {\n    this.configuration.recognition.gesture.enable = apply\n    this.#instantiateBehaviors({ configuration: this.configuration })\n    this.initialize()\n  }\n\n  #instantiateBehaviors(options: PartialDeep<TBehaviorOptions>)\n  {\n    this.logger.info(\"instantiateBehaviors\", { options })\n    if (!options?.configuration) {\n      throw new Error(\"Configuration required\")\n    }\n    this.internalEvents.removeAllListeners()\n    if (this.#behaviors) {\n      this.#behaviors.destroy()\n    }\n    let defaultBehaviors: IBehaviors\n    if (options.configuration.server?.protocol === \"REST\") {\n      defaultBehaviors = new RestBehaviors(options)\n    } else {\n      defaultBehaviors = new WSBehaviors(options)\n    }\n    this.#behaviors = Object.assign(defaultBehaviors, options.behaviors)\n    this.logger.debug(\"instantiateBehaviors\", this.#behaviors)\n  }\n\n  async #initializeBehaviors(): Promise<void>\n  {\n    this.logger.info(\"initializeBehaviors\", \"start\")\n    this.#initializationDeferred = new DeferredPromise<void>()\n    this.#loaderHTML.style.display = \"initial\"\n    this.#cleanMessage()\n    return this.behaviors.init(this.wrapperHTML)\n      .then(async () =>\n      {\n        this.logger.info(\"initializeBehaviors\", \"then\")\n        this.wrapperHTML.editor = this\n        this.#initializationDeferred.resolve()\n        this.events.emitLoaded()\n      })\n      .catch((error: Error) =>\n      {\n        this.logger.error(\"initializeBehaviors\", error)\n        this.#initializationDeferred.reject(error)\n        this.#showError(error)\n      })\n      .finally(() =>\n      {\n        this.logger.debug(\"initializeBehaviors\", \"finally\")\n        this.#loaderHTML.style.display = \"none\"\n        return this.#initializationDeferred.promise\n      })\n  }\n\n  #initializeSmartGuide(): void\n  {\n    this.#smartGuide?.destroy()\n    this.logger.info(\"initializeSmartGuide\", { smartGuide: this.configuration.rendering.smartGuide })\n    if (this.configuration.rendering.smartGuide.enable) {\n      this.#smartGuide = new SmartGuide()\n      let margin: TMarginConfiguration\n      switch (this.configuration.recognition.type) {\n        case \"TEXT\":\n          margin = this.configuration.recognition.text.margin\n          break\n        case \"MATH\":\n          margin = this.configuration.recognition.math.margin\n          break\n        default:\n          margin = {\n            top: 20,\n            left: 10,\n            right: 10,\n            bottom: 10\n          }\n          break\n      }\n      this.#smartGuide.init(this.wrapperHTML, margin, this.configuration.rendering)\n    }\n  }\n\n  #cleanMessage()\n  {\n    this.#messageHTML.style.display = \"none\"\n    this.#messageHTML.innerHTML = \"\"\n  }\n\n  #showError(err: Error | string)\n  {\n    this.#messageHTML.style.display = \"initial\"\n    this.#messageHTML.classList.add(\"error-msg\")\n    this.#messageHTML.classList.remove(\"info-msg\")\n    this.#messageHTML.innerText = typeof err === \"string\" ? err : err.message\n  }\n\n  #showNotif(notif: { message: string, timeout?: number })\n  {\n    this.#messageHTML.style.display = \"initial\"\n    this.#messageHTML.classList.add(\"info-msg\")\n    this.#messageHTML.classList.remove(\"error-msg\")\n    this.#messageHTML.innerText = notif.message\n    setTimeout(() =>\n    {\n      this.#cleanMessage()\n    }, notif.timeout || 2500)\n  }\n\n  #addListeners(): void\n  {\n    this.internalEvents.addConvertListener(this.convert.bind(this))\n    this.internalEvents.addClearListener(this.clear.bind(this))\n    this.internalEvents.addErrorListener(this.#showError.bind(this))\n    this.internalEvents.addImportJIIXListener(this.#onImportJIIX.bind(this))\n    this.internalEvents.addExportedListener(this.#onExport.bind(this))\n    this.internalEvents.addNotifListener(this.#showNotif.bind(this))\n    this.internalEvents.addClearMessageListener(this.#cleanMessage.bind(this))\n    this.internalEvents.addContextChangeListener(this.#onContextChange.bind(this))\n    this.internalEvents.addIdleListener(this.#onIdleChange.bind(this))\n  }\n\n  #onContextChange = (context: TUndoRedoContext) =>\n  {\n    this.events.emitChanged(context)\n  }\n\n  #onIdleChange = (idle: boolean) =>\n  {\n    this.events.emitIdle(idle)\n  }\n\n  #onExport(exports: TExport): void\n  {\n    this.logger.info(\"onExport\", { exports })\n    if (this.configuration.rendering.smartGuide.enable) {\n      if (exports && exports[\"application/vnd.myscript.jiix\"]) {\n        const jjix = exports[\"application/vnd.myscript.jiix\"] as TJIIXExport\n        this.#smartGuide?.update(jjix)\n      }\n    }\n    this.events.emitExported(exports)\n  }\n\n  #onImportJIIX(jiix: TJIIXExport): void\n  {\n    this.logger.info(\"onImportJIIX\", { jiix })\n    this.import(new Blob([JSON.stringify(jiix)], { type: ExportType.JIIX }), ExportType.JIIX)\n  }\n\n  async initialize(): Promise<void>\n  {\n    this.logger.info(\"initialize\")\n    await this.#initializeBehaviors()\n    this.#initializeSmartGuide()\n    this.#addListeners()\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    if (this.behaviors.waitForIdle) {\n      return this.behaviors.waitForIdle()\n    }\n    return\n  }\n\n  async undo(): Promise<IModel>\n  {\n    this.logger.info(\"undo\")\n    await this.#initializationDeferred.promise\n    await this.behaviors.undo()\n    this.logger.debug(\"undo\", this.model)\n    return this.model\n  }\n\n  async redo(): Promise<IModel>\n  {\n    this.logger.info(\"redo\")\n    await this.#initializationDeferred.promise\n    await this.behaviors.redo()\n    this.logger.debug(\"redo\", this.model)\n    return this.model\n  }\n\n  async clear(): Promise<IModel>\n  {\n    this.logger.info(\"clear\")\n    await this.#initializationDeferred.promise\n    await this.behaviors.clear()\n    this.events.emitCleared(this.model)\n    this.logger.debug(\"clear\", this.model)\n    return this.model\n  }\n\n  async resize(): Promise<IModel>\n  {\n    this.logger.info(\"resize\")\n    await this.#initializationDeferred.promise\n    if (this.configuration.rendering.smartGuide.enable) {\n      this.#smartGuide?.resize()\n    }\n    const compStyles = window.getComputedStyle(this.wrapperHTML)\n    const height = Math.max(parseInt(compStyles.height.replace(\"px\",\"\")), this.configuration.rendering.minHeight)\n    const width = Math.max(parseInt(compStyles.width.replace(\"px\",\"\")), this.configuration.rendering.minWidth)\n    await this.behaviors.resize(height, width)\n    this.logger.debug(\"resize\", this.model)\n    return this.model\n  }\n\n  async export(mimeTypes?: string[]): Promise<IModel>\n  {\n    this.logger.info(\"export\", { mimeTypes })\n    await this.#initializationDeferred.promise\n    await this.behaviors.export(mimeTypes)\n    this.logger.debug(\"export\", this.model)\n    return this.model\n  }\n\n  async convert(params?: { conversionState?: TConverstionState, mimeTypes?: string[] }): Promise<IModel | never>\n  {\n    this.logger.info(\"export\", { params })\n    await this.#initializationDeferred.promise\n    await this.behaviors.convert(params?.conversionState, params?.mimeTypes)\n    this.events.emitConverted(this.model.converts as TExport)\n    this.logger.debug(\"convert\", this.model)\n    return this.model\n  }\n\n  async import(data: Blob | string | TJIIXExport, mimeType?: string): Promise<IModel | never>\n  {\n    this.logger.info(\"import\", { data, mimeType })\n    await this.#initializationDeferred.promise\n    if (this.behaviors.import) {\n      let blobToImport: Blob\n      if (data instanceof Blob) {\n        blobToImport = data\n      }\n      else if (typeof data === \"string\") {\n        blobToImport = new Blob([data])\n      }\n      else {\n        blobToImport = new Blob([JSON.stringify(data)])\n      }\n      await this.behaviors.import(blobToImport, mimeType)\n      this.events.emitImported(this.model.exports as TExport)\n      this.logger.debug(\"import\", this.model)\n      return this.model\n    }\n    return Promise.reject(\"Import impossible, behaviors has no import function\")\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<IModel>\n  {\n    this.logger.info(\"importPointEvents\", { strokes })\n    await this.#initializationDeferred.promise\n    await this.behaviors.importPointEvents(strokes)\n    this.events.emitImported(this.model.exports as TExport)\n    this.logger.debug(\"importPointEvents\", this.model)\n    return this.model\n    return Promise.reject(\"Import impossible, behaviors has no importPointEvents function\")\n  }\n}\n"],"names":["Logger","constructor","instanceName","level","this","debug","functionName","data","dataLog","from","message","console","info","warn","error","LoggerManager","getLogger","name","__classPrivateFieldGet","_a","_LoggerManager_loggerMap","has","set","get","setLoggerLevel","config","Object","keys","forEach","lc","value","Map","DeferredPromise","isFullFilled","isPending","promise","Promise","resolve","reject","v","__awaiter","computeDistance","p1","p2","distance","Math","hypot","y","x","isNaN","computeAngleAxeRadian","begin","end","atan2","createPointsOnSegment","spaceBetweenPoint","points","globalDistance","spaceWithP1","p","push","scalaire","v1","v2","computeNearestPointOnSegment","seg","vectP1P","vectP1P2","scalaireP1P_P1P2","scalaireP1P2_P1P2","t","min","max","computeDistanceBetweenPointAndSegment","isVersionSuperiorOrEqual","source","target","sourceParts","split","targetParts","i","length","a","Number","b","computeHmac","applicationKey","hmacKey","enc","TextEncoder","messageEncoded","encode","keyEncoded","key","crypto","subtle","importKey","hash","signature","sign","buffer","Uint8Array","Array","prototype","map","call","toString","padStart","join","convertMillimeterToPixel","mm","convertPixelToMillimeter","px","createUUID","dt","Date","now","replace","c","r","random","floor","isBetween","val","mergeDeep","sources","isObject","item","isArray","shift","assign","concat","getAvailableFontList","configuration","server","scheme","_b","host","_c","recognition","lang","serverConfig","response","fetch","result","json","sort","getAvailableLanguageList","computeLinksPointers","point","angle","width","radius","sin","cos","computeMiddlePointer","point1","point2","DefaultListenerConfiguration","capture","passive","DefaultGrabberConfiguration","listenerOptions","xyFloatPrecision","timestampFloatPrecision","DefaultEraserConfiguration","DefaultDiagramConvertConfiguration","DefaultDiagramConfiguration","convert","eraser","mimeTypes","DefaultJiixConfiguration","strokes","text","chars","words","DefaultExportConfiguration","jiix","DefaultMarginConfiguration","top","left","right","bottom","DefaultSolverConfiguration","enable","DefaultMathUndoRedoConfiguration","mode","DefaultMathConfiguration","solver","margin","DefaultRawContentRecognitionConfiguration","shape","DefaultRawContentConfiguration","DefaultDebugConfiguration","DefaultRecognitionRendererConfiguration","DefaultTextGuidesConfiguration","DefaultTextConfiguration","guides","DefaultConvertionConfiguration","force","DefaultRecognitionConfiguration","diagram","export","math","renderer","type","alwaysConnected","gesture","DefaultGuidesConfiguration","gap","DefaultSmartGuidesConfiguration","DefaultRenderingConfiguration","smartGuide","minHeight","minWidth","DefaultServerConfiguration","protocol","version","useWindowLocation","websocket","pingEnabled","pingDelay","maxPingLostCount","autoReconnect","maxRetryCount","fileChunkSize","DefaultTriggerConfiguration","exportContent","exportContentDelay","resizeTriggerDelay","DefaultUndoRedoConfiguration","maxStackSize","DefaultConfiguration","grabber","rendering","triggers","Configuration","_Configuration_logger","JSON","parse","stringify","overrideDefaultConfiguration","defaultConf","_d","_f","_e","_g","window","location","indexOf","includes","DefaultLoggerConfiguration","EDITOR","BEHAVIORS","RECOGNIZER","GRABBER","RENDERER","CONFIGURATION","PUBLIC_EVENT","INTERNAL_EVENT","MODEL","STROKE","SMARTGUIDE","STYLE","UNDO_REDO","Error","NO_ACTIVITY","WRONG_CREDENTIALS","TOO_OLD","UNKNOW","ABNORMAL_CLOSURE","CANT_ESTABLISH","GOING_AWAY","PROTOCOL_ERROR","UNSUPPORTED_DATA","INVALID_FRAME_PAULOAD","POLICY_VIOLATION","MESSAGE_TOO_BIG","INTERNAL_ERROR","SERVICE_RESTART","TRY_AGAIN","BAD_GATEWAY","TLS_HANDSHAKE","EventType","CHANGED","CLEARED","CONVERTED","ERROR","POINTEREVENTS","EXPORTED","IMPORTED","IDLE","LOADED","InternalEventType","SVG_PATCH","CLEAR_MESSAGE","NOTIF","IMPORT_JIIX","CONVERT","CLEAR","CONTEXT_CHANGE","WS_CLOSED","ExportType","Intention","LoggerLevel","LoggerClass","InternalEvent","EventTarget","super","_InternalEvent_abortController","_InternalEvent_logger","__classPrivateFieldSet","AbortController","getInstance","_InternalEvent_instance","removeAllListeners","abort","emitSVGPatch","patchChange","_InternalEvent_instances","_InternalEvent_emit","addSVGPatchListener","callback","addEventListener","evt","detail","signal","emitExported","exports","addExportedListener","emitClearMessage","addClearMessageListener","emitError","err","addErrorListener","emitWSClosed","addWSClosedListener","emitNotif","notif","addNotifListener","emitImportJIIX","addImportJIIXListener","emitConvert","conversionState","addConvertListener","emitClear","addClearListener","emitContextChange","context","addContextChangeListener","emitIdle","idle","addIdleListener","WeakMap","WeakSet","dispatchEvent","CustomEvent","bubbles","composed","undefined","PublicEvent","_PublicEvent_element","_PublicEvent_logger","_PublicEvent_instance","setElement","el","emitLoaded","_PublicEvent_instances","_PublicEvent_emit","emitChanged","undoRedoContext","canClear","empty","emitCleared","model","emitConverted","emitImported","PointerEventGrabber","prevent","e","preventDefault","_PointerEventGrabber_logger","pointerDownHandler","button","buttons","activePointerId","pointerId","onPointerDown","extractPoint","pointerMoveHandler","classList","contains","pointerUpHandler","onPointerMove","stopPropagation","onPointerUp","pointerOutHandler","domElement","roundFloat","oneFloat","requestedFloatPrecision","floatPrecision","pow","round","event","clientX","clientY","changedTouches","rect","getBoundingClientRect","pointer","clientLeft","scrollLeft","clientTop","scrollTop","pressure","attach","detach","document","documentElement","removeEventListener","DefaultPenStyle","DefaultTheme","ink","color","module","o","n","l","m","d","defineProperty","configurable","enumerable","__esModule","default","hasOwnProperty","s","TypeError","Symbol","iterator","toJSON","u","trim","substring","_trimSemiColon","toCSS","slice","parser","JsonCSS","StyleHelper","themeToCSS","themeToJSON","style","theme","penStyleToCSS","penStyle","css","penStyleToJSON","penStyleString","stringToJSON","JSONToString","entries","k","SymbolType","StyleManager","_StyleManager_penStyle","_StyleManager_theme","_StyleManager_penStyleClasses","_StyleManager_currentPenStyle","_StyleManager_logger","setTheme","setPenStyleClasses","setPenStyle","currentPenStyle","structuredClone","penStyleClasses","penStyleClass","AbstractSymbol","creationTime","id","modificationDate","Stroke","pointerType","_Stroke_logger","pointers","getClone","clone","formatToSend","convertPartialStrokesToStrokes","errors","j","ji","flag","stroke","pp","pIndex","Model","height","rowHeight","creationDate","_Model_logger","symbols","positions","lastSentPosition","lastReceivedPosition","computePressure","ratio","sqrt","filterPointByAcquisitionDelta","lastPointer","delta","abs","getStrokeFromPoint","_strokeList","strokePointer","addPoint","at","addStroke","converts","updateStroke","updatedStroke","strokeIndex","findIndex","splice","removeStroke","removeStrokesFromPoint","strokeToRemove","extractUnsentStrokes","initCurrentStroke","dpi","pxWidth","currentSymbol","appendToCurrentStroke","endCurrentStroke","updatePositionSent","position","updatePositionReceived","mergeExport","mergeConvert","clonedModel","clear","RestRecognizer","recognitionConfig","_RestRecognizer_logger","serverConfiguration","recognitionConfiguration","url","postConfig","buildData","strokeGroupByPenStyle","groupIndex","sg","isPenStyleEqual","ps1","ps2","strokeGroupsToSend","group","newGroup","contentType","charAt","toUpperCase","toLowerCase","xDPI","yDPI","strokeGroups","post","mimeType","headers","Headers","append","hmac","reqInit","method","body","request","Request","ok","blob","catch","tryFetch","then","res","ErrorConst","code","getMimeTypes","requestedMimeTypes","myModel","dataToConcert","promises","mt","all","String","mimeTypesRequiringExport","filter","resize","WSRecognizer","_WSRecognizer_logger","pingCount","reconnectionCount","toLocaleLowerCase","internalEvent","infinitePing","socket","close","readyState","setTimeout","send","openCallback","connected","params","sessionId","iinkSessionId","xDpi","yDpi","viewSizeHeight","viewSizeWidth","rejectDeferredPending","initialized","addStrokeDeferred","exportDeferred","_h","convertDeferred","_j","_k","importDeferred","_l","_m","resizeDeferred","_o","_p","undoDeferred","_q","_r","redoDeferred","_s","_t","clearDeferred","_u","waitForIdleDeferred","_v","closeCallback","currentErrorCode","reason","manageAckMessage","websocketMessage","hmacChallengeMessage","hmacChallenge","ackDeferred","manageContentPackageDescriptionMessage","currentPartId","managePartChangeMessage","partChangeMessage","partId","manageExportMessage","exportMessage","importPointEventsDeferred","manageWaitForIdle","manageErrorMessage","manageContentChangeMessage","contentChangeMessage","canRedo","canUndo","stackIndex","undoStackIndex","possibleUndoCount","stack","manageSVGPatchMessage","svgPatchMessage","messageCallback","init","destroy","WebSocket","bind","OPEN","CONNECTING","addStrokes","styleClasses","localModel","import","chunkSize","importFileId","readBlob","fileReader","FileReader","onloadend","ev","onerror","readAsText","importFileMessage","size","blobPart","fileChuckMessage","lastChunk","importPointEvents","events","exportPoints","myExportConverted","waitForIdle","undo","undoExports","redo","redoExports","clearExports","CanvasRendererShape","_CanvasRendererShape_logger","table","ellipse","line","phi","returnedAngle","PI","drawEllipseArc","context2D","shapeEllipse","centerPoint","maxRadius","minRadius","orientation","startAngle","sweepAngle","z1","z2","z3","z4","boundariesPoints","save","beginPath","alpha","cosAlpha","sinAlpha","moveTo","lineTo","restore","drawLine","drawArrowHead","headPoint","beta","fillStyle","strokeStyle","fill","drawShapeEllipse","beginDecoration","beginTangentAngle","endDecoration","endTangentAngle","drawShapeLine","shapeLine","firstPoint","lastPoint","draw","symbol","lineWidth","lines","CanvasRendererStroke","_CanvasRendererStroke_logger","renderArc","context2d","center","arc","renderLine","linkPoints1","linkPoints2","renderFinal","linkPoints","newAngle","renderQuadratic","ctrl","linkPoints3","quadraticCurveTo","NUMBER_POINTS","NUMBER_QUADRATICS","secondPoint","beginLine","endLine","beginFinal","endFinal","closePath","CanvasRendererText","_CanvasRendererText_logger","char","string","textLine","drawUnderline","textUnderline","underline","label","topLeftPoint","firstCharacter","lastCharacter","drawText","font","textHeight","textAlign","justificationType","textBaseline","fillText","drawTextLine","underlineList","CanvasRenderer","_CanvasRenderer_logger","strokeRenderer","shapeRenderer","textRenderer","createCanvas","canvas","createElement","add","resizeContent","pixelRatio","devicePixelRatio","renderingCanvas","capturingCanvas","parentNode","clientWidth","clientHeight","getContext","scale","drawSymbol","element","appendChild","parent","renderingCanvasContext","capturingCanvasContext","drawModel","clearRect","drawPendingStroke","innerHTML","SVGStroker","getArcPath","getLinePath","getFinalPath","parts","getQuadraticPath","central","buildSVGPath","STROKE_LENGTH","STROKE_WIDTH","NB_QUADRATICS","beforeLastPoint","drawStroke","svgElement","attrs","svgPathElement","createElementNS","setAttribute","svgPath","WSSVGRenderer","_WSSVGRenderer_logger","stroker","fontSize","replaceAll","layerName","update","oldLayer","querySelector","remove","insertAdjacentHTML","svg","layer","pendingStrokesGroup","replaceElement","elementToRemove","parentSelector","parentId","removeChild","index","removeElement","insertBefore","refId","selector","removeAttribute","updateLayer","updatesLayer","updates","clearPendingStroke","pendingStrokeGroup","oldStroke","clearErasingStrokes","querySelectorAll","erasingStroke","svgList","UndoRedoContext","UndoRedoManager","_UndoRedoManager_logger","updateCanUndoRedo","currentModel","addModelToStack","removeLastModelInStack","pop","updateModelInStack","previousModel","nextModel","reset","RestBehaviors","options","_RestBehaviors_logger","_RestBehaviors_configuration","_RestBehaviors_model","_RestBehaviors_resizeTimer","_RestBehaviors_exportTimer","styleManager","recognizer","intention","undoRedoManager","drawCurrentStroke","_evt","updateModelRendering","deferred","clearTimeout","newModel","deferredResize","resizeModel","WSBehaviors","_WSBehaviors_logger","_WSBehaviors_configuration","_WSBehaviors_model","_WSBehaviors_resizeTimer","penClass","onExport","synchronizeModelWithBackend","onSVGPatch","compStyles","getComputedStyle","parseInt","unsentStrokes","strokesToImport","str","SmartGuide","_SmartGuide_smartGuideElement","_SmartGuide_wrapperElement","_SmartGuide_prompterContainerElement","_SmartGuide_prompterTextElement","_SmartGuide_ellipsisElement","_SmartGuide_tagElement","_SmartGuide_candidatesElement","_SmartGuide_menuElement","_SmartGuide_convertElement","_SmartGuide_copyElement","_SmartGuide_deleteElement","_SmartGuide_isMenuOpen","_SmartGuide_logger","_SmartGuide_showCandidates","wordId","uuid","wordToChange","candidates","display","word","_SmartGuide_onClickEllipsis","_SmartGuide_instances","_SmartGuide_hideCandidates","_SmartGuide_onClickConvert","_SmartGuide_closeMenu","_SmartGuide_onClickCopy","innerText","fakeEl","_SmartGuide_selectText","execCommand","timeout","_SmartGuide_onClickDelete","_SmartGuide_onClickCandidate","candidate","_SmartGuide_onClickPrompter","_SmartGuide_stopPropagation","_SmartGuide_onClickOutSide","_SmartGuide_createRootElement","_SmartGuide_createWrapperElement","_SmartGuide_createPrompterContainerElement","_SmartGuide_createPrompterTextElement","_SmartGuide_createEllipsisElement","_SmartGuide_createTagElement","_SmartGuide_createCandidatesElement","_SmartGuide_createMoreMenuElement","_SmartGuide_createConvertElement","_SmartGuide_createCopyElement","_SmartGuide_createDeleteElement","renderingConfiguration","_SmartGuide_addListeners","marginLeft","marginRight","createWordSpan","span","textContent","myFragment","createDocumentFragment","lastWord","offsetLeft","populatePrompter","setProperty","_SmartGuide_removeListeners","_SmartGuide_openMenu","isRTL","getAttribute","textArea","yPosition","pageYOffset","navigator","userAgent","match","range","createRange","selectNodeContents","selection","getSelection","removeAllRanges","addRange","setSelectionRange","select","Editor","wrapperHTML","globalClassCss","logger","_Editor_loaderHTML","_Editor_messageHTML","_Editor_behaviors","_Editor_smartGuide","_Editor_initializationDeferred","_Editor_loggerConfiguration","_Editor_onContextChange","_Editor_onIdleChange","loggerConfiguration","styleElement","createTextNode","_Editor_instances","_Editor_instantiateBehaviors","loggerConfig","initializationPromise","behaviors","initialize","internalEvents","ps","psc","gestures","apply","_Editor_initializeBehaviors","_Editor_initializeSmartGuide","_Editor_addListeners","blobToImport","Blob","defaultBehaviors","_Editor_cleanMessage","editor","_Editor_showError","finally","_Editor_onImportJIIX","_Editor_onExport","_Editor_showNotif","jjix"],"mappings":"smCAKaA,OAKX,WAAAC,CAAYC,EAA2BC,GAErCC,KAAKF,aAAeA,EACpBE,KAAKD,MAAQA,CACd,CAGD,KAAAE,CAAMC,KAAyBC,GAE7B,GAAI,KAAqBH,KAAKD,MAAO,CACnC,MAAMK,EAAU,CACdC,KAAM,GAAGL,KAAKF,gBAAgBI,IAC9BI,QAASH,GAEXI,QAAQN,MAAMG,EACf,CACF,CAED,IAAAI,CAAKN,KAAyBC,GAE5B,GAAI,KAAoBH,KAAKD,MAAO,CAClC,MAAMK,EAAU,CACdC,KAAM,GAAGL,KAAKF,gBAAgBI,IAC9BI,QAASH,GAEXI,QAAQC,KAAKJ,EACd,CACF,CAED,IAAAK,CAAKP,KAAyBC,GAE5B,GAAI,KAAoBH,KAAKD,MAAO,CAClC,MAAMK,EAAU,CACdC,KAAM,GAAGL,KAAKF,gBAAgBI,IAC9BI,QAASH,GAEXI,QAAQE,KAAKL,EACd,CACF,CAED,KAAAM,CAAMR,KAAyBQ,GAE7B,MAAMN,EAAU,CACdC,KAAM,GAAGL,KAAKF,gBAAgBI,IAC9BQ,SAEFH,QAAQG,MAAMN,EACf,QClDUO,cAIX,gBAAOC,CAAUC,GAKf,OAHKC,uBAAAd,KAAee,EAAA,IAAAC,GAACC,IAAIJ,IACvBC,uBAAAd,KAAIe,EAAA,IAAAC,GAAYE,IAAIL,EAAM,IAAIjB,OAAOiB,EAAI,MAEpCC,uBAAAd,KAAee,EAAA,IAAAC,GAACG,IAAIN,EAC5B,CAED,qBAAOO,CAAeC,GAEpBC,OAAOC,KAAKF,GAAQG,SAASC,IAE3BV,EAAcH,UAAUa,GAAmB1B,MAAQsB,EAAOI,EAAkB,GAE/E,kBAhBMT,EAAA,CAAAU,MAAuC,IAAIC,WCLvCC,gBASX,WAAA/B,GAEEG,KAAK6B,cAAe,EACpB7B,KAAK8B,WAAY,EAEjB9B,KAAK+B,QAAU,IAAIC,SAAQ,CAACC,EAASC,KAEnClC,KAAKkC,OAAgBC,GAAcC,UAAApC,UAAA,OAAA,GAAA,YAIjC,OAFAA,KAAK6B,cAAe,EACpB7B,KAAK8B,WAAY,EACVI,EAAOC,EAChB,IACAnC,KAAKiC,QAAiBE,GAAcC,UAAApC,UAAA,OAAA,GAAA,YAIlC,OAFAA,KAAK6B,cAAe,EACpB7B,KAAK8B,WAAY,EACVG,EAAQE,EACjB,GAAC,GAEJ,EC5Ba,SAAAE,gBAAgBC,EAAYC,GAE1C,MAAMC,EAAWC,KAAKC,MAAMH,EAAGI,EAAIL,EAAGK,EAAGJ,EAAGK,EAAIN,EAAGM,GACnD,OAAOC,MAAML,GAAY,EAAIA,CAC/B,CAKgB,SAAAM,sBAAsBC,EAAeC,GAEnD,OAAOP,KAAKQ,MAAMD,EAAIL,EAAII,EAAMJ,EAAGK,EAAIJ,EAAIG,EAAMH,EACnD,CAKM,SAAUM,sBAAsBZ,EAAYC,EAAYY,EAAoB,GAEhF,MAAMC,EAAmB,GACnBC,EAAiBhB,gBAAgBC,EAAIC,GAC3C,IAAIe,EAAcH,EAClB,KAAOG,EAAcD,GAAgB,CACnC,MAAME,EAAI,CACRX,EAAGN,EAAGM,EAAKU,GAAef,EAAGK,EAAIN,EAAGM,GAAMS,EAC1CV,EAAGL,EAAGK,EAAKW,GAAef,EAAGI,EAAIL,EAAGK,GAAMU,GAE5CD,EAAOI,KAAKD,GACZD,GAAeH,CAChB,CACD,OAAOC,CACT,CAKgB,SAAAK,SAASC,EAAYC,GAEnC,OAAOD,EAAGd,EAAIe,EAAGf,EAAIc,EAAGf,EAAIgB,EAAGhB,CACjC,CAKgB,SAAAiB,6BAA6BL,EAAWM,GAEtD,MAAMC,EAAU,CAAElB,EAAGW,EAAEX,EAAIiB,EAAIvB,GAAGM,EAAGD,EAAGY,EAAEZ,EAAIkB,EAAIvB,GAAGK,GAC/CoB,EAAW,CAAEnB,EAAGiB,EAAItB,GAAGK,EAAIiB,EAAIvB,GAAGM,EAAGD,EAAGkB,EAAItB,GAAGI,EAAIkB,EAAIvB,GAAGK,GAC1DqB,EAAmBP,SAASK,EAASC,GACrCE,EAAoBR,SAASM,EAAUA,GAEvCG,EAAIzB,KAAK0B,IAAI,EAAG1B,KAAK2B,IAAI,EAAGJ,EAAmBC,IACrD,MAAO,CAAErB,EAAGiB,EAAIvB,GAAGM,EAAKmB,EAASnB,EAAIsB,EAAIvB,EAAGkB,EAAIvB,GAAGK,EAAKoB,EAASpB,EAAIuB,EACvE,CAKgB,SAAAG,sCAAsCd,EAAWM,GAE/D,OAAOxB,gBAAgBkB,EAAGK,6BAA6BL,EAAGM,GAC5D,OC9DaS,yBAA2B,CAACC,EAAgBC,KAEvD,MAAMC,EAAcF,EAAOG,MAAM,KAC3BC,EAAcH,EAAOE,MAAM,KAEjC,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAYE,OAAQD,IAAK,CAC3C,MAAME,EAAIC,OAAOJ,EAAYC,IACvBI,EAAID,OAAON,EAAYG,IAC7B,GAAIE,EAAIE,EAAG,OAAO,EAClB,GAAIF,EAAIE,EAAG,OAAO,CACnB,CACD,OAAO,CAAI,WCZSC,YAAY3E,EAAiB4E,EAAwBC,oDAEzE,MAAMC,EAAM,IAAIC,YACVC,EAAiBF,EAAIG,OAAOjF,GAC5BkF,EAAaJ,EAAIG,OAAOL,EAAiBC,GAEzCM,QAAYC,OAAOC,OAAOC,UAC9B,MACAJ,EACA,CACE3E,KAAM,OACNgF,KAAM,CAAEhF,KAAM,aAEhB,EACA,CAAC,SAGGiF,QAAkBJ,OAAOC,OAAOI,KACpC,OACAN,EACAH,GAGIU,EAAS,IAAIC,WAAWH,GAC9B,OAAOI,MAAMC,UAAUC,IAAIC,KAAKL,GAAQpD,GAAKA,EAAE0D,SAAS,IAAIC,SAAS,EAAG,OAAMC,KAAK,MACpF,CCxBK,SAAUC,yBAAyBC,GAEvC,OAAY,GAALA,EAAU,IACnB,CAKM,SAAUC,yBAAyBC,GAEvC,OAAOA,EAAK,GAAK,IACnB,UCXgBC,aAEd,IAAIC,EAAKC,KAAKC,MAOd,MANa,uCAAuCC,QAAQ,SAAS,SAAUC,GAE7E,MAAMC,GAAKL,EAAqB,GAAhBrE,KAAK2E,UAAiB,GAAK,EAE3C,OADAN,EAAKrE,KAAK4E,MAAMP,EAAK,KACR,KAALI,EAAWC,EAAS,EAAJA,EAAU,GAAMb,SAAS,GACnD,GAEF,UCXgBgB,UAAUC,EAAapD,EAAaC,GAElD,OAAOmD,GAAOpD,GAAOoD,GAAOnD,CAC9B,CCDa,MAAAoD,UAAY,CAAChD,KAAgBiD,KAGxC,MAAMC,SAAYC,GAERA,GAAwB,iBAATA,IAAsBzB,MAAM0B,QAAQD,GAE7D,IAAKF,EAAQ5C,OAAQ,OAAOL,EAC5B,MAAMD,EAASkD,EAAQI,QAEvB,GAAIH,SAASlD,IAAWkD,SAASnD,GAC/B,IAAK,MAAMkB,KAAOlB,EACZmD,SAASnD,EAAOkB,KACbjB,EAAOiB,IACVnE,OAAOwG,OAAOtD,EAAQ,CAAEiB,CAACA,GAAM,CAAE,IAEnC+B,UAAUhD,EAAOiB,GAAMlB,EAAOkB,KAEvBS,MAAM0B,QAAQpD,EAAOiB,KAASS,MAAM0B,QAAQrD,EAAOkB,IAC1DjB,EAAOiB,GAAKsC,OAAOxD,EAAOkB,IAG1BnE,OAAOwG,OAAOtD,EAAQ,CAAEiB,CAACA,GAAMlB,EAAOkB,UAInCS,MAAM0B,QAAQpD,IAAW0B,MAAM0B,QAAQrD,GAC9CC,EAASA,EAAOuD,OAAOxD,GAEhBA,IACPC,EAASD,GAGX,OAAOiD,UAAUhD,KAAWiD,EAAQ,EChChC,SAAgBO,qBAAqBC,8DAEzC,KAA4B,QAAvBlH,EAAAkH,aAAA,EAAAA,EAAeC,cAAQ,IAAAnH,OAAA,EAAAA,EAAAoH,WAAkC,QAAvBC,EAAAH,aAAA,EAAAA,EAAeC,cAAQ,IAAAE,OAAA,EAAAA,EAAAC,MAC5D,OAAOrG,QAAQE,OAAO,8FAExB,KAA+B,QAA1BoG,EAAAL,aAAa,EAAbA,EAAeM,mBAAW,IAAAD,OAAA,EAAAA,EAAEE,MAC/B,OAAOxG,QAAQE,OAAO,oEAExB,MAAMuG,EAAeR,EAAcC,OAC7BQ,QAAiBC,MAAM,GAAIF,EAAaN,YAAcM,EAAaJ,2CAA8CJ,EAAcM,YAAYC,OAC3II,OAAEA,SAAiBF,EAASG,OAClC,OAAOD,EAAOE,SACf,CCZK,SAAgBC,yBAAyBd,4DAE7C,IAAyB,QAArBlH,EAAAkH,eAAAA,EAAeC,cAAM,IAAAnH,OAAA,EAAAA,EAAEoH,UAAiC,UAAvBF,aAAa,EAAbA,EAAeC,cAAQ,IAAAE,OAAA,EAAAA,EAAAC,MAAM,CAChE,MAAMI,EAAeR,EAAcC,OAEnC,aADuBS,MAAM,GAAIF,EAAaN,YAAcM,EAAaJ,6CACzDQ,MACjB,CACC,OAAO7G,QAAQE,OAAO,oGAEzB,UCVe8G,qBAAqBC,EAAiBC,EAAeC,GAEnE,MAAMC,EAASH,EAAM1F,EAAI4F,EACzB,MAAO,CACL,CACEvG,EAAIqG,EAAMrG,EAAKH,KAAK4G,IAAIH,GAASE,EACjCzG,EAAIsG,EAAMtG,EAAKF,KAAK6G,IAAIJ,GAASE,GAEnC,CACExG,EAAIqG,EAAMrG,EAAKH,KAAK4G,IAAIH,GAASE,EACjCzG,EAAIsG,EAAMtG,EAAKF,KAAK6G,IAAIJ,GAASE,GAGvC,CAKgB,SAAAG,qBAAqBC,EAAkBC,GAErD,MAAO,CACL7G,GAAK6G,EAAO7G,EAAI4G,EAAO5G,GAAK,EAC5BD,GAAK8G,EAAO9G,EAAI6G,EAAO7G,GAAK,EAC5BY,GAAKkG,EAAOlG,EAAIiG,EAAOjG,GAAK,EAC5BW,GAAKuF,EAAOvF,EAAIsF,EAAOtF,GAAK,EAEhC,CCnBa,MAAAwF,EAAuD,CAClEC,SAAS,EACTC,SAAS,GAgBEC,EAAqD,CAChEC,gBAAiBJ,EACjBK,iBAAkB,EAClBC,wBAAyB,GCtBdC,EAAmD,CAC9D,mBAAmB,GCiBRC,EAAmE,CAC9E,mBAAmB,GAMRC,EAAqD,CAChEC,QAASF,EACTG,OAAQJ,EACRK,UAAW,CAAC,kCCJDC,EAA+C,CAC1D,gBAAgB,EAChBC,SAAS,EACTC,KAAM,CACJC,OAAO,EACPC,OAAO,IA+BEC,EAAmD,CAC9D,mBAAoB,IACpBC,KAAMN,GC3DKO,EAAmD,CAC9DC,IAAK,GACLC,KAAM,GACNC,MAAO,GACPC,OAAQ,ICeGC,EAAmD,CAC9DC,QAAQ,EACR,yBAA0B,EAC1B,oBAAqB,IACrB,gBAAiB,UACjB,aAAc,OAkBHC,EAA+D,CAC1EC,KAAM,UAsBKC,EAA+C,CAC1DC,OAAQL,EACRM,OAAQX,EACRT,OAAQJ,EACR,YAAaoB,EACbf,UAAW,CAAC,kCCrEDoB,EAAiF,CAC5FjB,MAAM,EACNkB,OAAO,GAgBIC,EAA2D,CACtErD,YAAamD,EACbrB,OAAQJ,GCvBG4B,EAAoE,CAC/E,mBAAmB,EACnB,oBAAoB,GAaTC,EAA6E,CACxF7L,MAAO4L,GCfIE,EAA2D,CACtEX,QAAQ,GA2BGY,EAA+C,CAC1DC,OAAQF,EACR1B,OAAQJ,EACRwB,OAAQX,EACRR,UAAW,CAAC,kCCvCD4B,EAA2D,CACpEC,MAAO,CACH,wBAAwB,ICuCnBC,EAA6D,CACxEC,QAASlC,EACTmC,OAAQ1B,EACR2B,KAAMhB,EACN,cAAeK,EACfY,SAAUV,EACVrB,KAAMuB,EACNS,KAAM,OACNC,iBAAiB,EACjBlE,KAAM,QACNmE,QAAS,CACPvB,QAAQ,GAEVhB,QAAS8B,GChDEU,EAAmD,CAC9DxB,QAAQ,EACRyB,IAAK,IAaMC,EAA6D,CACxE1B,QAAQ,GAgBG2B,EAAyD,CACpEd,OAAQW,EACRI,WAAYF,EACZG,UAAW,IACXC,SAAU,KCbCC,EAAmD,CAC9DC,SAAU,YACVjF,OAAQ,QACRE,KAAM,qBACNnD,eAAgB,GAChBC,QAAS,GACTkI,QAAS,QACTC,mBAAmB,EACnBC,UAAW,CACTC,aAAa,EACbC,UAAW,IACXC,iBAAkB,GAClBC,eAAe,EACfC,cAAe,EACfC,cAAe,MC1BNC,EAAqD,CAChEC,cAAe,aACfC,mBAAoB,IACpBC,mBAAoB,KCfTC,EAAuD,CAClEC,aAAc,WCcH,MAAAC,EAAuC,CAClDlG,OAAQiF,EACR5E,YAAa6D,EACbiC,QAASxE,EACTyE,UAAWvB,EACXwB,SAAUT,EACV,YAAaI,SAMFM,cAWX,WAAA3O,CAAYoI,GATZwG,EAAAvN,IAAAlB,KAAUW,cAAcC,UAAS,kBAW/BE,uBAAAd,KAAYyO,EAAA,KAACjO,KAAK,cAAe,CAAEyH,kBACnCjI,KAAKqO,QAAUK,KAAKC,MAAMD,KAAKE,UAAUR,EAAqBC,UAC9DrO,KAAKuI,YAAcmG,KAAKC,MAAMD,KAAKE,UAAUR,EAAqB7F,cAClEvI,KAAKsO,UAAYI,KAAKC,MAAMD,KAAKE,UAAUR,EAAqBE,YAChEtO,KAAKkI,OAASwG,KAAKC,MAAMD,KAAKE,UAAUR,EAAqBlG,SAC7DlI,KAAKuO,SAAWG,KAAKC,MAAMD,KAAKE,UAAUR,EAAqBG,WAE/DvO,KAAK6O,6BAA6B5G,EACnC,CAED,4BAAA4G,CAA6B5G,qBAE3BnH,uBAAAd,KAAYyO,EAAA,KAACjO,KAAK,+BAAgC,CAAEyH,kBACpD,MAAM6G,EAAcJ,KAAKC,MAAMD,KAAKE,UAAUR,IAC9CpO,KAAKqO,QAAU7G,UAAU,CAAE,EAAEsH,EAAYT,QAASpG,aAAa,EAAbA,EAAeoG,SACjErO,KAAKuI,YAAcf,UAAU,CAAE,EAAEsH,EAAYvG,YAAaN,aAAa,EAAbA,EAAeM,aACzEvI,KAAKsO,UAAY9G,UAAU,CAAE,EAAEsH,EAAYR,UAAWrG,aAAa,EAAbA,EAAeqG,WACrEtO,KAAKkI,OAASV,UAAU,CAAE,EAAEsH,EAAY5G,OAAQD,aAAa,EAAbA,EAAeC,QAC/DlI,KAAKuO,SAAW/G,UAAU,CAAE,EAAEsH,EAAYP,SAAUtG,aAAa,EAAbA,EAAesG,UACnEvO,KAAK,aAAewH,UAAU,CAAA,EAAIsH,EAAY,aAAc7G,aAAa,EAAbA,EAAgB,cAE5EjI,KAAKuI,YAAYkC,KAAKH,WAA4C,QAAhClC,EAA0B,QAA1BrH,EAAAkH,aAAa,EAAbA,EAAeM,mBAAW,IAAAxH,OAAA,EAAAA,EAAE0J,YAAI,IAAArC,OAAA,EAAAA,EAAEkC,YAAawE,EAAYvG,YAAYkC,KAAKH,UAC9GtK,KAAKuI,YAAYgE,KAAKjC,WAA4C,QAAhCyE,EAA0B,QAA1BzG,EAAAL,aAAa,EAAbA,EAAeM,mBAAW,IAAAD,OAAA,EAAAA,EAAEiE,YAAI,IAAAwC,OAAA,EAAAA,EAAEzE,YAAawE,EAAYvG,YAAYgE,KAAKjC,UAC9GtK,KAAKuI,YAAY8D,QAAQ/B,WAA+C,QAAnC0E,EAA0B,QAA1BC,EAAAhH,aAAa,EAAbA,EAAeM,mBAAW,IAAA0G,OAAA,EAAAA,EAAE5C,eAAO,IAAA2C,OAAA,EAAAA,EAAE1E,YAAawE,EAAYvG,YAAY8D,QAAQ/B,WAEtG,UAAbtK,KAAKkI,cAAQ,IAAAgH,OAAA,EAAAA,EAAA5B,qBACftN,KAAKkI,OAAOC,OAASgH,OAAOC,SAAShC,SAASiC,QAAQ,MAAQ,EAAI,QAAU,OAC5ErP,KAAKkI,OAAOG,KAAO8G,OAAOC,SAAS/G,MAIV,SAAzBrI,KAAKkI,OAAOkF,UACoB,eAAhCpN,KAAKuO,SAASR,gBAEd/N,KAAKuO,SAASR,cAAgB,eAC9B/N,KAAKuO,SAASP,mBAAqBvL,KAAK2B,IAAIpE,KAAKuO,SAASP,mBAAoB,KAIrD,cAAzBhO,KAAKkI,OAAOkF,UACc,SAA1BpN,KAAKuI,YAAYkE,KAGfzM,KAAKsO,UAAUtB,WAAW5B,SACzBpL,KAAKuI,YAAYkC,KAAKH,UAAUgF,SAAS,kCAG1CtP,KAAKuI,YAAYkC,KAAKH,UAAU9G,KAAK,iCAIvCxD,KAAKsO,UAAUtB,WAAW5B,QAAS,EAErCtK,uBAAAd,KAAIyO,EAAA,KAASxO,MAAM,+BAAgC,CAAEgI,cAAejI,MACrE,gBC7FU,MAAAuP,EAAmD,CAC9DC,OAAuC,IACvCC,UAA0C,IAC1CC,WAA2C,IAC3CC,QAAwC,IACxCC,SAAyC,IACzCC,cAA8C,IAC9CC,aAA6C,IAC7CC,eAA+C,IAC/CC,MAAsC,IACtCC,OAAuC,IACvCC,WAA2C,IAC3CC,MAAsC,IACtCC,UAA0C,KCrB/BC,EAAQ,CACnBC,YAAa,qCACbC,kBAAmB,oGACnBC,QAAS,oDACTC,OAAQ,iCACRC,iBAAkB,gDAClBC,eAAgB,yGAChBC,WAAY,oKACZC,eAAgB,iFAChBC,iBAAkB,iLAClBC,sBAAuB,sKACvBC,iBAAkB,gHAClBC,gBAAiB,6GACjBC,eAAgB,sJAChBC,gBAAiB,kFACjBC,UAAW,oJACXC,YAAa,0HACbC,cAAe,iGAQJC,EAAY,CAIvBC,QAAS,UAITC,QAAS,UAITC,UAAW,YAIXC,MAAO,QAIPC,cAAe,iBAIfC,SAAU,WAIVC,SAAU,WAIVC,KAAM,OAINC,OAAQ,UAQGC,EAAoB,CAC/BC,UAAW,qBACXL,SAAU,oBACVM,cAAe,yBACfR,MAAO,iBACPS,MAAO,iBACPC,YAAa,uBACbC,QAAS,mBACTC,MAAO,iBACPC,eAAgB,0BAChBT,KAAM,gBACNU,UAAW,iCASKC,EAcAC,EAUAC,EAYAC,6BApClB,SAAkBH,GAChBA,EAAA,KAAA,gCACAA,EAAA,KAAA,aACAA,EAAA,MAAA,sBACAA,EAAA,OAAA,yBACAA,EAAA,IAAA,gBACAA,EAAA,gBAAA,2EACD,CAPD,CAAkBA,IAAAA,EAOjB,CAAA,IAOD,SAAkBC,GAEhBA,EAAA,MAAA,QACAA,EAAA,MAAA,OACD,CAJD,CAAkBA,IAAAA,EAIjB,CAAA,IAMD,SAAkBC,GAEhBA,EAAA,MAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,MAAA,GACD,CAND,CAAkBA,IAAAA,EAMjB,CAAA,IAMD,SAAkBC,GAEhBA,EAAA,OAAA,SACAA,EAAA,WAAA,aACAA,EAAA,QAAA,UACAA,EAAA,UAAA,YACAA,EAAA,cAAA,gBACAA,EAAA,aAAA,eACAA,EAAA,MAAA,QACAA,EAAA,SAAA,WACAA,EAAA,WAAA,aACAA,EAAA,MAAA,QACAA,EAAA,UAAA,YACAA,EAAA,OAAA,SACAA,EAAA,eAAA,gBACD,CAfD,CAAkBA,IAAAA,EAejB,CAAA,ICtIK,MAAOC,sBAAsBC,YAMjC,WAAAlT,GAEEmT,oBALFC,EAAiC/R,IAAAlB,UAAA,GACjCkT,EAAAhS,IAAAlB,KAAUW,cAAcC,UAAS,mBAK/BE,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,eAClB2S,uBAAAnT,KAAwBiT,EAAA,IAAIG,oBAC7B,CAEM,kBAAOC,GAMZ,OAJKvS,uBAAAC,EAAaA,EAAA,IAAAuS,IAChBH,uBAAApS,EAA0BA,EAAA,IAAIA,SAGzBD,uBAAAC,EAAaA,EAAA,IAAAuS,EACrB,CAED,kBAAAC,GAEEzS,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,sBAClBM,uBAAAd,KAAIiT,EAAA,KAAkBO,QACtBL,uBAAAnT,KAAwBiT,EAAA,IAAIG,oBAC7B,CAOD,YAAAK,CAAaC,GAEX5S,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,eAAgB,CAAEkT,gBACpC5S,uBAAAd,KAAU2T,EAAA,IAAAC,GAAAvN,KAAVrG,KAAWiS,EAAkBC,UAAWwB,EACzC,CACD,mBAAAG,CAAoBC,GAElBhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,sBAAuB,CAAEsT,aAC3C9T,KAAK+T,iBAAiB9B,EAAkBC,WAAY8B,GAAiBF,EAAWE,EAAoBC,SAAqC,CAAEC,OAAQpT,uBAAAd,KAAqBiT,EAAA,KAACiB,QAC1K,CAED,YAAAC,CAAaC,GAEXtT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,eAAgB,CAAE4T,YACpCtT,uBAAAd,KAAU2T,EAAA,IAAAC,GAAAvN,KAAVrG,KAAWiS,EAAkBJ,SAAUuC,EACxC,CACD,mBAAAC,CAAoBP,GAElBhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,sBAAuB,CAAEsT,aAC3C9T,KAAK+T,iBAAiB9B,EAAkBJ,UAAWmC,GAAiBF,EAAWE,EAAoBC,SAAqB,CAAEC,OAAQpT,uBAAAd,KAAqBiT,EAAA,KAACiB,QACzJ,CAED,gBAAAI,GAEExT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,oBAClBM,uBAAAd,cAAAqG,KAAArG,KAAWiS,EAAkBE,cAC9B,CACD,uBAAAoC,CAAwBT,GAEtBhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,0BAA2B,CAAEsT,aAC/C9T,KAAK+T,iBAAiB9B,EAAkBE,eAAe,IAAM2B,KAAY,CAAEI,OAAQpT,uBAAAd,YAAsBkU,QAC1G,CAED,SAAAM,CAAUC,GAER3T,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,YAAa,CAAEiU,QACjC3T,uBAAAd,KAAU2T,EAAA,IAAAC,GAAAvN,KAAVrG,KAAWiS,EAAkBN,MAAO8C,EACrC,CAED,gBAAAC,CAAiBZ,GAEfhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,mBAAoB,CAAEsT,aACxC9T,KAAK+T,iBAAiB9B,EAAkBN,OAAQqC,GAAiBF,EAAWE,EAAoBC,SAAmB,CAAEC,OAAQpT,uBAAAd,KAAqBiT,EAAA,KAACiB,QACpJ,CAED,YAAAS,GAEE7T,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,gBAClBM,uBAAAd,cAAAqG,KAAArG,KAAWiS,EAAkBQ,UAC9B,CACD,mBAAAmC,CAAoBd,GAElBhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,sBAAuB,CAAEsT,aAC3C9T,KAAK+T,iBAAiB9B,EAAkBQ,WAAW,IAAMqB,KAAY,CAAEI,OAAQpT,uBAAAd,YAAsBkU,QACtG,CAED,SAAAW,CAAUC,GAERhU,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,aAAc,CAAEsU,UAClChU,uBAAAd,KAAU2T,EAAA,IAAAC,GAAAvN,KAAVrG,KAAWiS,EAAkBG,MAAO0C,EACrC,CACD,gBAAAC,CAAiBjB,GAEfhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,mBAAoB,CAAEsT,aACxC9T,KAAK+T,iBAAiB9B,EAAkBG,OAAQ4B,GAAiBF,EAAWE,EAAoBC,SAAmD,CAAEC,OAAQpT,uBAAAd,KAAqBiT,EAAA,KAACiB,QACpL,CAED,cAAAc,CAAenK,GAEb/J,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,iBAAkB,CAAEqK,SACtC/J,uBAAAd,KAAU2T,EAAA,IAAAC,GAAAvN,KAAVrG,KAAWiS,EAAkBI,YAAaxH,EAC3C,CACD,qBAAAoK,CAAsBnB,GAEpBhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,wBAAyB,CAAEsT,aAC7C9T,KAAK+T,iBAAiB9B,EAAkBI,aAAc2B,GAAiBF,EAAWE,EAAoBC,SAAyB,CAAEC,OAAQpT,uBAAAd,KAAqBiT,EAAA,KAACiB,QAChK,CAED,WAAAgB,CAAYC,EAAqC,gBAE/CrU,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,cAAe,CAAE2U,oBACnCrU,uBAAAd,KAAU2T,EAAA,IAAAC,GAAAvN,KAAVrG,KAAWiS,EAAkBK,QAAS6C,EACvC,CACD,kBAAAC,CAAmBtB,GAEjBhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,qBAAsB,CAAEsT,aAC1C9T,KAAK+T,iBAAiB9B,EAAkBK,SAAU0B,GAAiBF,EAAWE,EAAoBC,SAA2E,CAAEC,OAAQpT,uBAAAd,KAAqBiT,EAAA,KAACiB,QAC9M,CAED,SAAAmB,GAEEvU,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,aAClBM,uBAAAd,cAAAqG,KAAArG,KAAWiS,EAAkBM,MAC9B,CACD,gBAAA+C,CAAiBxB,GAEfhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,mBAAoB,CAAEsT,aACxC9T,KAAK+T,iBAAiB9B,EAAkBM,OAAO,IAAMuB,KAAY,CAAEI,OAAQpT,uBAAAd,YAAsBkU,QAClG,CAED,iBAAAqB,CAAkBC,GAEhB1U,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,oBAAqB,CAAEgV,YACzC1U,uBAAAd,KAAU2T,EAAA,IAAAC,GAAAvN,KAAVrG,KAAWiS,EAAkBO,eAAgBgD,EAC9C,CACD,wBAAAC,CAAyB3B,GAEvBhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,2BAA4B,CAAEsT,aAChD9T,KAAK+T,iBAAiB9B,EAAkBO,gBAAiBwB,GAAiBF,EAAWE,EAAoBC,SAA8B,CAAEC,OAAQpT,uBAAAd,KAAqBiT,EAAA,KAACiB,QACxK,CAED,QAAAwB,CAASC,GAEP7U,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,WAAY,CAAEmV,SAChC7U,uBAAAd,KAAU2T,EAAA,IAAAC,GAAAvN,KAAVrG,KAAWiS,EAAkBF,KAAM4D,EACpC,CACD,eAAAC,CAAgB9B,GAEdhT,uBAAAd,KAAYkT,EAAA,KAAC1S,KAAK,kBAAmB,CAAEsT,aACvC9T,KAAK+T,iBAAiB9B,EAAkBF,MAAOiC,GAAiBF,EAAWE,EAAoBC,SAAqB,CAAEC,OAAQpT,uBAAAd,KAAqBiT,EAAA,KAACiB,QACrJ,EA7HKnT,EAAA+R,cAAAG,EAAA,IAAA4C,QAAA3C,EAAA,IAAA2C,QAAAlC,EAAA,IAAAmC,QAAAlC,EAAA,SAAAA,oBAAAnH,EAActM,GAElBH,KAAK+V,cAAc,IAAIC,YAAYvJ,EAAMnL,OAAOwG,OAAO,CAAEmO,SAAS,EAAMC,UAAU,GAAQ/V,EAAO,CAAE8T,OAAQ9T,QAASgW,IACtH,EA9BO7C,EAAA,CAAA5R,WAAA,GCJH,MAAO0U,oBAAoBrD,YAM/B,WAAAlT,GAEEmT,oBALFqD,EAAsBnV,IAAAlB,UAAA,GACtBsW,EAAApV,IAAAlB,KAAUW,cAAcC,UAAS,gBAKhC,CAEM,kBAAOyS,GAMZ,OAJKvS,uBAAAC,EAAWA,EAAA,IAAAwV,IACdpD,uBAAApS,EAAwBA,EAAA,IAAIA,SAGvBD,uBAAAC,EAAWA,EAAA,IAAAwV,EACnB,CAED,UAAAC,CAAWC,GAET3V,uBAAAd,KAAYsW,EAAA,KAAC9V,KAAK,aAAc,CAAEiW,OAClCtD,uBAAAnT,KAAIqW,EAAYI,EAAE,IACnB,CASD,UAAAC,GAEE5V,uBAAAd,KAAYsW,EAAA,KAAC9V,KAAK,cAClBM,uBAAAd,cAAAqG,KAAArG,KAAWuR,EAAUS,OACtB,CAED,YAAAmC,CAAaC,GAEXtT,uBAAAd,KAAYsW,EAAA,KAAC9V,KAAK,eAAgB,CAAE4T,YACpCtT,uBAAAd,KAAU2W,EAAA,IAAAC,GAAAvQ,KAAVrG,KAAWuR,EAAUM,SAAUuC,EAChC,CAED,WAAAyC,CAAYC,GAEVhW,uBAAAd,KAAYsW,EAAA,KAAC9V,KAAK,cAAe,CAAEsW,oBACnChW,uBAAAd,KAAU2W,EAAA,IAAAC,GAAAvQ,KAAVrG,KAAWuR,EAAUC,QAAOlQ,OAAAwG,OAAAxG,OAAAwG,OAAA,CAAA,EACvBgP,GAAe,CAClBC,UAAWD,EAAgBE,QAE9B,CAED,QAAAtB,CAASC,GAEP7U,uBAAAd,KAAYsW,EAAA,KAAC9V,KAAK,WAAY,CAAEmV,SAChC7U,uBAAAd,KAAU2W,EAAA,IAAAC,GAAAvQ,KAAVrG,KAAWuR,EAAUQ,KAAM4D,EAC5B,CAED,WAAAsB,CAAYC,GAEVpW,uBAAAd,KAAYsW,EAAA,KAAC9V,KAAK,cAAe,CAAE0W,UACnCpW,uBAAAd,KAAU2W,EAAA,IAAAC,GAAAvQ,KAAVrG,KAAWuR,EAAUE,QAASyF,EAC/B,CAED,aAAAC,CAAc/C,GAEZtT,uBAAAd,KAAYsW,EAAA,KAAC9V,KAAK,gBAAiB,CAAE4T,YACrCtT,uBAAAd,KAAU2W,EAAA,IAAAC,GAAAvQ,KAAVrG,KAAWuR,EAAUG,UAAW0C,EACjC,CAED,YAAAgD,CAAahD,GAEXtT,uBAAAd,KAAYsW,EAAA,KAAC9V,KAAK,eAAgB,CAAE4T,YACpCtT,uBAAAd,KAAU2W,EAAA,IAAAC,GAAAvQ,KAAVrG,KAAWuR,EAAUO,SAAUsC,EAChC,EAlDKrT,EAAAqV,YAAAC,EAAA,IAAAR,QAAAS,EAAA,IAAAT,QAAAc,EAAA,IAAAb,QAAAc,EAAA,SAAAA,kBAAAnK,EAActM,SAElB,MAAM6T,EAAM,IAAIgC,YAAYvJ,EAAMnL,OAAOwG,OAAO,CAAEmO,SAAS,EAAMC,UAAU,GAAQ/V,EAAO,CAAE8T,OAAQ9T,QAASgW,IAC7GnW,KAAK+V,cAAc/B,GACN,QAAb5L,EAAAtH,uBAAAd,KAAaqW,EAAA,YAAA,IAAAjO,GAAAA,EAAE2N,cAAc/B,EAC/B,EA7BOuC,EAAA,CAAA7U,WAAA,SCDI2V,oBAeX,WAAAxX,CAAYoI,GAPFjI,KAAOsX,QAAIC,GAAaA,EAAEC,iBACpCC,EAAAvW,IAAAlB,KAAUW,cAAcC,UAAS,YAyCvBZ,KAAA0X,mBAAsB1D,IAK9B,GAHAlT,uBAAAd,KAAYyX,EAAA,KAACjX,KAAK,cAAe,CAAEwT,QAGhB,IAAfA,EAAI2D,QAAgC,IAAhB3D,EAAI4D,UAI5B5X,KAAK6X,gBAAkB7D,EAAI8D,UAEvB9X,KAAK+X,eAAe,CACtB,MAAM9O,EAAQjJ,KAAKgY,aAAahE,GAChChU,KAAK+X,cAAc/D,EAAK/K,EACzB,GAGOjJ,KAAAiY,mBAAsBjE,IAG9B,GADAlT,uBAAAd,KAAYyX,EAAA,KAACjX,KAAK,cAAe,CAAEwT,QACPmC,MAAxBnW,KAAK6X,iBAAgC7X,KAAK6X,kBAAoB7D,EAAI8D,UAAW,CAC/E,GAAK9D,EAAIxP,OAAuB0T,UAAUC,SAAS,cAEjD,YADAnY,KAAKoY,iBAAiBpE,GAGxB,GAAIhU,KAAKqY,cAAe,CACtB,MAAMpP,EAAQjJ,KAAKgY,aAAahE,GAChChU,KAAKqY,cAAcrE,EAAK/K,EACzB,CACF,GAGOjJ,KAAAoY,iBAAoBpE,IAG5B,GADAlT,uBAAAd,KAAYyX,EAAA,KAACjX,KAAK,YAAa,CAAEwT,QACLmC,MAAxBnW,KAAK6X,iBAAgC7X,KAAK6X,kBAAoB7D,EAAI8D,YACpE9X,KAAK6X,qBAAkB1B,EACvBnC,EAAIsE,kBACAtY,KAAKuY,aAAa,CACpB,MAAMtP,EAAQjJ,KAAKgY,aAAahE,GAChChU,KAAKuY,YAAYvE,EAAK/K,EACvB,CACF,EAGKjJ,KAAAwY,kBAAqBxE,IAE3B,GAC0BmC,MAAxBnW,KAAK6X,iBAAgC7X,KAAK6X,kBAAoB7D,EAAI8D,YACjE9X,KAAKyY,WAAWN,SAASnE,EAAIxP,UAE9BwP,EAAIsE,kBACJtY,KAAK6X,qBAAkB1B,EACnBnW,KAAKuY,aAAa,CACpB,MAAMtP,EAAQjJ,KAAKgY,aAAahE,GAChChU,KAAKuY,YAAYvE,EAAK/K,EACvB,CACF,EA1FDnI,uBAAAd,KAAYyX,EAAA,KAACjX,KAAK,cAAe,CAAEyH,kBACnCjI,KAAKiI,cAAgBA,CACtB,CAES,UAAAyQ,CAAWC,EAAkBC,GAErC,GAAIA,GAA2B,EAAG,CAChC,MAAMC,EAAyBpW,KAAKqW,IAAI,GAAIF,GAC5C,OAAOnW,KAAKsW,MAAMJ,EAAWE,GAAkBA,CAChD,CAED,OADA/X,uBAAAd,KAAIyX,EAAA,KAASxX,MAAM,aAAc,CAAE0Y,WAAUC,4BACtCD,CACR,CAES,YAAAX,CAAagB,GAErB,IAAIC,EAAiBC,IAEhBD,UAASC,WADV,mBAAoBF,EACEA,EAAMG,eAAe,GAErBH,GAE1B,MAAMI,EAAgBpZ,KAAKyY,WAAWY,wBAChCC,EAAU,CACd1W,EAAG5C,KAAK0Y,WAAWO,EAAUG,EAAKpO,KAAOhL,KAAKyY,WAAWc,WAAavZ,KAAKyY,WAAWe,WAAYxZ,KAAKiI,cAAc8B,kBACrHpH,EAAG3C,KAAK0Y,WAAWQ,EAAUE,EAAKrO,IAAM/K,KAAKyY,WAAWgB,UAAYzZ,KAAKyY,WAAWiB,UAAW1Z,KAAKiI,cAAc8B,kBAClH7F,EAAGlE,KAAK0Y,WAAW3R,KAAKC,MAAOhH,KAAKiI,cAAc+B,yBAClDzG,EAAIyV,EAAuBW,UAAY,GAGzC,OADA7Y,uBAAAd,KAAIyX,EAAA,KAASxX,MAAM,eAAgB,CAAE+Y,QAAOM,YACrCA,CACR,CA8DD,MAAAM,CAAOnB,GAEL3X,uBAAAd,KAAYyX,EAAA,KAACjX,KAAK,SAAU,CAAEiY,eAC1BzY,KAAKyY,YACPzY,KAAK6Z,SAEP7Z,KAAKyY,WAAaA,EAClBzY,KAAKyY,WAAW1E,iBAAiB,cAAe/T,KAAK0X,mBAAoB1X,KAAKiI,cAAc6B,iBAC5F9J,KAAKyY,WAAW1E,iBAAiB,cAAe/T,KAAKiY,mBAAoBjY,KAAKiI,cAAc6B,iBAC5F9J,KAAKyY,WAAW1E,iBAAiB,YAAa/T,KAAKoY,iBAAkBpY,KAAKiI,cAAc6B,iBACxF9J,KAAKyY,WAAW1E,iBAAiB,eAAgB/T,KAAKoY,iBAAkBpY,KAAKiI,cAAc6B,iBAC3F9J,KAAKyY,WAAW1E,iBAAiB,gBAAiB/T,KAAKoY,iBAAkBpY,KAAKiI,cAAc6B,iBAC5F9J,KAAKyY,WAAW1E,iBAAiB,aAAc/T,KAAKwY,kBAAmBxY,KAAKiI,cAAc6B,iBAE1F9J,KAAKyY,WAAW1E,iBAAiB,YAAa/T,KAAKsX,SAInDwC,SAASC,gBAAgBhG,iBAAiB,eAAe,QAC1D,CAED,MAAA8F,qBAEE/Y,uBAAAd,KAAYyX,EAAA,KAACjX,KAAK,kBAClBO,EAAAf,KAAKyY,2BAAYuB,oBAAoB,cAAeha,KAAK0X,mBAAoB1X,KAAKiI,cAAc6B,yBAChG1B,EAAApI,KAAKyY,2BAAYuB,oBAAoB,cAAeha,KAAKiY,mBAAoBjY,KAAKiI,cAAc6B,yBAChGxB,EAAAtI,KAAKyY,2BAAYuB,oBAAoB,YAAaha,KAAKoY,iBAAkBpY,KAAKiI,cAAc6B,yBAC5FiF,EAAA/O,KAAKyY,2BAAYuB,oBAAoB,eAAgBha,KAAKoY,iBAAkBpY,KAAKiI,cAAc6B,yBAC/FmF,EAAAjP,KAAKyY,2BAAYuB,oBAAoB,gBAAiBha,KAAKoY,iBAAkBpY,KAAKiI,cAAc6B,yBAChGkF,EAAAhP,KAAKyY,2BAAYuB,oBAAoB,aAAcha,KAAKwY,kBAAmBxY,KAAKiI,cAAc6B,iBAC/E,QAAfoF,EAAAlP,KAAKyY,kBAAU,IAAAvJ,GAAAA,EAAE8K,oBAAoB,YAAaha,KAAKsX,SAEvDwC,SAASC,gBAAgBC,oBAAoB,eAAe,QAC7D,gBCvII,MAAMC,EAA6B,CAAA,ECsB7BC,GAAuB,CAClCC,IAAK,CACHC,MAAO,UACPjR,MAAO,EACP,sBAAuB,EACvB,2BAA4B,OAC5B,2BAA4B,aAE9B,QAAS,CACP,cAAe,eAEjB,eAAgB,CACd,cAAe,cACfiR,MAAO,aAET,QAAS,CACP,cAAe,gBACf,YAAa,yPCxDgDC,UAAyJ,SAASnW,GAAG,SAASqT,EAAE+C,GAAG,GAAGC,EAAED,GAAG,OAAOC,EAAED,GAAGlG,QAAQ,IAAIjN,EAAEoT,EAAED,GAAG,CAAC1V,EAAE0V,EAAEE,GAAE,EAAGpG,QAAQ,CAAA,GAAI,OAAOlQ,EAAEoW,GAAGjU,KAAKc,EAAEiN,QAAQjN,EAAEA,EAAEiN,QAAQmD,GAAGpQ,EAAEqT,GAAE,EAAGrT,EAAEiN,OAAO,CAAC,IAAImG,EAAE,CAAE,EAAC,OAAOhD,EAAEkD,EAAEvW,EAAEqT,EAAErQ,EAAEqT,EAAEhD,EAAE3S,EAAE,SAASV,GAAG,OAAOA,CAAC,EAAEqT,EAAEmD,EAAE,SAASxW,EAAEqW,EAAED,GAAG/C,EAAE+C,EAAEpW,EAAEqW,IAAIjZ,OAAOqZ,eAAezW,EAAEqW,EAAE,CAACK,cAAa,EAAGC,YAAW,EAAG1Z,IAAImZ,GAAG,EAAE/C,EAAEgD,EAAE,SAASrW,GAAG,IAAIqW,EAAErW,GAAGA,EAAE4W,WAAW,WAAW,OAAO5W,EAAE6W,OAAO,EAAE,WAAW,OAAO7W,CAAC,EAAE,OAAOqT,EAAEmD,EAAEH,EAAE,IAAIA,GAAGA,CAAC,EAAEhD,EAAE+C,EAAE,SAASpW,EAAEqT,GAAG,OAAOjW,OAAO6E,UAAU6U,eAAe3U,KAAKnC,EAAEqT,EAAE,EAAEA,EAAEhU,EAAE,GAAGgU,EAAEA,EAAE0D,EAAE,EAAE,CAA1e,CAA4e,CAAC,SAAS/W,EAAEqT,EAAEgD,GAAgB,SAASD,EAAEpW,EAAEqT,GAAG,KAAKrT,aAAaqT,GAAG,MAAM,IAAI2D,UAAU,oCAAoC,CAAC5Z,OAAOqZ,eAAepD,EAAE,aAAa,CAAC7V,OAAM,IAAK,IAAIyF,EAAE,mBAAmBgU,QAAQ,iBAAiBA,OAAOC,SAAS,SAASlX,GAAG,cAAcA,CAAC,EAAE,SAASA,GAAG,OAAOA,GAAG,mBAAmBiX,QAAQjX,EAAErE,cAAcsb,QAAQjX,IAAIiX,OAAOhV,UAAU,gBAAgBjC,CAAC,EAAEU,EAAE,SAASV,EAAEqT,GAAG,IAAIgD,EAAEva,KAAKsa,EAAEta,KAAKkE,GAAGlE,KAAKqb,OAAO,SAASnX,GAAG,GAAG,iBAAiBA,EAAE,OAAO3D,QAAQG,MAAM,oCAA+B,IAASwD,EAAE,YAAYiD,EAAEjD,GAAGA,GAAG,qBAAqB,IAAIqT,EAAE,GAAG+C,OAAE,EAAO1V,OAAE,EAAO0W,OAAE,EAAO,IAAIpX,EAAEQ,MAAM,KAAKlD,SAAQ,SAAS0C,GAAG,GAAGU,EAAEV,EAAEqX,OAAO,IAAI,IAAI3W,EAAEyK,QAAQ,KAAKkI,EAAE3S,GAAG,CAAE,EAAC0V,EAAE1V,MAAM,CAACA,EAAE4W,UAAU,EAAE5W,EAAEyK,QAAQ,MAAM3K,MAAM,KAAKlD,SAAQ,SAAS0C,IAAIoX,EAAEpX,EAAEQ,MAAM,OAAO,IAAI4W,EAAEzW,SAAS0S,EAAE+C,GAAGgB,EAAE,GAAGC,OAAOtU,QAAQ,WAAW,KAAKsT,EAAEkB,eAAeH,EAAE,GAAGC,OAAOtU,QAAQ,WAAW,KAAK,IAAG,KAAIqT,EAAE1V,EAAEF,MAAM,KAAK,GAAG6W,UAAWhE,EAAE+C,GAAG,GAAG,CAAC,MAAMpW,IAAI,CAAC,GAAE,CAAC,MAAMA,GAAG,MAAM,oBAAoB,CAAC,OAAOqT,CAAC,EAAEvX,KAAK0b,MAAM,SAASxX,GAAG,GAAG,iBAAY,IAASA,EAAE,YAAYiD,EAAEjD,IAAI,OAAO3D,QAAQG,MAAM,qCAAgC,IAASwD,EAAE,YAAYiD,EAAEjD,GAAGA,GAAG,sBAAsB,IAAIqT,EAAE,GAAG,IAAI,IAAI,IAAIgD,KAAKrW,EAAE,GAAGA,EAAE8W,eAAeT,GAAG,CAAa,IAAI,IAAID,KAApB/C,GAAGgD,EAAE,OAAoBrW,EAAEqW,GAAGrW,EAAEqW,GAAGS,eAAeV,KAAK/C,GAAG+C,EAAE,KAAKpW,EAAEqW,GAAGD,GAAG,OAAO/C,GAAG,KAAK,CAAC,CAAC,MAAMrT,GAAG,MAAM,qBAAqB,CAAC,OAAOqT,CAAC,EAAEvX,KAAKyb,eAAe,SAASvX,GAAG,MAAM,MAAMA,EAAEyX,OAAO,GAAGzX,EAAEyX,MAAM,EAAEpB,EAAE1V,OAAO,GAAGX,CAAC,CAAC,EAAEqT,EAAEwD,QAAQnW,CAAC,EAAE,SAASV,EAAEqT,EAAEgD,GAAgBrW,EAAEkQ,QAAQmG,EAAE,GAAGQ,OAAO,0ICK9pE,MAAMa,GAAc,IAAIC,GAKXC,GAAc,CACzBC,WAAWlT,GAEF+S,GAAOF,MAAM7S,GAItB,WAAAmT,CAAYC,GAEV,MAAMC,EAAQN,GAAOP,OAAOY,GAI5B,OAHAC,EAAM,SAAS,aAAenX,OAAOmX,EAAM,SAAS,cACpDA,EAAM/B,IAAI,uBAAyBpV,OAAOmX,EAAM/B,IAAI,wBACpD+B,EAAM/B,IAAIhR,MAAQpE,OAAOmX,EAAM/B,IAAIhR,OAC5B+S,CACR,EACD,aAAAC,CAAeC,GACb,IAAIC,EAAMT,GAAOF,MAAM,CAAEW,IAAKD,IAE9B,OADAC,EAAMA,EAAIb,UAAU,EAAGa,EAAIxX,OAAS,GAC7BwX,CACR,EACD,cAAAC,CAAgBC,GACd,MAAMH,EAAWR,GAAOP,OAAO,QAAQkB,MAAmBF,IAW1D,OAVID,EAASjT,MACXiT,EAASjT,MAAQpE,OAAOqX,EAASjT,cAE1BiT,EAASjT,MAEdiT,EAAS,uBACXA,EAAS,uBAAyBrX,OAAOqX,EAAS,+BAE3CA,EAAS,uBAEXA,CACR,EAEDI,aAAaP,GAEJL,GAAOP,OAAO,QAAQY,MAAUI,IAEzCI,aAAaR,GAEJ3a,OAAOob,QAAQT,GAAO7V,KAAI,EAAEuW,EAAGxa,KAAO,GAAGwa,KAAKxa,MAAKqE,KAAK,yBChDjDoW,mPCMLC,aAQX,WAAAhd,CAAYuc,EAAmCF,GAN/CY,GAAqB5b,IAAAlB,UAAA,GACrB+c,GAAe7b,IAAAlB,UAAA,GACfgd,GAAyB9b,IAAAlB,UAAA,GACzBid,GAA4B/b,IAAAlB,UAAA,GAC5Bkd,GAAAhc,IAAAlB,KAAWW,cAAcC,UAAS,UAIhCE,uBAAAd,KAAIkd,GAAA,KAAS1c,KAAK,cAAe,CAAE4b,WAAUF,UAC7Clc,KAAKmd,SAASjB,GACdlc,KAAKod,qBACLpd,KAAKqd,YAAYjB,EAClB,CAED,mBAAIkB,GAEF,OAAOxc,uBAAAd,KAAIid,GAAA,MAAqBnc,uBAAAd,YACjC,CAED,YAAIoc,GAEF,OAAOtb,uBAAAd,KAAI8c,GAAA,IACZ,CACD,WAAAO,CAAYpB,GAEVnb,uBAAAd,KAAYkd,GAAA,KAAC1c,KAAK,cAAe,CAAEyb,UACnC9I,uBAAAnT,KAAI8c,GAAatV,UAAU+V,gBAAgBtD,GAAkBgC,GAAS,CAAA,QACtE9I,uBAAAnT,KAAwBid,GAAAhB,GAAUjc,KAAKkc,MAAM,IAAKpb,uBAAAd,KAAIgd,GAAA,aACtDlc,uBAAAd,KAAYkd,GAAA,KAACjd,MAAM,cAAea,uBAAAd,KAAqBid,GAAA,KACxD,CAED,SAAIf,GAEF,OAAOpb,uBAAAd,KAAI+c,GAAA,IACZ,CACD,QAAAI,CAASjB,GAEPpb,uBAAAd,KAAYkd,GAAA,KAAC1c,KAAK,WAAY,CAAE0b,UAChC/I,uBAAAnT,KAAI+c,GAAUvV,UAAU+V,gBAAgBrD,IAAegC,GAAS,CAAA,QAChEpb,uBAAAd,KAAYkd,GAAA,KAACjd,MAAM,WAAYa,uBAAAd,KAAW+c,GAAA,KAC3C,CAED,mBAAIS,GAEF,OAAO1c,uBAAAd,KAAIgd,GAAA,IACZ,CACD,kBAAAI,CAAmBK,EAAgB,IAEjC3c,uBAAAd,KAAYkd,GAAA,KAAC1c,KAAK,qBAAsB,CAAEid,kBAC1CtK,uBAAAnT,KAAIgd,GAAoBS,EAAa,KACrCtK,uBAAAnT,KAAIid,GAAqBjd,KAAKkc,MAAM,IAAKpb,uBAAAd,KAAsBgd,GAAA,aAC/Dlc,uBAAAd,KAAYkd,GAAA,KAACjd,MAAM,qBAAsBa,uBAAAd,KAAqBid,GAAA,KAC/D,6ED5DH,SAAkBL,GAEhBA,EAAA,OAAA,SACAA,EAAA,MAAA,QACAA,EAAA,KAAA,MACD,CALD,CAAkBA,KAAAA,GAKjB,CAAA,UAgBqBc,eAQpB,WAAA7d,CAAY4M,EAAkBwP,GAE5Bjc,KAAK2d,aAAe5W,KAAKC,MACzBhH,KAAK4d,GAAK,GAAGnR,KAAQ5F,eACrB7G,KAAK6d,iBAAmB7d,KAAK2d,aAC7B3d,KAAKyM,KAAOA,EACZzM,KAAKic,MAAQA,CACd,EESG,MAAO6B,eAAeJ,eAU1B,WAAA7d,CAAYoc,EAAkBnE,EAAmBiG,EAAc,OAE7D/K,MAAK,SAAoBiJ,GAV3B+B,GAAA9c,IAAAlB,KAAUW,cAAcC,UAAS,WAW/BE,uBAAAd,KAAIge,GAAA,KAASxd,KAAK,cAAe,CAAEyb,QAAOnE,YAAWiG,gBAErD/d,KAAKic,MAAQA,EACbjc,KAAK8X,UAAYA,EACjB9X,KAAK+d,YAAcA,EACnB/d,KAAKie,SAAW,GAChBje,KAAK6E,OAAS,CACf,CAED,QAAAqZ,GAEE,MAAMC,EAAQ,IAAIL,OAAO9d,KAAKic,MAAOjc,KAAK8X,UAAW9X,KAAK+d,aAM1D,OALAI,EAAMP,GAAK5d,KAAK4d,GAChBO,EAAMR,aAAe3d,KAAK2d,aAC1BQ,EAAMN,iBAAmB7d,KAAK6d,iBAC9BM,EAAMF,SAAWV,gBAAgBvd,KAAKie,UACtCE,EAAMtZ,OAAS7E,KAAK6E,OACbsZ,CACR,CAED,YAAAC,GAEE,MAAMvV,EAAsB,CAC1B+U,GAAI5d,KAAK4d,GACTG,YAAa/d,KAAK+d,YAClBxa,EAAG,GACHW,EAAG,GACHtB,EAAG,GACHD,EAAG,IAQL,OANA3C,KAAKie,SAASzc,SAAQ+B,IACpBsF,EAAKtF,EAAEC,KAAKD,EAAEA,GACdsF,EAAK3E,EAAEV,KAAKD,EAAEW,GACd2E,EAAKjG,EAAEY,KAAKD,EAAEX,GACdiG,EAAKlG,EAAEa,KAAKD,EAAEZ,EAAE,IAEXkG,CACR,EAOG,SAAUwV,+BAA+BxV,GAE7C,MAAMyV,EAAmB,GACnB9T,EAAoB,GA+C1B,GA9CA3B,EAAKrH,SAAQ,CAAC+c,EAAGC,aACf,IAAIC,GAAO,EACX,MAAMC,EAAS,IAAIZ,OAAOS,EAAEtC,OAAShC,EAAiBsE,EAAEzG,WAAa,GAErE,GADIyG,EAAEX,KAAIc,EAAOd,GAAKW,EAAEX,MACP,QAAZ7c,EAAAwd,EAAEN,gBAAU,IAAAld,OAAA,EAAAA,EAAA8D,QAGf,OAFAyZ,EAAO9a,KAAK,UAAUgb,EAAK,2BAC3BC,GAAO,GAGG,QAAZrW,EAAAmW,EAAEN,gBAAU,IAAA7V,GAAAA,EAAA5G,SAAQ,CAACmd,EAAIC,KACvB,IAAKD,EAGH,OAFAL,EAAO9a,KAAK,UAAUgb,EAAK,uBAAuBI,UAClDH,GAAO,GAGT,MAAMnF,EAAoB,CACxB/V,EAAGob,EAAGpb,GAAK,EACXW,EAAGya,EAAGza,GAAK0a,EACXhc,EAAG,EACHD,EAAG,GAEL,OAAawT,OAATwI,eAAAA,EAAI/b,IAA2B,OAAT+b,aAAA,EAAAA,EAAI/b,IAC5B0b,EAAO9a,KAAK,UAAUgb,EAAK,4BAA4BI,UACvDH,GAAO,KAIPnF,EAAQ1W,EAAI+b,EAAG/b,EAEJuT,OAATwI,eAAAA,EAAIhc,IAA2B,OAATgc,aAAA,EAAAA,EAAIhc,IAC5B2b,EAAO9a,KAAK,UAAUgb,EAAK,4BAA4BI,UACvDH,GAAO,KAIPnF,EAAQ3W,EAAIgc,EAAGhc,OAEb8b,GACFC,EAAOT,SAASza,KAAK8V,KACtB,IAECmF,GACFjU,EAAQhH,KAAKkb,EACd,IAGCJ,EAAOzZ,OACT,MAAM,IAAIwL,MAAMiO,EAAO9X,KAAK,OAG9B,OAAOgE,CACT,sBCrJaqU,MAeX,WAAAhf,CAAYsJ,EAAQ,IAAK2V,EAAS,IAAKC,EAAY,EAAGC,EAAejY,KAAKC,OAF1EiY,GAAA/d,IAAAlB,KAAUW,cAAcC,UAAS,UAI/BE,uBAAAd,KAAIif,GAAA,KAASze,KAAK,cAAe,CAAE2I,QAAO2V,SAAQE,iBAClDhf,KAAK2d,aAAeqB,EACpBhf,KAAK6d,iBAAmBmB,EACxBhf,KAAKmJ,MAAQA,EACbnJ,KAAK8e,OAASA,EACd9e,KAAK+e,UAAYA,EACjB/e,KAAKkf,QAAU,GACflf,KAAKmf,UAAY,CACfC,iBAAkB,EAClBC,qBAAsB,GAExBrf,KAAK2V,MAAO,CACb,CAES,eAAA2J,CAAgB9c,EAAkBa,GAE1C,IAAIkc,EAAQ,EACR/c,IAAaa,EACfkc,EAAQ,EACC/c,EAAW,GACpB+c,EAAQ,GAAM9c,KAAKqW,IAAI,GAAMtW,EAAU,IAC9BA,EAAWa,EAAiB,KACrCkc,EAAQ,GAAM9c,KAAKqW,IAAI,IAAOzV,EAAiBb,GAAW,KAE5D,MAAMmX,EAAW4F,EAAQ9c,KAAK2B,IAAI,GAAK,EAAO,GAAM3B,KAAK+c,KAAKhd,IAC9D,OAAOK,MAAM8W,GAAY,GAAMlX,KAAKsW,MAAiB,IAAXY,GAAkB,GAC7D,CAES,6BAAA8F,CAA8Bf,EAAgBzV,EAAiByW,GAEvE,MAAMC,EAAiB,GAAMjB,EAAOzC,MAAM,wBAA0B,GAAK,EACzE,OAAQyD,GACqB,IAA3BhB,EAAOT,SAASpZ,QAChBpC,KAAKmd,IAAIF,EAAY9c,EAAIqG,EAAMrG,IAAM+c,GACrCld,KAAKmd,IAAIF,EAAY/c,EAAIsG,EAAMtG,IAAMgd,CACxC,CAED,kBAAAE,CAAmB5W,GAEjBnI,uBAAAd,KAAYif,GAAA,KAACze,KAAK,qBAAsB,CAAEyI,UAC1C,MAAM3B,UAAY,CAACC,EAAapD,EAAaC,IAA0BmD,GAAOpD,GAAOoD,GAAOnD,EAEtF0b,EAAwB,GAqB9B,OApBA9f,KAAKkf,QAAQ1d,SAASkd,IAEpB,IAAK,IAAI9Z,EAAI,EAAGA,EAAI8Z,EAAOT,SAASpZ,OAAQD,IAAK,CAC/C,MAAMmb,EAAgBrB,EAAOT,SAASrZ,GACtC,GACE0C,UAAUyY,EAAcnd,EAAGqG,EAAMrG,EAAI,EAAGqG,EAAMrG,EAAI,IAClD0E,UAAUyY,EAAcpd,EAAGsG,EAAMtG,EAAI,EAAGsG,EAAMtG,EAAI,GAClD,CACAmd,EAAYtc,KAAKkb,GACjB,KACD,CAEC,GAAIrc,gBAAgB4G,EAAO8W,GAAiB,GAAI,CAC9CD,EAAYtc,KAAKkb,GACjB,KACD,CAEJ,KAEH5d,uBAAAd,KAAIif,GAAA,KAAShf,MAAM,qBAAsB,CAAEuK,QAASsV,IAC7CA,CACR,CAED,QAAAE,CAAStB,EAAgBpF,GAEvBxY,uBAAAd,KAAIif,GAAA,KAAShf,MAAM,WAAY,CAAEye,SAAQpF,YACzC,MAAMoG,EAAchB,EAAOT,SAASgC,IAAI,GACxC,GAAIjgB,KAAKyf,8BAA8Bf,EAAQpF,EAASoG,GAAc,CACpE,MAAMld,EAAWkd,EAAcrd,gBAAgBiX,EAASoG,GAAe,EACvEhB,EAAO7Z,QAAUrC,EACjB8W,EAAQ/V,EAAIvD,KAAKsf,gBAAgB9c,EAAUkc,EAAO7Z,QAClD6Z,EAAOT,SAASza,KAAK8V,GACrBoF,EAAOb,iBAAmB9W,KAAKC,KAChC,CACF,CAED,SAAAkZ,CAAUxB,GAER5d,uBAAAd,KAAYif,GAAA,KAACze,KAAK,YAAa,CAAEke,WACjC1e,KAAKkf,QAAQ1b,KAAKkb,GAClB1e,KAAK6d,iBAAmB9W,KAAKC,MAC7BhH,KAAKmgB,cAAWhK,EAChBnW,KAAKoU,aAAU+B,CAChB,CAED,YAAAiK,CAAaC,GAEXvf,uBAAAd,KAAYif,GAAA,KAACze,KAAK,eAAgB,CAAE6f,kBACpC,MAAMC,EAActgB,KAAKkf,QAAQqB,WAAWtF,GAAuBA,EAAE2C,KAAOyC,EAAczC,MACrE,IAAjB0C,IACFD,EAAcxC,iBAAmB9W,KAAKC,MACtChH,KAAKkf,QAAQsB,OAAOF,EAAa,EAAGD,GACpCrgB,KAAK6d,iBAAmB9W,KAAKC,MAC7BhH,KAAKmgB,cAAWhK,EAChBnW,KAAKoU,aAAU+B,GAEjBrV,uBAAAd,KAAYif,GAAA,KAAChf,MAAM,eAAgBD,KAAKkf,QACzC,CAED,YAAAuB,CAAa7C,GAEX9c,uBAAAd,KAAYif,GAAA,KAACze,KAAK,eAAgB,CAAEod,OACpC,MAAM0C,EAActgB,KAAKkf,QAAQqB,WAAUtF,GAAKA,EAAE2C,KAAOA,KACpC,IAAjB0C,IACFtgB,KAAKmf,UAAUC,mBACfpf,KAAKmf,UAAUE,uBACfrf,KAAKkf,QAAQsB,OAAOF,EAAa,GACjCtgB,KAAK6d,iBAAmB9W,KAAKC,MAC7BhH,KAAKmgB,cAAWhK,EAChBnW,KAAKoU,aAAU+B,GAEjBrV,uBAAAd,KAAYif,GAAA,KAAChf,MAAM,eAAgBD,KAAKkf,QACzC,CAED,sBAAAwB,CAAuBzX,GAErBnI,uBAAAd,KAAYif,GAAA,KAACze,KAAK,yBAA0B,CAAEyI,UAC9C,MAAMuB,EAAUxK,KAAK6f,mBAAmB5W,GAMxC,OALAuB,EAAQhJ,SAAQmf,IAEd3gB,KAAKygB,aAAaE,EAAe/C,GAAG,IAEtC9c,uBAAAd,aAAaC,MAAM,yBAA0BuK,EAAQpE,KAAI6U,GAAKA,EAAE2C,MACzDpT,EAAQpE,KAAI6U,GAAKA,EAAE2C,IAC3B,CAED,oBAAAgD,GAEE,OAAO5gB,KAAKkf,QAAQvD,MAAM3b,KAAKmf,UAAUC,iBAC1C,CAED,iBAAAyB,CAAkB5X,EAAiB6O,EAAmBiG,EAAqB9B,EAAkB6E,EAAM,IAGjG,GADAhgB,uBAAAd,KAAYif,GAAA,KAACze,KAAK,oBAAqB,CAAEyI,QAAO6O,YAAWiG,cAAa9B,QAAO6E,QAC3E7E,EAAM,uBAAwB,CAChC,MAAM8E,EAAW9E,EAAM,uBAAyB6E,EAAO,KACvD7E,EAAM9S,MAAQ4X,EAAU,CACzB,CACD/gB,KAAK6d,iBAAmB9W,KAAKC,MAC7BhH,KAAKoU,aAAU+B,EACfnW,KAAKghB,cAAgB,IAAIlD,OAAO7B,EAAOnE,EAAWiG,GAClDjd,uBAAAd,KAAYif,GAAA,KAAChf,MAAM,oBAAqBD,KAAKghB,eAC7ChhB,KAAKggB,SAAShgB,KAAKghB,cAAe/X,EACnC,CAED,qBAAAgY,CAAsBhY,GAEpBnI,uBAAAd,KAAYif,GAAA,KAACze,KAAK,wBAAyB,CAAEyI,UACzCjJ,KAAKghB,eACPhhB,KAAKggB,SAAShgB,KAAKghB,cAAe/X,GAEpCnI,uBAAAd,KAAYif,GAAA,KAAChf,MAAM,wBAAyBD,KAAKghB,cAClD,CAED,gBAAAE,CAAiBjY,GAEfnI,uBAAAd,KAAYif,GAAA,KAACze,KAAK,mBAAoB,CAAEyI,UACpCjJ,KAAKghB,gBACPhhB,KAAKggB,SAAShgB,KAAKghB,cAAe/X,GAClCjJ,KAAKkgB,UAAUlgB,KAAKghB,eACpBhhB,KAAKghB,mBAAgB7K,GAEvBrV,uBAAAd,KAAYif,GAAA,KAAChf,MAAM,mBAAoBD,KAAKghB,cAC7C,CAED,kBAAAG,CAAmBC,EAAmBphB,KAAKkf,QAAQra,QAEjD/D,uBAAAd,KAAYif,GAAA,KAACze,KAAK,qBAAsB,CAAE4gB,aAC1CphB,KAAKmf,UAAUC,iBAAmBgC,EAClCtgB,uBAAAd,KAAIif,GAAA,KAAShf,MAAM,qBAAsBD,KAAKmf,UAAUC,iBACzD,CAED,sBAAAiC,GAEEvgB,uBAAAd,KAAYif,GAAA,KAACze,KAAK,0BAClBR,KAAKmf,UAAUE,qBAAuBrf,KAAKmf,UAAUC,iBACrDte,uBAAAd,KAAIif,GAAA,KAAShf,MAAM,yBAA0BD,KAAKmf,UAAUE,qBAC7D,CAED,WAAAiC,CAAYlN,GAEVtT,uBAAAd,KAAYif,GAAA,KAACze,KAAK,cAAe,CAAE4T,YAC/BpU,KAAKoU,QACP9S,OAAOwG,OAAO9H,KAAKoU,QAASA,GAE5BpU,KAAKoU,QAAUA,EAEjBtT,uBAAAd,KAAYif,GAAA,KAAChf,MAAM,cAAeD,KAAKoU,QACxC,CAED,YAAAmN,CAAapB,GAEXrf,uBAAAd,KAAYif,GAAA,KAACze,KAAK,eAAgB,CAAE2f,aAChCngB,KAAKmgB,SACP7e,OAAOwG,OAAO9H,KAAKmgB,SAAUA,GAE7BngB,KAAKmgB,SAAWA,EAElBrf,uBAAAd,KAAYif,GAAA,KAAChf,MAAM,eAAgBD,KAAKmgB,SACzC,CAED,QAAAjC,GAEEpd,uBAAAd,KAAYif,GAAA,KAACze,KAAK,YAClB,MAAMghB,EAAc,IAAI3C,MAAM7e,KAAKmJ,MAAOnJ,KAAK8e,OAAQ9e,KAAK+e,UAAW/e,KAAK2d,cAS5E,OARA6D,EAAY3D,iBAAmBnP,KAAKC,MAAMD,KAAKE,UAAU5O,KAAK6d,mBAC9D2D,EAAYR,cAAgBhhB,KAAKghB,cAAgBhhB,KAAKghB,cAAc9C,gBAAa/H,EACjFqL,EAAYtC,QAAUlf,KAAKkf,QAAQ9Y,KAAI6U,GAAKA,EAAEiD,aAC9CsD,EAAYrC,UAAYzQ,KAAKC,MAAMD,KAAKE,UAAU5O,KAAKmf,YACvDqC,EAAYpN,QAAUpU,KAAKoU,QAAU1F,KAAKC,MAAMD,KAAKE,UAAU5O,KAAKoU,eAAY+B,EAChFqL,EAAYrB,SAAWngB,KAAKmgB,SAAWzR,KAAKC,MAAMD,KAAKE,UAAU5O,KAAKmgB,gBAAahK,EACnFqL,EAAY7L,KAAO3V,KAAK2V,KACxB7U,uBAAAd,KAAYif,GAAA,KAAChf,MAAM,WAAY,CAAEuhB,gBAC1BA,CACR,CAED,KAAAC,GAEE3gB,uBAAAd,KAAYif,GAAA,KAACze,KAAK,SAClBR,KAAK6d,iBAAmB9W,KAAKC,MAC7BhH,KAAKghB,mBAAgB7K,EACrBnW,KAAKkf,QAAU,GACflf,KAAKmf,UAAUC,iBAAmB,EAClCpf,KAAKmf,UAAUE,qBAAuB,EACtCrf,KAAKoU,aAAU+B,EACfnW,KAAKmgB,cAAWhK,EAChBnW,KAAK2V,MAAO,CACb,uBCxNU+L,eAOX,WAAA7hB,CAAY4I,EAAoCkZ,GALhDC,GAAA1gB,IAAAlB,KAAUW,cAAcC,UAAS,eAO/BE,uBAAAd,KAAI4hB,GAAA,KAASphB,KAAK,cAAe,CAAEiI,eAAckZ,sBACjD3hB,KAAK6hB,oBAAsBpZ,EAC3BzI,KAAK8hB,yBAA2BH,CACjC,CAED,OAAII,GAEF,MAAO,GAAI/hB,KAAK6hB,oBAAoB1Z,YAAcnI,KAAK6hB,oBAAoBxZ,0BAC5E,CAED,cAAI2Z,GAEF,OAAQhiB,KAAK8hB,yBAAyBrV,MACpC,IAAK,UACH,MAAO,CACLjE,KAAMxI,KAAK8hB,yBAAyBtZ,KACpC6D,QAASrM,KAAK8hB,yBAAyBzV,QACvCC,OAAQtM,KAAK8hB,yBAAyBxV,QAE1C,IAAK,OACH,MAAO,CACL9D,KAAMxI,KAAK8hB,yBAAyBtZ,KACpC+D,KAAMvM,KAAK8hB,yBAAyBvV,KACpCD,OAAQtM,KAAK8hB,yBAAyBxV,QAE1C,IAAK,cACH,MAAO,CACL9D,KAAMxI,KAAK8hB,yBAAyBtZ,KACpC,cAAexI,KAAK8hB,yBAAyB,eAC7CxV,OAAQtM,KAAK8hB,yBAAyBxV,QAE1C,IAAK,OACH,MAAO,CACL9D,KAAMxI,KAAK8hB,yBAAyBtZ,KACpCiC,KAAMzK,KAAK8hB,yBAAyBrX,KACpC6B,OAAQtM,KAAK8hB,yBAAyBxV,QAE1C,QACE,MAAM,IAAI+D,MAAM,gDAAiDrQ,KAAK8hB,yBAAyBrV,SAGpG,CAES,SAAAwV,CAAU/K,GAElBpW,uBAAAd,KAAY4hB,GAAA,KAACphB,KAAK,YAAa,CAAE0W,UACjC,MASMgL,EAAwC,GAC9ChL,EAAMgI,QAAQ1d,SAASyZ,IAErB,MAAMkH,EAAaD,EAAsB3B,WAAU6B,IAAMC,OAZlCC,EAYkDF,EAAGhG,SAZrCmG,EAY+CtH,EAAEgB,MAVjFqG,GAAOC,GAAOD,EAAI,8BAAgCC,EAAI,6BAC3DD,EAAI,8BAAgCC,EAAI,6BACxCD,EAAI,yBAA2BC,EAAI,wBACnCD,EAAIlI,QAAUmI,EAAInI,OAClBkI,EAAInZ,QAAUoZ,EAAIpZ,MANE,IAACmZ,EAAgBC,CAYuD,IAC1FJ,GAAc,EAChBD,EAAsBC,GAAY3X,QAAQhH,KAAKyX,GAE/CiH,EAAsB1e,KAAK,CACzB4Y,SAAUnB,EAAEgB,MACZzR,QAAS,CAACyQ,IAEb,IAGH,MAAMuH,EAA2C,GACjDN,EAAsB1gB,SAASihB,IAE7B,MACMC,EAAW,CACftG,SAFqD,OAAnC1N,KAAKE,UAAU6T,EAAMrG,eAAqBjG,EAAY2F,GAAYK,cAAcsG,EAAMrG,UAGxG5R,QAASiY,EAAMjY,QAAQpE,KAAI6U,GAAKA,EAAEmD,kBAEpCoE,EAAmBhf,KAAKkf,EAAS,IAGnC,MAAMC,EAA6D,gBAAvC3iB,KAAK8hB,yBAAyBrV,KACxD,cACAzM,KAAK8hB,yBAAyBrV,KAAKmW,OAAO,GAAGC,cAAgB7iB,KAAK8hB,yBAAyBrV,KAAKkP,MAAM,GAAGmH,cAErG3iB,EAAO,CACX8H,cAAejI,KAAKgiB,WACpBe,KAAM,GACNC,KAAM,GACNL,cACA7D,OAAQ5H,EAAM4H,OACd3V,MAAO+N,EAAM/N,MACb8Z,aAAcT,GAGhB,OADA1hB,uBAAAd,KAAY4hB,GAAA,KAAC3hB,MAAM,YAAa,CAAEE,SAC3BA,CACR,CAEe,IAAA+iB,CAAK/iB,EAAegjB,oDAElCriB,uBAAAd,KAAI4hB,GAAA,KAASphB,KAAK,OAAQ,CAAEL,OAAMgjB,aAClC,MAAMC,EAAU,IAAIC,QACpBD,EAAQE,OAAO,SAAU,oBAAsBH,GAC/CC,EAAQE,OAAO,iBAAkBtjB,KAAK6hB,oBAAoB3c,gBAC1D,IACE,MAAMqe,QAAate,YAAYyJ,KAAKE,UAAUzO,GAAOH,KAAK6hB,oBAAoB3c,eAAgBlF,KAAK6hB,oBAAoB1c,SACvHie,EAAQE,OAAO,OAAQC,EACxB,CAAC,MAAO7iB,GACPI,uBAAAd,aAAaU,MAAM,mBAAoBA,EACxC,CACD0iB,EAAQE,OAAO,eAAgB,oBAE3Bhf,yBAAyBtE,KAAK6hB,oBAAoBxU,QAAS,WAC7D+V,EAAQE,OAAO,uBAAwB,WACvCF,EAAQE,OAAO,0BAA2B,uBAG5C,MAAME,EAAuB,CAC3BC,OAAQ,OACRL,UACAM,KAAMhV,KAAKE,UAAUzO,IAEjBwjB,EAAU,IAAIC,QAAQ5jB,KAAK+hB,IAAKyB,GAChC9a,QAA2BC,MAAMgb,GACvC,GAAIjb,EAASmb,GAAI,CAEf,IAAIjb,EACJ,OAFoBF,EAAS0a,QAAQjiB,IAAI,iBAGvC,IAAK,4EACL,IAAK,YACL,IAAK,aACHyH,QAAeF,EAASob,OACxB,MACF,IAAK,mBACHlb,QAAeF,EAASG,OACxB,MACF,IAAK,gCACHD,QAAeF,EAASyV,QAAQtV,OAAOkb,OAAM,IAAW3hB,UAAApC,UAAA,OAAA,GAAA,YAAC,aAAM0I,EAAS+B,MAAM,MAC9E,MACF,QACE7B,QAAeF,EAAS+B,OAI5B,OADA3J,uBAAAd,KAAY4hB,GAAA,KAAC3hB,MAAM,OAAQ,CAAE2I,WACtBA,CACR,CAAM,CACL,MAAM6L,QAAY/L,EAASG,OAE3B,MADA/H,uBAAAd,KAAY4hB,GAAA,KAAClhB,MAAM,OAAQ,CAAE+T,QACvBA,CACP,IACF,CAEe,QAAAuP,CAAS7jB,EAAqBgjB,oDAG5C,OADAriB,uBAAAd,KAAI4hB,GAAA,KAAS3hB,MAAM,WAAY,CAAEE,OAAMgjB,aAChCnjB,KAAKkjB,KAAK/iB,EAAMgjB,GACpBc,MAAMC,IAEL,MAAM9P,EAAmB,CAAA,EAGzB,OAFAA,EAAQ+O,GAAYe,EACpBpjB,uBAAAd,KAAY4hB,GAAA,KAAC3hB,MAAM,WAAY,CAAEmU,YAC1BA,CAAO,IAEf2P,OAAOtP,IAEN3T,uBAAAd,KAAI4hB,GAAA,KAASlhB,MAAM,WAAY,CAAEP,OAAMgjB,WAAU1O,QACjD,IAAInU,EAAUmU,EAAInU,SAAW6jB,EAAW1T,OACnCgE,EAAI2P,KAEe,uBAAb3P,EAAI2P,OACb9jB,EAAU6jB,EAAW5T,mBAFrBjQ,EAAU6jB,EAAWxT,eAKvB,MADc,IAAIN,MAAM/P,EACb,MAEhB,CAES,YAAA+jB,CAAaC,GAErBxjB,uBAAAd,KAAY4hB,GAAA,KAACphB,KAAK,eAAgB,CAAE8jB,uBACpC,IAAIha,EAAsBga,GAAsB,GAChD,IAAKha,EAAUzF,OACb,OAAQ7E,KAAK8hB,yBAAyBrV,MACpC,IAAK,UACHnC,EAAYtK,KAAK8hB,yBAAyBzV,QAAQ/B,UAClD,MACF,IAAK,OACHA,EAAYtK,KAAK8hB,yBAAyBvV,KAAKjC,UAC/C,MACF,IAAK,cACHA,EAAY,CAAC,iCACb,MACF,IAAK,OACHA,EAAYtK,KAAK8hB,yBAAyBrX,KAAKH,UAC/C,MACF,QACE,MAAM,IAAI+F,MAAM,qBAAsBrQ,KAAK8hB,yBAAyBrV,qFAI1E,OAAOnC,CACR,CAEK,OAAAF,CAAQ8M,EAAc/B,EAAqCmP,oDAE/DxjB,uBAAAd,KAAI4hB,GAAA,KAASphB,KAAK,UAAW,CAAE0W,QAAO/B,kBAAiBmP,uBACvD,MAAMC,EAAUrN,EAAMgH,WAChB5T,EAAYtK,KAAKqkB,aAAaC,GAC9BE,EAAgBxkB,KAAKiiB,UAAUsC,GACrCC,EAAcrP,gBAAkBA,EAChC,MAAMsP,EAAWna,EAAUlE,KAAIse,GAAM1kB,KAAKgkB,SAASQ,EAAeE,KAOlE,aANiC1iB,QAAQ2iB,IAAIF,IACrCjjB,SAAQ+V,IAEdgN,EAAQhD,aAAahK,EAAE,IAEzBzW,uBAAAd,KAAI4hB,GAAA,KAAS3hB,MAAM,UAAW,CAAEiX,MAAOqN,IAChCA,IACR,CAEK,OAAOrN,EAAcoN,oDAEzBxjB,uBAAAd,KAAI4hB,GAAA,KAASphB,KAAK,SAAU,CAAE0W,QAAOoN,uBACrC,MAAMC,EAAUrN,EAAMgH,WACtB,GAA+B,IAA3BqG,EAAQrF,QAAQra,OAClB,OAAO7C,QAAQC,QAAQsiB,GAEzB,MAAMja,EAAYtK,KAAKqkB,aAAaC,GACpC,IAAKha,EAAUzF,OAEb,OADA/D,uBAAAd,KAAY4hB,GAAA,KAAClhB,MAAM,SAAU,CAAEwW,QAAOoN,qBAAoB,kEAAmEM,SACtH5iB,QAAQE,OAAO,IAAImO,MAAM,oEAElC,MAAMwU,EAAqCva,EAAUwa,QAAOrK,IAAM8J,EAAQnQ,UAAYmQ,EAAQnQ,QAAQqG,KAChGta,EAAOH,KAAKiiB,UAAU/K,GAO5B,aANiClV,QAAQ2iB,IAAIE,EAAyBze,KAAI+c,GAAYnjB,KAAKgkB,SAAS7jB,EAAMgjB,OAClG3hB,SAAQ+V,IAEdgN,EAAQjD,YAAY/J,EAAE,IAExBzW,uBAAAd,KAAI4hB,GAAA,KAAS3hB,MAAM,SAAU,CAAEiX,MAAOqN,IAC/BA,IACR,CAEK,MAAAQ,CAAO7N,oDAGX,OADApW,uBAAAd,KAAY4hB,GAAA,KAACphB,KAAK,SAAU,CAAE0W,UACvBlX,KAAKsM,OAAO4K,KACpB,uBCnQU8N,aAoCX,WAAAnlB,CAAY4I,EAAoCkZ,GAlChDsD,GAAA/jB,IAAAlB,KAAUW,cAAcC,UAAS,eAKvBZ,KAASklB,UAAG,EACZllB,KAAiBmlB,kBAAG,EA8B5BnlB,KAAK6hB,oBAAsBpZ,EAC3BzI,KAAK8hB,yBAA2BH,EAChC,MAAMxZ,EAA8C,UAApCnI,KAAK6hB,oBAAoB1Z,OAAsB,MAAQ,KACvEnI,KAAK+hB,IAAM,GAAI5Z,OAAcnI,KAAK6hB,oBAAoBxZ,8CAAgDrI,KAAK6hB,oBAAoB3c,iBAC/HpE,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,cAAe,CAAEiI,eAAckZ,oBAAmBI,IAAK/hB,KAAK+hB,KAC/E,CAED,aAAIzX,GAEF,OAAQtK,KAAK8hB,yBAAyBrV,KAAK2Y,qBACzC,IAAK,OACH,OAAOplB,KAAK8hB,yBAAyBrX,KAAKH,UAC5C,IAAK,OACH,OAAOtK,KAAK8hB,yBAAyBvV,KAAKjC,UAC5C,QACE,MAAM,IAAI+F,MAAM,mCAAoCrQ,KAAK8hB,yBAAyBrV,SAEvF,CAED,iBAAI4Y,GAEF,OAAOvS,cAAcO,aACtB,CAES,YAAAiS,GAERtlB,KAAKklB,YACDllB,KAAK6hB,oBAAoBtU,UAAUG,iBAAmB1N,KAAKklB,UAC7DllB,KAAKulB,OAAOC,MAAM,IAAM,aACfxlB,KAAKulB,OAAOE,YAAc,GACnCC,YAAW,KAEL1lB,KAAKulB,OAAOE,YAAc,IAC5BzlB,KAAKulB,OAAOI,KAAKjX,KAAKE,UAAU,CAAEnC,KAAM,UACxCzM,KAAKslB,eACN,GACAtlB,KAAK6hB,oBAAoBtU,UAAUE,UAEzC,CAES,YAAAmY,SAEQ,QAAhB7kB,EAAAf,KAAK6lB,iBAAW,IAAA9kB,GAAAA,EAAAkB,UAChB,MAAM6jB,EAA0B,CAC9BrZ,KAAMzM,KAAK+lB,UAAY,qBAAuB,oBAC9CC,cAAehmB,KAAK+lB,UACpB7gB,eAAgBlF,KAAK6hB,oBAAoB3c,eACzC+gB,KAAM,GACNC,KAAM,GACNC,eAAgBnmB,KAAKmmB,eACrBC,cAAepmB,KAAKomB,eAElB9hB,yBAAyBtE,KAAK6hB,oBAAoBxU,QAAS,WAC7DyY,EAAO,wBAA0B,UACjCA,EAAO,2BAA6B,sBAEtC9lB,KAAK2lB,KAAKG,EACX,CAES,qBAAAO,CAAsB3lB,gDAEV,UAAhBV,KAAK6lB,iBAAW,IAAA9kB,OAAA,EAAAA,EAAAe,aACJ,QAAdsG,EAAApI,KAAK6lB,iBAAS,IAAAzd,GAAAA,EAAElG,OAAOxB,KAEH,UAAlBV,KAAKsmB,mBAAa,IAAAhe,OAAA,EAAAA,EAAAxG,aACJ,QAAhBiN,EAAA/O,KAAKsmB,mBAAW,IAAAvX,GAAAA,EAAE7M,OAAOxB,KAEC,UAAxBV,KAAKumB,yBAAmB,IAAAtX,OAAA,EAAAA,EAAAnN,aACJ,QAAtBkN,EAAAhP,KAAKumB,yBAAiB,IAAAvX,GAAAA,EAAE9M,OAAOxB,KAER,UAArBV,KAAKwmB,sBAAgB,IAAAtX,OAAA,EAAAA,EAAApN,aACJ,QAAnB2kB,EAAAzmB,KAAKwmB,sBAAc,IAAAC,GAAAA,EAAEvkB,OAAOxB,KAEJ,UAAtBV,KAAK0mB,uBAAiB,IAAAC,OAAA,EAAAA,EAAA7kB,aACJ,QAApB8kB,EAAA5mB,KAAK0mB,uBAAe,IAAAE,GAAAA,EAAE1kB,OAAOxB,KAEN,UAArBV,KAAK6mB,sBAAgB,IAAAC,OAAA,EAAAA,EAAAhlB,aACJ,QAAnBilB,EAAA/mB,KAAK6mB,sBAAc,IAAAE,GAAAA,EAAE7kB,OAAOxB,KAEL,UAArBV,KAAKgnB,sBAAgB,IAAAC,OAAA,EAAAA,EAAAnlB,aACJ,QAAnBolB,EAAAlnB,KAAKgnB,sBAAc,IAAAE,GAAAA,EAAEhlB,OAAOxB,KAEP,UAAnBV,KAAKmnB,oBAAc,IAAAC,OAAA,EAAAA,EAAAtlB,aACJ,QAAjBulB,EAAArnB,KAAKmnB,oBAAY,IAAAE,GAAAA,EAAEnlB,OAAOxB,KAEL,UAAnBV,KAAKsnB,oBAAc,IAAAC,OAAA,EAAAA,EAAAzlB,aACJ,QAAjB0lB,EAAAxnB,KAAKsnB,oBAAY,IAAAE,GAAAA,EAAEtlB,OAAOxB,KAEJ,UAApBV,KAAKynB,qBAAe,IAAAC,OAAA,EAAAA,EAAA5lB,YACtB9B,KAAKynB,cAAcvlB,OAAOxB,IAEE,UAA1BV,KAAK2nB,2BAAqB,IAAAC,OAAA,EAAAA,EAAA9lB,YAC5B9B,KAAK2nB,oBAAoBzlB,OAAOxB,EAEnC,CAES,aAAAmnB,CAAc7T,GAEtB,IAAI1T,EAAU,GACd,IAAKN,KAAK8nB,iBACR,OAAQ9T,EAAIoQ,MACV,KAAK,IAEH,MACF,KAAK,KACH9jB,EAAU6jB,EAAWvT,WACrB,MACF,KAAK,KACHtQ,EAAU6jB,EAAWtT,eACrB,MACF,KAAK,KACHvQ,EAAU6jB,EAAWrT,iBACrB,MACF,KAAK,KACHxQ,EAAU6jB,EAAWzT,iBACrB,MACF,KAAK,KACHpQ,EAAU6jB,EAAWpT,sBACrB,MACF,KAAK,KACHzQ,EAAU6jB,EAAWnT,iBACrB,MACF,KAAK,KACH1Q,EAAU6jB,EAAWlT,gBACrB,MACF,KAAK,KACH3Q,EAAU6jB,EAAWjT,eACrB,MACF,KAAK,KACH5Q,EAAU6jB,EAAWhT,gBACrB,MACF,KAAK,KACH7Q,EAAU6jB,EAAW/S,UACrB,MACF,KAAK,KACH9Q,EAAU6jB,EAAW9S,YACrB,MACF,KAAK,KACH/Q,EAAU6jB,EAAW7S,cACrB,MACF,QACExQ,uBAAAd,KAAIilB,GAAA,KAASxkB,KAAK,gBAAiB,yBAA0B,CAAEuT,QAC/D1T,EAAU6jB,EAAWxT,eAI3B,MAAMjQ,EAAQ,IAAI2P,MAAM/P,GAAW0T,EAAI+T,QAEvC/nB,KAAKqmB,sBAAsB3lB,GAEtBV,KAAK8nB,kBAAiC,MAAb9T,EAAIoQ,MAChCpkB,KAAKqlB,cAAc7Q,UAAU9T,EAEhC,CAEe,gBAAAsnB,CAAiBC,0DAE/BnnB,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,mBAAoB,CAAEynB,qBACxC,MAAMC,EAAuBD,EACzBC,EAAqBC,eACvBnoB,KAAK2lB,KAAK,CACRlZ,KAAM,OACN8W,WAAYte,YAAYijB,EAAqBC,cAAenoB,KAAK6hB,oBAAoB3c,eAAgBlF,KAAK6hB,oBAAoB1c,WAG9H+iB,EAAqBlC,gBACvBhmB,KAAK+lB,UAAYmC,EAAqBlC,eAGxC,MAAMrE,EAAoBpE,gBAAgBvd,KAAK8hB,0BAC1Cxd,yBAAyBtE,KAAK6hB,oBAAoBxU,QAAS,iBACvDsU,EAAkBvX,QAE3BpK,KAAK2lB,KAAUrkB,OAAAwG,OAAAxG,OAAAwG,OAAA,GAAA6Z,IAAmBlV,KAAM,mBACtB,QAAlB1L,EAAAf,KAAKooB,mBAAa,IAAArnB,GAAAA,EAAAkB,YACnB,CAEe,sCAAAomB,0DAEdroB,KAAKmlB,kBAAoB,QACD,UAAlBnlB,KAAKooB,mBAAa,IAAArnB,OAAA,EAAAA,EAAAgB,QACxBjB,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,0CACdR,KAAKsoB,cACPtoB,KAAK2lB,KAAK,CAAElZ,KAAM,kBAAmBmR,GAAI5d,KAAKsoB,cAAehe,UAAWtK,KAAKsK,YAG7EtK,KAAK2lB,KAAK,CAAElZ,KAAM,iBAAkBkW,YAAa3iB,KAAK8hB,yBAAyBrV,KAAMnC,UAAWtK,KAAKsK,cAExG,CAES,uBAAAie,CAAwBN,SAEhCnnB,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,0BAA2B,CAAEynB,qBAC/C,MAAMO,EAAoBP,EAC1BjoB,KAAKsoB,cAAgBE,EAAkBC,OACrB,QAAlB1nB,EAAAf,KAAKsmB,mBAAa,IAAAvlB,GAAAA,EAAAkB,SACnB,CAES,mBAAAymB,CAAoBT,yBAE5BnnB,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,sBAAuB,CAAEynB,qBAC3C,MAAMU,EAAgBV,EAClBU,EAAcvU,QAAQ,mCACxBuU,EAAcvU,QAAQ,iCAAmC1F,KAAKC,MAAMga,EAAcvU,QAAQ,iCAAiC9N,aAE3G,QAAlBvF,EAAAf,KAAKsmB,mBAAa,IAAAvlB,GAAAA,EAAAkB,UACM,QAAxBmG,EAAApI,KAAKumB,yBAAmB,IAAAne,GAAAA,EAAAnG,QAAQ0mB,EAAcvU,SACzB,QAArB9L,EAAAtI,KAAKwmB,sBAAgB,IAAAle,GAAAA,EAAArG,QAAQ0mB,EAAcvU,SACrB,QAAtBrF,EAAA/O,KAAK0mB,uBAAiB,IAAA3X,GAAAA,EAAA9M,QAAQ0mB,EAAcvU,SACvB,QAArBnF,EAAAjP,KAAK6mB,sBAAgB,IAAA5X,GAAAA,EAAAhN,QAAQ0mB,EAAcvU,SACxB,QAAnBpF,EAAAhP,KAAKmnB,oBAAc,IAAAnY,GAAAA,EAAA/M,QAAQ0mB,EAAcvU,SACtB,QAAnBlF,EAAAlP,KAAKsnB,oBAAc,IAAApY,GAAAA,EAAAjN,QAAQ0mB,EAAcvU,SACrB,QAApBqS,EAAAzmB,KAAKynB,qBAAe,IAAAhB,GAAAA,EAAAxkB,QAAQ0mB,EAAcvU,SACV,QAAhCuS,EAAA3mB,KAAK4oB,iCAA2B,IAAAjC,GAAAA,EAAA1kB,QAAQ0mB,EAAcvU,SACtDpU,KAAKqlB,cAAclR,aAAawU,EAAcvU,QAC/C,CAEe,iBAAAyU,0DAEd7oB,KAAKqlB,cAAc3P,UAAS,GACF,QAA1B3U,EAAAf,KAAK2nB,2BAAqB,IAAA5mB,GAAAA,EAAAkB,YAC3B,CAES,kBAAA6mB,CAAmBb,WAE3B,MAAMxT,EAAMwT,EACZjoB,KAAK8nB,kBAA2B,UAARrT,EAAItU,YAAI,IAAAY,OAAA,EAAAA,EAAEqjB,OAAQ3P,EAAI2P,KAC9C,IAAI9jB,GAAkB,QAAR8H,EAAAqM,EAAItU,YAAI,IAAAiI,OAAA,EAAAA,EAAE9H,UAAWmU,EAAInU,SAAW6jB,EAAW1T,OAE7D,OAAQzQ,KAAK8nB,kBACX,IAAK,cACHxnB,EAAU6jB,EAAW7T,YACrB,MACF,IAAK,qBACHhQ,EAAU6jB,EAAW5T,kBACrB,MACF,IAAK,kBACHjQ,EAAU6jB,EAAW3T,QAGzB,MAAM9P,EAAQ,IAAI2P,MAAM/P,GACxBN,KAAKqmB,sBAAsB3lB,GAC3BV,KAAKqlB,cAAc7Q,UAAU9T,EAC9B,CAES,0BAAAqoB,CAA2Bd,GAEnCnnB,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,6BAA8B,CAAEynB,qBAClD,MAAMe,EAAuBf,EACvBzS,EAA4B,CAChCyT,QAASD,EAAqBC,QAC9BC,QAASF,EAAqBE,QAC9BlS,MAAOgS,EAAqBhS,MAC5BmS,WAAYH,EAAqBI,eACjCC,kBAAmBL,EAAqBK,kBACxCC,MAAO,IAETtpB,KAAKqlB,cAAc9P,kBAAkBC,EACtC,CAES,qBAAA+T,CAAsBtB,SAE9BnnB,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,wBAAyB,CAAEynB,qBACxB,QAArBlnB,EAAAf,KAAKgnB,sBAAgB,IAAAjmB,GAAAA,EAAAkB,UACrB,MAAMunB,EAAkBvB,EACxBjoB,KAAKqlB,cAAc5R,aAAa+V,EACjC,CAES,eAAAC,CAAgBnpB,SAExBQ,uBAAAd,KAAYilB,GAAA,KAAChlB,MAAM,kBAAmB,CAAEK,YACxCN,KAAK8nB,sBAAmB3R,EACxB,MAAM8R,EAAoCvZ,KAAKC,MAAMrO,EAAQH,MAC7D,GAA8B,SAA1B8nB,EAAiBxb,KAEnB,OADAzM,KAAKklB,UAAY,EACT+C,EAAiBxb,MACvB,IAAK,MACHzM,KAAKgoB,iBAAiBC,GACtB,MACF,IAAK,4BACHjoB,KAAKqoB,yCACL,MACF,IAAK,cACHroB,KAAKuoB,wBAAwBN,GAC7B,MACF,IAAK,UACe,QAAlBlnB,EAAAf,KAAKsmB,mBAAa,IAAAvlB,GAAAA,EAAAkB,UAClB,MACF,IAAK,iBACHjC,KAAK+oB,2BAA2Bd,GAChC,MACF,IAAK,WACHjoB,KAAK0oB,oBAAoBT,GACzB,MACF,IAAK,WACHjoB,KAAKupB,sBAAsBtB,GAC3B,MACF,IAAK,QACHjoB,KAAK8oB,mBAAmBb,GACxB,MACF,IAAK,OACHjoB,KAAK6oB,oBACL,MACF,QACE/nB,uBAAAd,KAAIilB,GAAA,KAASxkB,KAAK,kBAAmB,yBAA0BwnB,EAAiBxb,UAGvF,CAEK,IAAAid,CAAK5K,EAAgB3V,4DAEzB,IAmBE,OAlBArI,uBAAAd,KAAIilB,GAAA,KAASzkB,KAAK,OAAQ,CAAEse,SAAQ3V,UACpCnJ,KAAK2pB,UACL3pB,KAAK6lB,UAAY,IAAIjkB,gBACrB5B,KAAKsmB,YAAc,IAAI1kB,gBACvB5B,KAAKooB,YAAc,IAAIxmB,gBACvB5B,KAAKmmB,eAAiBrH,EACtB9e,KAAKomB,cAAgBjd,EACrBnJ,KAAKklB,UAAY,EACjBllB,KAAKulB,OAAS,IAAIqE,UAAU5pB,KAAK+hB,KAE7B/hB,KAAK6hB,oBAAoBtU,UAAUC,aACrCxN,KAAKslB,eAGPtlB,KAAKulB,OAAOxR,iBAAiB,OAAQ/T,KAAK4lB,aAAaiE,KAAK7pB,OAC5DA,KAAKulB,OAAOxR,iBAAiB,QAAS/T,KAAK6nB,cAAcgC,KAAK7pB,OAC9DA,KAAKulB,OAAOxR,iBAAiB,UAAW/T,KAAKypB,gBAAgBI,KAAK7pB,OAE3DA,KAAKsmB,YAAYvkB,OAEzB,CAAC,MAAO0S,GACP,MAAM/T,EAAQ,IAAI2P,MAAM8T,EAAWxT,gBAGnC,OAFA3Q,KAAKqlB,cAAc7Q,UAAU9T,GACb,QAAhBK,EAAAf,KAAKsmB,mBAAW,IAAAvlB,GAAAA,EAAEmB,OAAOxB,GACF,UAAhBV,KAAKsmB,mBAAW,IAAAle,OAAA,EAAAA,EAAErG,OAC1B,IACF,CAEK,IAAA4jB,CAAKrlB,oDAET,OAAKN,KAAK6lB,iBAGJ7lB,KAAK6lB,UAAU9jB,QACjB/B,KAAKulB,OAAOE,aAAezlB,KAAKulB,OAAOuE,MACzChpB,uBAAAd,KAAYilB,GAAA,KAAChlB,MAAM,OAAQ,CAAEK,YAC7BN,KAAKulB,OAAOI,KAAKjX,KAAKE,UAAUtO,IACzB0B,QAAQC,WAEXjC,KAAKulB,OAAOE,YAAczlB,KAAKulB,OAAOwE,YAAc/pB,KAAK6hB,oBAAoBtU,UAAUI,eACzF3N,KAAKmlB,oBACDnlB,KAAK6hB,oBAAoBtU,UAAUK,eAAiB5N,KAAKmlB,mBAC3DrkB,uBAAAd,KAAIilB,GAAA,KAAShlB,MAAM,OAAQ,4BAA6BD,KAAKmlB,sBAC7DnlB,KAAKqlB,cAAc/Q,yBACbtU,KAAK0pB,KAAK1pB,KAAKmmB,eAAgBnmB,KAAKomB,qBACpCpmB,KAAKqd,YAAYrd,KAAKoc,gBACtBpc,KAAKod,mBAAmBpd,KAAKwd,uBAC7Bxd,KAAKmd,SAASnd,KAAKkc,OAClBlc,KAAK2lB,KAAKrlB,IAGV0B,QAAQE,OAAO,IAAImO,MAAM,8FAZpC,GAROrO,QAAQE,OAAO,IAAImO,MAAM,oCAwBnC,CAEK,UAAA2Z,CAAWxf,4DAcf,OAZA1J,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,aAAc,CAAEgK,kBACV,UAAlBxK,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB/B,KAAKumB,kBAAoB,IAAI3kB,gBACN,IAAnB4I,EAAQ3F,OACV7E,KAAKumB,kBAAkBtkB,QAAQ,CAAA,SAGzBjC,KAAK2lB,KAAK,CACdlZ,KAAM,aACNjC,QAASA,EAAQpE,KAAI6U,GAAKA,EAAEmD,mBAGH,UAAtBpe,KAAKumB,yBAAiB,IAAAne,OAAA,EAAAA,EAAErG,UAChC,CAEK,WAAAsb,CAAYjB,0DAEhBtb,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,cAAe,CAAE4b,mBACX,UAAlBpc,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB/B,KAAKoc,SAAWA,EAChB,MAAM9b,EAA2B,CAC/BmM,KAAM,cACNwP,MAAOH,GAAYK,cAAcC,IAEnC,OAAOpc,KAAK2lB,KAAKrlB,KAClB,CAEK,kBAAA8c,CAAmBI,gEAEC,UAAlBxd,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB/B,KAAKwd,gBAAkBA,EACvB1c,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,qBAAsB,CAAEgd,oBAC1C,MAAMld,EAA2B,CAC/BmM,KAAM,qBACNwd,aAAczM,GAEhB,OAAOxd,KAAK2lB,KAAKrlB,KAClB,CAEK,QAAA6c,CAASjB,0DAEbpb,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,WAAY,CAAE0b,gBACR,UAAlBlc,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB/B,KAAKkc,MAAQA,EACb,MAAM5b,EAA2B,CAC/BmM,KAAM,WACNyP,MAAOJ,GAAYC,WAAWG,IAEhC,OAAOlc,KAAK2lB,KAAKrlB,KAClB,CAEK,OAAO4W,EAAcoN,4DAEzBxjB,uBAAAd,KAAIilB,GAAA,KAASzkB,KAAK,SAAU,CAAE0W,QAAOoN,6BACb,UAAlBtkB,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB/B,KAAKwmB,eAAiB,IAAI5kB,gBAC1B,MAAMsoB,EAAahT,EAAMgH,WACzB,IAAI5T,EAAsBga,GAAsB,GAChD,IAAKha,EAAUzF,OACb,OAAQ7E,KAAK8hB,yBAAyBrV,MACpC,IAAK,UACHnC,EAAYtK,KAAK8hB,yBAAyBzV,QAAQ/B,UAClD,MACF,IAAK,OACHA,EAAYtK,KAAK8hB,yBAAyBvV,KAAKjC,UAC/C,MACF,IAAK,cACHA,EAAY,CAAC,iCACb,MACF,IAAK,OACHA,EAAYtK,KAAK8hB,yBAAyBrX,KAAKH,UAC/C,MACF,QACE,MAAM,IAAI+F,MAAM,qBAAsBrQ,KAAK8hB,yBAAyBrV,qFAI1E,IAAKnC,EAAUzF,OACb,OAAO7C,QAAQE,OAAO,IAAImO,MAAM,qDAAsDrQ,KAAK8hB,yBAAyBrV,uBAGtH,MAAMnM,EAA2B,CAC/BmM,KAAM,SACNgc,OAAQzoB,KAAKsoB,cACbhe,mBAEItK,KAAK2lB,KAAKrlB,GAChB,MAAM8T,QAA4C,QAAnBhM,EAAApI,KAAKwmB,sBAAc,IAAApe,OAAA,EAAAA,EAAErG,QAIpD,OAHAmoB,EAAW7I,yBACX6I,EAAW5I,YAAYlN,GACvBtT,uBAAAd,KAAIilB,GAAA,KAAShlB,MAAM,SAAU,CAAEiX,MAAOgT,IAC/BA,IACR,CAEK,MAAAC,CAAOjT,EAAc/W,EAAYgjB,4DAErCriB,uBAAAd,KAAIilB,GAAA,KAASzkB,KAAK,SAAU,CAAEL,OAAMgjB,mBACZ,UAAlBnjB,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB,MAAMmoB,EAAahT,EAAMgH,WACnBkM,EAAYpqB,KAAK6hB,oBAAoBtU,UAAUM,cAC/Cwc,EAAe5nB,KAAK2E,SAASd,SAAS,IAAIkV,UAAU,EAAG,GAC7Dxb,KAAK6mB,eAAiB,IAAIjlB,gBAC1B,MAAM0oB,SAAYxG,IAEhB,MAAMyG,EAAa,IAAIC,WACvB,OAAO,IAAIxoB,SAAQ,CAACC,EAASC,KAE3BqoB,EAAWE,UAAaC,UAAO,OAAAzoB,EAAiB,QAATlB,EAAA2pB,EAAGlmB,cAAM,IAAAzD,OAAA,EAAAA,EAAE6H,OAAiB,EACnE2hB,EAAWI,QAAU,IAAMzoB,IAC3BqoB,EAAWK,WAAW9G,EAAK,GAC3B,EAGE+G,EAAqC,CACzCpe,KAAM,aACN4d,eACAlH,kBAEInjB,KAAK2lB,KAAKkF,GAChB,IAAK,IAAIjmB,EAAI,EAAGA,EAAIzE,EAAK2qB,KAAMlmB,GAAKwlB,EAAW,CAC7C,MAAMW,EAAW5qB,EAAKwb,MAAM/W,EAAGA,EAAIwlB,EAAWjqB,EAAKsM,MAE7Cue,EAAoC,CACxCve,KAAM,YACN4d,eACAlqB,WAJ2BmqB,SAASS,GAKpCE,UAAWrmB,EAAIwlB,EAAYjqB,EAAK2qB,YAE5B9qB,KAAK2lB,KAAKqF,EACjB,CACD,MAAM5W,QAAmC,QAAnBhM,EAAApI,KAAK6mB,sBAAc,IAAAze,OAAA,EAAAA,EAAErG,QAG3C,OAFA/B,KAAK6mB,oBAAiB1Q,EACtB+T,EAAW5I,YAAYlN,GAChB8V,IACR,CAEK,MAAAnF,CAAO7N,4DAEXpW,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,SAAU,CAAE0W,gBACN,UAAlBlX,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB/B,KAAKgnB,eAAiB,IAAIplB,gBAC1B,MAAMsoB,EAAahT,EAAMgH,WACzBle,KAAKmmB,eAAiB+D,EAAWpL,OACjC9e,KAAKomB,cAAgB8D,EAAW/gB,MAChC,MAAM7I,EAA2B,CAC/BmM,KAAM,iBACNqS,OAAQ9e,KAAKmmB,eACbhd,MAAOnJ,KAAKomB,eAId,aAFMpmB,KAAK2lB,KAAKrlB,SACW,UAArBN,KAAKgnB,sBAAgB,IAAA5e,OAAA,EAAAA,EAAArG,QACpBmoB,IACR,CAEK,iBAAAgB,CAAkB1gB,4DAEtB1J,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,qBAAsB,CAAEgK,kBAClB,UAAlBxK,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB/B,KAAK4oB,0BAA4B,IAAIhnB,gBACrC,MAAMtB,EAA2B,CAC/BmM,KAAM,gBACN0e,OAAQ3gB,EAAQpE,KAAI6U,GAAKA,EAAEmD,kBAE7Bpe,KAAK2lB,KAAKrlB,GACV,MAAM8qB,QAAmD,QAA9BhjB,EAAApI,KAAK4oB,iCAAyB,IAAAxgB,OAAA,EAAAA,EAAErG,QAG3D,OAFA/B,KAAK4oB,+BAA4BzS,EACjCrV,uBAAAd,KAAYilB,GAAA,KAAChlB,MAAM,oBAAqB,CAAEmrB,iBACnCA,IACR,CAEK,OAAAhhB,CAAQ8M,EAAc/B,4DAE1BrU,uBAAAd,KAAIilB,GAAA,KAASzkB,KAAK,UAAW,CAAE0W,QAAO/B,0BACd,UAAlBnV,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB/B,KAAK0mB,gBAAkB,IAAI9kB,gBAC3B,MAAMsoB,EAAahT,EAAMgH,WACnB5d,EAA2B,CAC/BmM,KAAM,UACN0I,yBAEInV,KAAK2lB,KAAKrlB,GAChB,MAAM+qB,QAAuD,QAApBjjB,EAAApI,KAAK0mB,uBAAe,IAAAte,OAAA,EAAAA,EAAErG,QAI/D,OAHAmoB,EAAW7I,yBACX6I,EAAW3I,aAAa8J,GACxBvqB,uBAAAd,KAAIilB,GAAA,KAAShlB,MAAM,UAAW,CAAEiX,MAAOgT,IAChCA,IACR,CAEK,WAAAoB,kEAEoB,UAAlBtrB,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB/B,KAAK2nB,oBAAsB,IAAI/lB,gBAK/B,aADM5B,KAAK2lB,KAHsB,CAC/BlZ,KAAM,gBAGuB,UAAxBzM,KAAK2nB,2BAAmB,IAAAvf,OAAA,EAAAA,EAAErG,UAClC,CAEK,IAAAwpB,CAAKrU,4DAETpW,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,OAAQ,CAAE0W,gBACJ,UAAlBlX,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB,MAAMmoB,EAAahT,EAAMgH,WACzBle,KAAKmnB,aAAe,IAAIvlB,sBAIlB5B,KAAK2lB,KAHsB,CAC/BlZ,KAAM,SAGR,MAAM+e,QAAqC,QAAjBpjB,EAAApI,KAAKmnB,oBAAY,IAAA/e,OAAA,EAAAA,EAAErG,QAK7C,OAJAmoB,EAAW7I,yBACX6I,EAAW5I,YAAYkK,GACvB1qB,uBAAAd,KAAIilB,GAAA,KAAShlB,MAAM,OAAQ,CAAEiX,MAAOgT,IACpClqB,KAAKmnB,kBAAehR,EACb+T,IACR,CAEK,IAAAuB,CAAKvU,4DAETpW,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,OAAQ,CAAE0W,gBACJ,UAAlBlX,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB,MAAMmoB,EAAahT,EAAMgH,WACzBle,KAAKsnB,aAAe,IAAI1lB,sBAIlB5B,KAAK2lB,KAHsB,CAC/BlZ,KAAM,SAGR,MAAMif,QAAqC,QAAjBtjB,EAAApI,KAAKsnB,oBAAY,IAAAlf,OAAA,EAAAA,EAAErG,QAK7C,OAJAmoB,EAAW7I,yBACX6I,EAAW5I,YAAYoK,GACvB5qB,uBAAAd,KAAIilB,GAAA,KAAShlB,MAAM,OAAQ,CAAEiX,MAAOwU,IACpC1rB,KAAKsnB,kBAAenR,EACb+T,IACR,CAEK,KAAAzI,CAAMvK,4DAEVpW,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,QAAS,CAAE0W,gBACL,UAAlBlX,KAAKsmB,mBAAa,IAAAvlB,OAAA,EAAAA,EAAAgB,QACxB,MAAMmoB,EAAahT,EAAMgH,WACzBgM,EAAWrM,iBAAmB9W,KAAKC,MACnChH,KAAKynB,cAAgB,IAAI7lB,sBAInB5B,KAAK2lB,KAHsB,CAC/BlZ,KAAM,UAGR,MAAMkf,QAAuC,QAAlBvjB,EAAApI,KAAKynB,qBAAa,IAAArf,OAAA,EAAAA,EAAErG,QAK/C,OAJAmoB,EAAW7I,yBACX6I,EAAW5I,YAAYqK,GACvB3rB,KAAKynB,mBAAgBtR,EACrBrV,uBAAAd,KAAIilB,GAAA,KAASzkB,KAAK,QAAS,CAAE0W,MAAOgT,IAC7BA,IACR,CAED,KAAA1E,CAAMpB,EAAc2D,GAEd/nB,KAAKulB,OAAOE,aAAezlB,KAAKulB,OAAOuE,MAAQ9pB,KAAKulB,OAAOE,aAAezlB,KAAKulB,OAAOwE,aACxFjpB,uBAAAd,KAAIilB,GAAA,KAASzkB,KAAK,QAAS,CAAE4jB,OAAM2D,WACnC/nB,KAAKulB,OAAOvL,oBAAoB,QAASha,KAAK6nB,eAC9C7nB,KAAKulB,OAAOvL,oBAAoB,UAAWha,KAAKypB,iBAChDzpB,KAAKulB,OAAOvL,oBAAoB,OAAQha,KAAK4lB,cAC7C5lB,KAAKulB,OAAOC,MAAMpB,EAAM2D,GAE3B,CAED,OAAA4B,GAEE7oB,uBAAAd,KAAYilB,GAAA,KAACzkB,KAAK,WAClBR,KAAK6lB,eAAY1P,EACjBnW,KAAKsmB,iBAAcnQ,EACnBnW,KAAKooB,iBAAcjS,EACnBnW,KAAKumB,uBAAoBpQ,EACzBnW,KAAKwmB,oBAAiBrQ,EACtBnW,KAAK0mB,qBAAkBvQ,EACvBnW,KAAK6mB,oBAAiB1Q,EACtBnW,KAAKgnB,oBAAiB7Q,EACtBnW,KAAKmnB,kBAAehR,EACpBnW,KAAKsnB,kBAAenR,EACpBnW,KAAKynB,mBAAgBtR,EACjBnW,KAAKulB,SACPvlB,KAAKulB,OAAOvL,oBAAoB,QAASha,KAAK6nB,eAC9C7nB,KAAKulB,OAAOvL,oBAAoB,UAAWha,KAAKypB,iBAChDzpB,KAAKulB,OAAOvL,oBAAoB,OAAQha,KAAK4lB,cAC7C5lB,KAAKwlB,MAAM,IAAM,wBAEpB,uBCrtBUoG,oBAAb,WAAA/rB,GAEEgsB,GAAA3qB,IAAAlB,KAAUW,cAAcC,UAAS,aAEjCZ,KAAAkf,QAAU,CACR4M,MAAO,QACPC,QAAS,UACTC,KAAM,OA8IT,CA3IW,GAAAC,CAAI/iB,GAEZ,IAAIgjB,GAAkBhjB,EAAQzG,KAAK0pB,KAAiB,EAAV1pB,KAAK0pB,IAAW1pB,KAAK0pB,GAK/D,OAJID,GAAiBzpB,KAAK0pB,KACxBD,GAA2B,EAAVzpB,KAAK0pB,IAExBrrB,uBAAAd,KAAI6rB,GAAA,KAAS5rB,MAAM,MAAO,CAAEiJ,QAAOgjB,kBAC5BA,CACR,CAES,cAAAE,CAAeC,EAAqCC,GAE5DxrB,uBAAAd,KAAI6rB,GAAA,KAAS5rB,MAAM,iBAAkB,CAAEosB,YAAWC,iBAClD,MAAMC,YAAEA,EAAWC,UAAEA,EAASC,UAAEA,EAASC,YAAEA,EAAWC,WAAEA,EAAUC,WAAEA,GAAeN,EAE7EO,EAAKpqB,KAAK6G,IAAIojB,GAAeF,EAC7BM,EAAKrqB,KAAK6G,IAAIojB,GAAeD,EAC7BM,EAAKtqB,KAAK4G,IAAIqjB,GAAeF,EAC7BQ,EAAKvqB,KAAK4G,IAAIqjB,GAAeD,EAC7BlS,EAAI9X,KAAK4E,MAAM5E,KAAKmd,IAAIgN,GALZ,KAMZK,EAAmB,GACzBZ,EAAUa,OACV,IACEb,EAAUc,YACV,IAAK,IAAIvoB,EAAI,EAAGA,GAAK2V,EAAG3V,IAAK,CAC3B,MAAMsE,EAAQyjB,EAAe/nB,EAAI2V,EAAKqS,EAChCQ,EAAQ3qB,KAAKQ,MAAMR,KAAK4G,IAAIH,GAASujB,EAAWhqB,KAAK6G,IAAIJ,GAASsjB,GAClEa,EAAW5qB,KAAK6G,IAAI8jB,GACpBE,EAAW7qB,KAAK4G,IAAI+jB,GACpBxqB,EAAK2pB,EAAY3pB,EAAKiqB,EAAKQ,EAAcL,EAAKM,EAC9C3qB,EAAK4pB,EAAY5pB,EAAKmqB,EAAKQ,EAAcP,EAAKM,EAC1C,IAANzoB,EACFynB,EAAUkB,OAAO3qB,EAAGD,GAEpB0pB,EAAUmB,OAAO5qB,EAAGD,GAEZ,IAANiC,GAAWA,IAAM2V,GACnB0S,EAAiBzpB,KAAK,CAAEZ,IAAGD,KAE9B,CACD0pB,EAAU3N,QACX,CAAC,MAAMhe,GACNI,uBAAAd,KAAY6rB,GAAA,KAACnrB,MAAM,iBAAkB,CAAEA,SACxC,CAAS,QACR2rB,EAAUoB,SACX,CACD,OAAOR,CACR,CAES,QAAAS,CAASrB,EAAqC/pB,EAAYC,GAElEzB,uBAAAd,KAAI6rB,GAAA,KAAS5rB,MAAM,WAAY,CAAEosB,YAAW/pB,KAAIC,OAChD8pB,EAAUa,OACV,IACEb,EAAUc,YACVd,EAAUkB,OAAOjrB,EAAGM,EAAGN,EAAGK,GAC1B0pB,EAAUmB,OAAOjrB,EAAGK,EAAGL,EAAGI,GAC1B0pB,EAAU3N,QACX,CAAC,MAAMhe,GACNI,uBAAAd,KAAY6rB,GAAA,KAACnrB,MAAM,WAAY,CAAEA,SAClC,CAAS,QACR2rB,EAAUoB,SACX,CACF,CAES,aAAAE,CAActB,EAAqCuB,EAAmB1kB,EAAerE,GAE7F/D,uBAAAd,KAAY6rB,GAAA,KAAC5rB,MAAM,gBAAiB,CAAEosB,YAAWuB,YAAW1kB,QAAOrE,WACnE,MAAMuoB,EAAQptB,KAAKisB,IAAI/iB,EAASzG,KAAK0pB,IAAM,EAAI,IACzC0B,EAAO7tB,KAAKisB,IAAI/iB,EAASzG,KAAK0pB,IAAM,EAAI,IAC9CE,EAAUa,OACV,IACEb,EAAUyB,UAAYzB,EAAU0B,YAEhC1B,EAAUkB,OAAOK,EAAUhrB,EAAGgrB,EAAUjrB,GACxC0pB,EAAUc,YACVd,EAAUmB,OAAOI,EAAUhrB,EAAKiC,EAASpC,KAAK6G,IAAI8jB,GAASQ,EAAUjrB,EAAKkC,EAASpC,KAAK4G,IAAI+jB,IAC5Ff,EAAUmB,OAAOI,EAAUhrB,EAAKiC,EAASpC,KAAK6G,IAAIukB,GAAQD,EAAUjrB,EAAKkC,EAASpC,KAAK4G,IAAIwkB,IAC3FxB,EAAUmB,OAAOI,EAAUhrB,EAAGgrB,EAAUjrB,GACxC0pB,EAAU2B,MACX,CAAC,MAAMttB,GACNI,uBAAAd,KAAY6rB,GAAA,KAACnrB,MAAM,gBAAiB,CAAEA,SACvC,CAAS,QACR2rB,EAAUoB,SACX,CACF,CAES,gBAAAQ,CAAiB5B,EAAqCC,GAE9DxrB,uBAAAd,KAAI6rB,GAAA,KAAS5rB,MAAM,mBAAoB,CAAEosB,YAAWC,iBACpD,MAAMlpB,EAASpD,KAAKosB,eAAeC,EAAWC,GAER,gBAAlCA,aAAY,EAAZA,EAAc4B,kBAChBluB,KAAK2tB,cAActB,EAAWjpB,EAAO,GAAIkpB,EAAa6B,kBAAmB,IAEvC,gBAAhC7B,aAAY,EAAZA,EAAc8B,gBAChBpuB,KAAK2tB,cAActB,EAAWjpB,EAAO,GAAIkpB,EAAa+B,gBAAiB,GAE1E,CAES,aAAAC,CAAcjC,EAAqCkC,GAE3DztB,uBAAAd,KAAI6rB,GAAA,KAAS5rB,MAAM,gBAAiB,CAAEosB,YAAWkC,cACjDvuB,KAAK0tB,SAASrB,EAAWkC,EAAUC,WAAYD,EAAUE,WACvB,eAA9BF,EAAUL,iBACZluB,KAAK2tB,cAActB,EAAWkC,EAAUC,WAAYD,EAAUJ,kBAAmB,IAEnD,eAA5BI,EAAUH,eACZpuB,KAAK2tB,cAActB,EAAWkC,EAAUE,UAAWF,EAAUF,gBAAiB,GAEjF,CAED,IAAAK,CAAKrC,EAAqCsC,GAOxC,OALA7tB,uBAAAd,KAAI6rB,GAAA,KAASrrB,KAAK,OAAQ,CAAE6rB,YAAWsC,WACvCtC,EAAUa,OACVb,EAAUuC,UAAYD,EAAO1S,MAAM9S,MACnCkjB,EAAU0B,YAAcY,EAAO1S,MAAM7B,MAE7BuU,EAAOliB,MACb,KAAKzM,KAAKkf,QAAQ4M,MACK6C,EACRE,MAAMrtB,SAAQwqB,GAAQhsB,KAAK0tB,SAASrB,EAAWL,EAAK1pB,GAAI0pB,EAAKzpB,MAC1E,MAEF,KAAKvC,KAAKkf,QAAQ6M,QAChB/rB,KAAKiuB,iBAAiB5B,EAAWsC,GACjC,MAEF,KAAK3uB,KAAKkf,QAAQ8M,KAChBhsB,KAAKsuB,cAAcjC,EAAWsC,GAC9B,MAEF,QACE7tB,uBAAAd,KAAI6rB,GAAA,KAASprB,KAAK,OAAQ,GAAIkuB,EAAOliB,wBAG1C,uBClJUqiB,qBAAb,WAAAjvB,GAEEkvB,GAAA7tB,IAAAlB,KAAUW,cAAcC,UAAS,YAiGlC,CA/FW,SAAAouB,CAAUC,EAAqCC,EAAkB9lB,GAEzEtI,uBAAAd,KAAI+uB,GAAA,KAAS9uB,MAAM,YAAa,CAAEgvB,YAAWC,SAAQ9lB,WACrD6lB,EAAUE,IAAID,EAAOtsB,EAAGssB,EAAOvsB,EAAGyG,EAAQ,EAAa,EAAV3G,KAAK0pB,IAAQ,EAC3D,CAES,UAAAiD,CAAWH,EAAqClsB,EAAiBC,EAAemG,GAExFrI,uBAAAd,KAAY+uB,GAAA,KAAC9uB,MAAM,aAAc,CAAEgvB,YAAWlsB,QAAOC,MAAKmG,UAC1D,MAAMkmB,EAAcrmB,qBAAqBjG,EAAOD,sBAAsBC,EAAOC,GAAMmG,GAC7EmmB,EAActmB,qBAAqBhG,EAAKF,sBAAsBC,EAAOC,GAAMmG,GAEjF8lB,EAAU1B,OAAO8B,EAAY,GAAGzsB,EAAGysB,EAAY,GAAG1sB,GAClDssB,EAAUzB,OAAO8B,EAAY,GAAG1sB,EAAG0sB,EAAY,GAAG3sB,GAClDssB,EAAUzB,OAAO8B,EAAY,GAAG1sB,EAAG0sB,EAAY,GAAG3sB,GAClDssB,EAAUzB,OAAO6B,EAAY,GAAGzsB,EAAGysB,EAAY,GAAG1sB,EACnD,CAES,WAAA4sB,CAAYN,EAAqClsB,EAAiBC,EAAemG,GAEzFrI,uBAAAd,KAAY+uB,GAAA,KAAC9uB,MAAM,cAAe,CAAEgvB,YAAWlsB,QAAOC,MAAKmG,UAC3D,MACMD,EAAQpG,sBAAsBC,EAAOC,GACrCwsB,EAAaxmB,qBAAqBhG,EAAKkG,EAAOC,GACpD8lB,EAAU1B,OAAOiC,EAAW,GAAG5sB,EAAG4sB,EAAW,GAAG7sB,GAChD,IAAK,IAAIiC,EAAI,EAAGA,GAJC,EAIcA,IAAK,CAClC,MAAM6qB,EAAWvmB,EAAUtE,EAAInC,KAAK0pB,GALrB,EAMf8C,EAAUzB,OAAOxqB,EAAIJ,EAAMI,EAAIO,EAAI4F,EAAS1G,KAAK4G,IAAIomB,GAAYzsB,EAAIL,EAAKK,EAAIO,EAAI4F,EAAQ1G,KAAK6G,IAAImmB,GACpG,CACF,CAES,eAAAC,CAAgBT,EAAqClsB,EAAiBC,EAAe2sB,EAAgBxmB,GAE7GrI,uBAAAd,KAAY+uB,GAAA,KAAC9uB,MAAM,kBAAmB,CAAEgvB,YAAWlsB,QAAOC,MAAK2sB,OAAMxmB,UACrE,MAAMkmB,EAAcrmB,qBAAqBjG,EAAOD,sBAAsBC,EAAO4sB,GAAOxmB,GAC9EmmB,EAActmB,qBAAqBhG,EAAKF,sBAAsB6sB,EAAM3sB,GAAMmG,GAC1EymB,EAAc5mB,qBAAqB2mB,EAAM7sB,sBAAsBC,EAAOC,GAAMmG,GAElF8lB,EAAU1B,OAAO8B,EAAY,GAAGzsB,EAAGysB,EAAY,GAAG1sB,GAClDssB,EAAUY,iBAAiBD,EAAY,GAAGhtB,EAAGgtB,EAAY,GAAGjtB,EAAG2sB,EAAY,GAAG1sB,EAAG0sB,EAAY,GAAG3sB,GAChGssB,EAAUzB,OAAO8B,EAAY,GAAG1sB,EAAG0sB,EAAY,GAAG3sB,GAClDssB,EAAUY,iBAAiBD,EAAY,GAAGhtB,EAAGgtB,EAAY,GAAGjtB,EAAG0sB,EAAY,GAAGzsB,EAAGysB,EAAY,GAAG1sB,EACjG,CAED,IAAA+rB,CAAKO,EAAqCvQ,GAExC5d,uBAAAd,KAAI+uB,GAAA,KAASvuB,KAAK,OAAQ,CAAEyuB,YAAWvQ,WACvC,MAAMoR,EAAgBpR,EAAOT,SAASpZ,OAChCkrB,EAAoBD,EAAgB,EACpC3mB,EAASuV,EAAOzC,MAAM9S,MAAmB,EAAKuV,EAAOzC,MAAM9S,MAAmB8lB,EAAUL,UACxFxU,EAASsE,EAAOzC,MAAM7B,MAAoBsE,EAAOzC,MAAM7B,MAAmB6U,EAAUlB,YACpFS,EAAa9P,EAAOT,SAAS,GAEnCgR,EAAU/B,OACV,IAEE,GADA+B,EAAU9B,YACN2C,EAAgB,EAClB9vB,KAAKgvB,UAAUC,EAAWT,EAAoB,GAARrlB,OACjC,CACLnJ,KAAKgvB,UAAUC,EAAWT,EAAYrlB,EAAQqlB,EAAWjrB,GACzD,MAAMysB,EAAwBzmB,qBAAqBilB,EAAY9P,EAAOT,SAAS,IAC/Eje,KAAKovB,WAAWH,EAAWT,EAAYwB,EAAa7mB,GAMpD,IAAK,IAAIvE,EAAI,EAAGA,EAAImrB,EAAmBnrB,IAAK,CAC1C,MAAM7B,EAAkBwG,qBAAqBmV,EAAOT,SAASrZ,GAAI8Z,EAAOT,SAASrZ,EAAI,IAC/E5B,EAAgBuG,qBAAqBmV,EAAOT,SAASrZ,EAAI,GAAI8Z,EAAOT,SAASrZ,EAAI,IACjF+qB,EAAiBjR,EAAOT,SAASrZ,EAAI,GAC3C5E,KAAK0vB,gBAAgBT,EAAWlsB,EAAOC,EAAK2sB,EAAMxmB,EACnD,CACD,MAAM8mB,EAAsB1mB,qBAAqBmV,EAAOT,SAAS6R,EAAgB,GAAIpR,EAAOT,SAAS6R,EAAgB,IAC/GI,EAAoBxR,EAAOT,SAAS6R,EAAgB,GAC1D9vB,KAAKovB,WAAWH,EAAWgB,EAAWC,EAAS/mB,GAE/C,MAAMgnB,EAAuBzR,EAAOT,SAAS6R,EAAgB,GACvDM,EAAqB1R,EAAOT,SAAS6R,EAAgB,GAC3D9vB,KAAKuvB,YAAYN,EAAWkB,EAAYC,EAAUjnB,EACnD,CACD8lB,EAAUoB,iBACIla,IAAViE,IACF6U,EAAUnB,UAAY1T,EACtB6U,EAAUjB,QAEZiB,EAAU/B,MACX,CACD,MAAOxsB,GACLI,uBAAAd,KAAY+uB,GAAA,KAACruB,MAAM,OAAQ,CAAEA,SAC9B,CACO,QACNuuB,EAAUxB,SACX,CACF,uBCnGU6C,mBAAb,WAAAzwB,GAEE0wB,GAAArvB,IAAAlB,KAAUW,cAAcC,UAAS,aAEjCZ,KAAAkf,QAAU,CACRsR,KAAM,OACNC,OAAQ,SACRC,SAAU,WAyEb,CAtEW,aAAAC,CAActE,EAAqCuE,EAA2CC,GAEtG/vB,uBAAAd,KAAIuwB,GAAA,KAAStwB,MAAM,iBAAkB,CAAEosB,YAAWuE,gBAAeC,cACjExE,EAAUa,OACV,IACE,MAAMvN,EAAQiR,EAAczwB,KAAKgJ,MAAQynB,EAAcE,MAAMjsB,OACvDvC,EAAa,CACjBM,EAAGguB,EAAczwB,KAAK4wB,aAAanuB,EAAKiuB,EAAU1wB,KAAK6wB,eAAiBrR,EACxEhd,EAAGiuB,EAAczwB,KAAK4wB,aAAapuB,EAAIiuB,EAAczwB,KAAK2e,QAEtDvc,EAAa,CACjBK,EAAGguB,EAAczwB,KAAK4wB,aAAanuB,EAAKiuB,EAAU1wB,KAAK8wB,cAAgBtR,EACvEhd,EAAGiuB,EAAczwB,KAAK4wB,aAAapuB,EAAIiuB,EAAczwB,KAAK2e,QAE5DuN,EAAUc,YACVd,EAAUkB,OAAOjrB,EAAGM,EAAGN,EAAGK,GAC1B0pB,EAAUmB,OAAOjrB,EAAGK,EAAGL,EAAGI,GAC1B0pB,EAAU3N,QACX,CAAC,MAAMhe,GACNI,uBAAAd,KAAYuwB,GAAA,KAAC7vB,MAAM,iBAAkB,CAAEA,SACxC,CAAS,QACR2rB,EAAUoB,SACX,CACF,CAES,QAAAyD,CAAS7E,EAAqC5hB,GAEtD3J,uBAAAd,KAAIuwB,GAAA,KAAStwB,MAAM,YAAa,CAAEosB,YAAW5hB,SAC7C4hB,EAAUa,OACV,IACEb,EAAU8E,KAAO,GAAI1mB,EAAKtK,KAAKixB,qBAC/B/E,EAAUgF,UAA6C,WAAhC5mB,EAAKtK,KAAKmxB,kBAAkC,SAAW,OAC9EjF,EAAUkF,aAAe,SACzBlF,EAAUyB,UAAYzB,EAAU0B,YAChC1B,EAAUmF,SAAS/mB,EAAKqmB,MAAOrmB,EAAKtK,KAAK4wB,aAAanuB,EAAI6H,EAAKtK,KAAK4wB,aAAapuB,EAAI8H,EAAKtK,KAAK2e,OAChG,CAAC,MAAMpe,GACNI,uBAAAd,KAAYuwB,GAAA,KAAC7vB,MAAM,YAAa,CAAEA,SACnC,CAAS,QACR2rB,EAAUoB,SACX,CACF,CAES,YAAAgE,CAAapF,EAAqCuE,GAE1D9vB,uBAAAd,KAAIuwB,GAAA,KAAStwB,MAAM,gBAAiB,CAAEosB,YAAWuE,kBACjD5wB,KAAKkxB,SAAS7E,EAAWuE,GACzBA,EAAcc,cAAclwB,SAASqvB,IAEnC7wB,KAAK2wB,cAActE,EAAWuE,EAAeC,EAAU,GAE1D,CAED,IAAAnC,CAAKrC,EAAqCsC,GAKxC,OAHA7tB,uBAAAd,KAAIuwB,GAAA,KAAS/vB,KAAK,OAAQ,CAAE6rB,YAAWsC,WACvCtC,EAAUuC,UAAaD,EAAO1S,MAAM9S,MACpCkjB,EAAU0B,YAAeY,EAAO1S,MAAM7B,MAC9BuU,EAAOliB,MACb,KAAKzM,KAAKkf,QAAQsR,KAClB,KAAKxwB,KAAKkf,QAAQuR,OAChBzwB,KAAKkxB,SAAS7E,EAAWsC,GACzB,MACF,KAAK3uB,KAAKkf,QAAQwR,SAChB1wB,KAAKyxB,aAAapF,EAAWsC,GAC7B,MACF,QACE7tB,uBAAAd,KAAIuwB,GAAA,KAAS9vB,KAAK,OAAQ,GAAGkuB,EAAOliB,wBAGzC,uBC1EUklB,eAeX,WAAA9xB,CAAYwB,GAbZuwB,GAAA1wB,IAAAlB,KAAUW,cAAcC,UAAS,aAe/BE,uBAAAd,KAAY4xB,GAAA,KAACpxB,KAAK,cAAe,CAAEa,WACnCrB,KAAKiI,cAAgB5G,EACrBrB,KAAK6xB,eAAiB,IAAI/C,qBAC1B9uB,KAAK8xB,cAAgB,IAAIlG,oBACzB5rB,KAAK+xB,aAAe,IAAIzB,kBACzB,CAES,YAAA0B,CAAavlB,GAErB3L,uBAAAd,KAAY4xB,GAAA,KAAC3xB,MAAM,eAAgB,CAAEwM,SACrC,MAAMwlB,EAA4BnY,SAASoY,cAAc,UAIzD,OAHAD,EAAOrU,GAAKnR,EACZwlB,EAAO/Z,UAAUia,IAAI1lB,GACrBwlB,EAAO/Z,UAAUia,IAAI,aACdF,CACR,CAES,aAAAG,GAER,MAAMC,EAAqBljB,OAAOmjB,iBACI,CAACtyB,KAAKwV,QAAQ+c,gBAAiBvyB,KAAKwV,QAAQgd,iBACzEhxB,SAASywB,UAEhB,MAAMxZ,EAAawZ,EAAOQ,WACpBtpB,EAAQ1G,KAAK2B,IAAIpE,KAAKiI,cAAciF,SAAUuL,EAAWia,aACzD5T,EAASrc,KAAK2B,IAAIpE,KAAKiI,cAAcgF,UAAWwL,EAAWka,cACjEV,EAAO9oB,MAAQA,EAAQkpB,EACvBJ,EAAOnT,OAASA,EAASuT,EACA,QAAzBtxB,EAAAkxB,EAAOW,WAAW,aAAO,IAAA7xB,GAAAA,EAAA8xB,MAAMR,EAAYA,GAC3CJ,EAAOhW,MAAM9S,MAAQ,GAAIA,MACzB8oB,EAAOhW,MAAM6C,OAAS,GAAIA,KAAW,GAExC,CAES,UAAAgU,CAAWzG,EAAqCsC,GAGxD,GADA7tB,uBAAAd,KAAY4xB,GAAA,KAAC3xB,MAAM,aAAc,CAAE0uB,WACf,WAAhBA,EAAOliB,KAAmB,CAC5B,MAAMiS,EAASiQ,EACY,WAAvBjQ,EAAOX,aACT/d,KAAK6xB,eAAenD,KAAKrC,EAAW3N,EAEvC,MAAUpd,OAAOC,KAAKvB,KAAK+xB,aAAa7S,SAAS5P,SAASqf,EAAOliB,MAChEzM,KAAK+xB,aAAarD,KAAKrC,EAAWsC,GACzBrtB,OAAOC,KAAKvB,KAAK8xB,cAAc5S,SAAS5P,SAASqf,EAAOliB,MACjEzM,KAAK8xB,cAAcpD,KAAKrC,EAAWsC,GAEnC7tB,uBAAAd,KAAI4xB,GAAA,KAASnxB,KAAK,aAAc,uBAAuBkuB,EAAOliB,OAEjE,CAED,IAAAid,CAAKqJ,GAEHjyB,uBAAAd,KAAY4xB,GAAA,KAACpxB,KAAK,OAAQ,CAAEuyB,YAC5B,MAAMR,EAAqCvyB,KAAKgyB,aAAa,uBAC7De,EAAQC,YAAYT,GAEpB,MAAMC,EAAqCxyB,KAAKgyB,aAAa,qBAC7De,EAAQC,YAAYR,GAEpBxyB,KAAKwV,QAAU,CACbyd,OAAQF,EACRR,kBACAW,uBAAwBX,EAAgBK,WAAW,MACnDJ,kBACAW,uBAAwBX,EAAgBI,WAAW,OAGrD5yB,KAAKoyB,eACN,CAED,SAAAgB,CAAUlc,SAERpW,uBAAAd,KAAY4xB,GAAA,KAACpxB,KAAK,YAAa,CAAE0W,UACE,QAAnCnW,EAAAf,KAAKwV,QAAQ0d,8BAAsB,IAAAnyB,GAAAA,EAAEsyB,UAAU,EAAG,EAAGrzB,KAAKwV,QAAQ+c,gBAAgBppB,MAAOnJ,KAAKwV,QAAQ+c,gBAAgBzT,QACtH5H,EAAMgI,QAAQ1d,SAAQmtB,GAAU3uB,KAAK8yB,WAAW9yB,KAAKwV,QAAQ0d,uBAAwBvE,KACrF3uB,KAAKwV,QAAQ2d,uBAAuBE,UAAU,EAAG,EAAGrzB,KAAKwV,QAAQgd,gBAAgBrpB,MAAOnJ,KAAKwV,QAAQgd,gBAAgB1T,OACtH,CAED,iBAAAwU,CAAkB5U,GAEhB5d,uBAAAd,KAAY4xB,GAAA,KAACpxB,KAAK,oBAAqB,CAAEke,WACzC1e,KAAKwV,QAAQ2d,uBAAuBE,UAAU,EAAG,EAAGrzB,KAAKwV,QAAQgd,gBAAgBrpB,MAAOnJ,KAAKwV,QAAQgd,gBAAgB1T,QACjHJ,GAAkC,YAAxBA,aAAA,EAAAA,EAAQX,cACpB/d,KAAK6xB,eAAenD,KAAK1uB,KAAKwV,QAAQ2d,uBAAwBzU,EAEjE,CAED,MAAAqG,CAAO7N,GAELpW,uBAAAd,KAAY4xB,GAAA,KAACpxB,KAAK,SAAU,CAAE0W,UAC9BlX,KAAKoyB,gBACLpyB,KAAKozB,UAAUlc,EAChB,CAED,OAAAyS,GAEE7oB,uBAAAd,KAAY4xB,GAAA,KAACpxB,KAAK,WACdR,KAAKwV,QAAQyd,SACfjzB,KAAKwV,QAAQyd,OAAOM,UAAY,GAEnC,uBC5HUC,WAGD,UAAAC,CAAWvE,EAAkB9lB,GAQrC,MANgB,CACd,KAAM8lB,EAAOtsB,KAAOssB,EAAOvsB,IAC3B,MAAOyG,MACP,KAAMA,KAAYA,WAA2B,EAATA,MACpC,KAAMA,KAAYA,YAA6B,EAATA,OACtC5C,KAAK,IAER,CAES,WAAAktB,CAAY3wB,EAAiBC,EAAemG,GAEpD,MAAMkmB,EAAcrmB,qBAAqBjG,EAAOD,sBAAsBC,EAAOC,GAAMmG,GAC7EmmB,EAActmB,qBAAqBhG,EAAKF,sBAAsBC,EAAOC,GAAMmG,GAOjF,MANgB,CACd,KAAMkmB,EAAY,GAAGzsB,KAAOysB,EAAY,GAAG1sB,IAC3C,KAAM2sB,EAAY,GAAG1sB,KAAO0sB,EAAY,GAAG3sB,IAC3C,KAAM2sB,EAAY,GAAG1sB,KAAO0sB,EAAY,GAAG3sB,IAC3C,KAAM0sB,EAAY,GAAGzsB,KAAOysB,EAAY,GAAG1sB,KAC3C6D,KAAK,IAER,CAES,YAAAmtB,CAAa5wB,EAAiBC,EAAemG,GAErD,MACMD,EAAQpG,sBAAsBC,EAAOC,GACrCwsB,EAAaxmB,qBAAqBhG,EAAKkG,EAAOC,GAC9CyqB,EAAQ,CAAC,KAAMpE,EAAW,GAAG5sB,KAAO4sB,EAAW,GAAG7sB,KACxD,IAAK,IAAIiC,EAAI,EAAGA,GAJC,EAIcA,IAAK,CAClC,MAAM6qB,EAAWvmB,EAAStE,GAAKnC,KAAK0pB,GALrB,GAMfyH,EAAMpwB,KAAK,KAAMR,EAAIJ,EAAKI,EAAIO,EAAI4F,EAAQ1G,KAAK4G,IAAIomB,MAAgBzsB,EAAIL,EAAKK,EAAIO,EAAI4F,EAAQ1G,KAAK6G,IAAImmB,KACtG,CAED,OADgBmE,EAAMptB,KAAK,IAE5B,CAES,gBAAAqtB,CAAiB9wB,EAAiBC,EAAe8wB,EAAmB3qB,GAE5E,MAAMkmB,EAAcrmB,qBAAqBjG,EAAOD,sBAAsBC,EAAO+wB,GAAU3qB,GACjFmmB,EAActmB,qBAAqBhG,EAAKF,sBAAsBgxB,EAAS9wB,GAAMmG,GAC7EymB,EAAc5mB,qBAAqB8qB,EAAShxB,sBAAsBC,EAAOC,GAAMmG,GAOrF,MANgB,CACd,KAAMkmB,EAAY,GAAGzsB,KAAOysB,EAAY,GAAG1sB,IAC3C,KAAMitB,EAAY,GAAGhtB,KAAOgtB,EAAY,GAAGjtB,KAAO2sB,EAAY,GAAG1sB,KAAO0sB,EAAY,GAAG3sB,IACvF,KAAM2sB,EAAY,GAAG1sB,KAAO0sB,EAAY,GAAG3sB,IAC3C,KAAMitB,EAAY,GAAGhtB,KAAOgtB,EAAY,GAAGjtB,KAAO0sB,EAAY,GAAGzsB,KAAOysB,EAAY,GAAG1sB,KACvF6D,KAAK,IAER,CAES,YAAAutB,CAAarV,GAErB,MAAMsV,EAAgBtV,EAAOT,SAASpZ,OAChCovB,EAAgBvV,EAAOzC,MAAM9S,MAC7B+qB,EAAgBF,EAAgB,EAChCxF,EAAa9P,EAAOT,SAAS,GAE7B2V,EAAQ,GACd,GAAII,EAAgB,EAClBJ,EAAMpwB,KAAKxD,KAAKyzB,WAAWjF,EAA2B,GAAfyF,QAClC,CACLL,EAAMpwB,KAAKxD,KAAKyzB,WAAWjF,EAAYyF,EAAezF,EAAWjrB,IACjEqwB,EAAMpwB,KAAKxD,KAAK0zB,YAAYlF,EAAYjlB,qBAAqBilB,EAAY9P,EAAOT,SAAS,IAAKgW,IAE9F,IAAK,IAAIrvB,EAAI,EAAGA,EAAIsvB,EAAetvB,IAAK,CACtC,MAAM7B,EAAQwG,qBAAqBmV,EAAOT,SAASrZ,GAAI8Z,EAAOT,SAASrZ,EAAI,IACrE5B,EAAMuG,qBAAqBmV,EAAOT,SAASrZ,EAAI,GAAI8Z,EAAOT,SAASrZ,EAAI,IACvEkvB,EAAUpV,EAAOT,SAASrZ,EAAI,GACpCgvB,EAAMpwB,KAAKxD,KAAK6zB,iBAAiB9wB,EAAOC,EAAK8wB,EAASG,GAEvD,CACD,MAAME,EAAkBzV,EAAOT,SAAS+V,EAAgB,GAClDvF,EAAY/P,EAAOT,SAAS+V,EAAgB,GAClDJ,EAAMpwB,KAAKxD,KAAK0zB,YAAYnqB,qBAAqB4qB,EAAiB1F,GAAYA,EAAWwF,IACzFL,EAAMpwB,KAAKxD,KAAK2zB,aAAaQ,EAAiB1F,EAAWwF,GAC1D,CACD,OAAOL,EAAMptB,KAAK,IACnB,CAED,UAAA4tB,CAAWC,EAAwB3V,EAAiB4V,GAElD,MAAMC,EAAiBza,SAAS0a,gBAAgB,6BAA8B,QAC9ED,EAAerc,UAAUia,IAAI,kBAC7BoC,EAAeE,aAAa,KAAM/V,EAAOd,IACzC2W,EAAeE,aAAa,OAAQ/V,EAAOX,aAC3CuW,SAAAA,EAAO9yB,SAAQsD,IAEbyvB,EAAeE,aAAa3vB,EAAEjE,KAAMiE,EAAEpD,MAAM,IAE9C,MAAMgzB,EAAU10B,KAAK+zB,aAAarV,GAClC6V,EAAeE,aAAa,IAAK,GAAIC,MACrCL,EAAWrB,YAAYuB,EACxB,QC5FUI,cAUX,WAAA90B,CAAYwB,GARZuzB,GAAA1zB,IAAAlB,KAAUW,cAAcC,UAAS,aAU/BE,uBAAAd,KAAY40B,GAAA,KAACp0B,KAAK,cAAe,CAAEa,WACnCrB,KAAKqB,OAASA,EACdrB,KAAK60B,QAAU,IAAIrB,UACpB,CAED,IAAA9J,CAAKqJ,GAEHjyB,uBAAAd,KAAY40B,GAAA,KAACp0B,KAAK,OAAQ,CAAEuyB,YAC5BA,EAAQ9W,MAAM6Y,SAAW,OACzB90B,KAAKwV,QAAU,CACbyd,OAAQF,EAEX,CAES,UAAAqB,CAAWC,EAAwB3V,GAE3C,IAAIzC,EACuB,WAAvByC,EAAOX,aACTW,EAAOzC,MAAM9S,MAAQ,GACrB8S,EAAQ,0DAERA,EAAQ,QAASyC,EAAOzC,MAAM7B,4BAEhCpa,KAAK60B,QAAQT,WAAWC,EAAY3V,EAAQ,CAAC,CAAE7d,KAAM,QAASa,MAAOua,IACtE,CAES,UAAA8Y,CAAWC,EAAmBC,GAEtC,MAAMC,EAAWl1B,KAAKwV,QAAQyd,OAAOkC,cAAc,mBAAoBH,OACvEE,SAAAA,EAAUE,SACVp1B,KAAKwV,QAAQyd,OAAOoC,mBAAmB,YAAaJ,EAAOK,KAC3D,MAAMC,EAAQv1B,KAAKwV,QAAQyd,OAAOkC,cAAc,mBAAoBH,OACpE,GAAkB,UAAdA,EAAuB,CACzB,MAAMQ,EAAsB1b,SAAS0a,gBAAgB,6BAA8B,KACnFgB,EAAoB5X,GAAK,iBACzB2X,EAAMvC,YAAYwC,EACnB,CACF,CAES,cAAAC,CAAeR,GAEvB,MAAMS,EAAkB11B,KAAKwV,QAAQyd,OAAOkC,cAAc,IAAKF,EAAOrX,MACtE,GAAI8X,EAAiB,CACnB,MAAMzC,EAASyC,EAAgBjD,WAC/BiD,SAAAA,EAAiBN,SACjBnC,SAAAA,EAAQoC,mBAAmB,YAAaJ,EAAOK,IAChD,CACF,CAES,WAAAtC,CAAYgC,EAAmBC,GAEvC,MAAMU,EAAiBV,EAAOW,SAAW,IAAKX,EAAOW,WAAc,mBAAoBZ,MACjF/B,EAASjzB,KAAKwV,QAAQyd,OAAOkC,cAAcQ,GACjD1C,SAAAA,EAAQoC,mBAAmB,YAAaJ,EAAOK,IAChD,CAES,WAAAO,CAAYZ,SAE2E,QAA/Fl0B,EAAAf,KAAKwV,QAAQyd,OAAOkC,cAAc,IAAKF,EAAOW,0BAA4BX,EAAOa,MAAQ,aAAM,IAAA/0B,GAAAA,EAAEq0B,QAClG,CAES,aAAAW,CAAcd,GAEtB,MAAMS,EAAkB11B,KAAKwV,QAAQyd,OAAOkC,cAAc,IAAKF,EAAOrX,MAClE8X,IACET,EAAOrX,GAAGtO,SAAS,MAAQ2lB,EAAOrX,GAAGtO,SAAS,SAChDomB,EAAgBN,UAEhBM,EAAgBjB,aAAa,QAAS,kBACtC/O,YAAW,KAETgQ,SAAAA,EAAiBN,QAAQ,GACxB,MAGR,CAES,YAAAY,CAAaf,GAErB,MAAMhC,EAASjzB,KAAKwV,QAAQyd,OAAOkC,cAAc,IAAKF,EAAOgB,SAC7DhD,SAAAA,EAAQoC,mBAAmB,cAAeJ,EAAOK,IAClD,CAES,YAAAb,CAAaQ,GAErB,MAAMiB,EAAWjB,EAAOrX,GAAK,IAAKqX,EAAOrX,KAAQ,MAC3CmV,EAAU/yB,KAAKwV,QAAQyd,OAAOkC,cAAce,GAClDnD,SAAAA,EAAS0B,aAAaQ,EAAOp0B,KAAMo0B,EAAOvzB,MAC3C,CAES,eAAAy0B,CAAgBlB,GAExB,MAAMiB,EAAWjB,EAAOrX,GAAK,IAAKqX,EAAOrX,KAAQ,MAC3CmV,EAAU/yB,KAAKwV,QAAQyd,OAAOkC,cAAce,GAClDnD,SAAAA,EAASoD,gBAAgBlB,EAAOp0B,KACjC,CAED,WAAAu1B,CAAYpB,EAAmBC,GAG7B,OADAn0B,uBAAAd,KAAI40B,GAAA,KAASp0B,KAAK,cAAe,CAAEw0B,YAAWC,WACtCA,EAAOxoB,MACb,IAAK,cACHzM,KAAK+0B,WAAWC,EAAWC,GAC3B,MACF,IAAK,kBACHj1B,KAAKy1B,eAAeR,GACpB,MACF,IAAK,eACHj1B,KAAKgzB,YAAYgC,EAAWC,GAC5B,MACF,IAAK,iBACHj1B,KAAK+1B,cAAcd,GACnB,MACF,IAAK,eACHj1B,KAAK61B,YAAYZ,GACjB,MACF,IAAK,gBACHj1B,KAAKg2B,aAAaf,GAClB,MACF,IAAK,gBACHj1B,KAAKy0B,aAAaQ,GAClB,MACF,IAAK,mBACHj1B,KAAKm2B,gBAAgBlB,GACrB,MACF,QACEn0B,uBAAAd,KAAI40B,GAAA,KAASn0B,KAAK,cAAe,sBAAsBw0B,EAAOxoB,QAGnE,CAED,YAAA4pB,CAAarB,EAAmBsB,GAE9Bx1B,uBAAAd,KAAI40B,GAAA,KAASp0B,KAAK,eAAgB,CAAEw0B,YAAWsB,YAC/CA,EAAQ90B,SAAQ8Z,GAAKtb,KAAKo2B,YAAYpB,EAAW1Z,KACjDtb,KAAKu2B,oBACN,CAED,kBAAAA,GAEEz1B,uBAAAd,KAAY40B,GAAA,KAACp0B,KAAK,sBAClB,MAAMg2B,EAAqBx2B,KAAKwV,QAAQyd,OAAOkC,cAAc,mBACzDqB,IACFA,EAAmBjD,UAAY,GAElC,CAED,iBAAAD,CAAkB5U,GAGhB,GADA5d,uBAAAd,KAAY40B,GAAA,KAACp0B,KAAK,oBAAqB,CAAEke,WACrCA,EAAQ,CACV,MAAM8X,EAAqBx2B,KAAKwV,QAAQyd,OAAOkC,cAAc,mBAC7D,GAAIqB,EAAoB,CACtB,MAAMC,EAAYD,EAAmBrB,cAAc,IAAKzW,eAAAA,EAAQd,MAC5D6Y,GACFA,EAAUrB,SAEZp1B,KAAKo0B,WAAWoC,EAAoB9X,EACrC,CACF,CACF,CAED,mBAAAgY,GAE4B12B,KAAKwV,QAAQyd,OAAO0D,iBAAiB,iBAC7Cn1B,SAAQo1B,IACxBA,EAAcxB,QAAQ,GAEzB,CAED,MAAArQ,CAAO7N,GAELpW,uBAAAd,KAAY40B,GAAA,KAACp0B,KAAK,SAAU,CAAE0W,UAC9B,MAAMkC,EAAOpZ,KAAKwV,QAAQyd,OAAO5Z,wBAC3Bwd,EAAU72B,KAAKwV,QAAQyd,OAAO0D,iBAAiB,OAC/CxtB,EAAQ1G,KAAK2B,IAAIgV,EAAKjQ,MAAO+N,EAAM/N,OACnC2V,EAASrc,KAAK2B,IAAIgV,EAAK0F,OAAQ5H,EAAM4H,QAC3C+X,EAAQr1B,SAAQ8zB,IAEdA,EAAIb,aAAa,UAAW,OAAQtrB,MAAY2V,KAChDwW,EAAIb,aAAa,QAAS,GAAItrB,OAC9BmsB,EAAIb,aAAa,SAAU,GAAI3V,MAAY,GAE9C,CAED,OAAA6K,SAEE7oB,uBAAAd,KAAI40B,GAAA,KAASp0B,KAAK,UAAW,CAAEgV,QAASxV,KAAKwV,WAC3B,UAAdxV,KAAKwV,eAAS,IAAAzU,OAAA,EAAAA,EAAAkyB,SAChBjzB,KAAKwV,QAAQyd,OAAO0D,iBAAiB,OAAOn1B,SAAQ+Y,GAAKA,EAAE6a,UAE9D,uBCrMU0B,gBASX,WAAAj3B,CAAYqX,GAEVlX,KAAKmpB,WAAa,EAClBnpB,KAAKqpB,kBAAoB,EACzBrpB,KAAKipB,SAAU,EACfjpB,KAAKkpB,SAAU,EACflpB,KAAKgX,OAAQ,EACbhX,KAAKspB,MAAQ,CAACpS,EAAMgH,WACrB,QCxBU6Y,gBAOX,WAAAl3B,CAAYoI,EAAuCiP,GALnD8f,GAAA91B,IAAAlB,KAAUW,cAAcC,UAAS,cAO/BE,uBAAAd,KAAIg3B,GAAA,KAASx2B,KAAK,cAAe,CAAEyH,gBAAeiP,UAClDlX,KAAKiI,cAAgBA,EACrBjI,KAAKwV,QAAU,IAAIshB,gBAAgB5f,EACpC,CAED,iBAAImO,GAEF,OAAOvS,cAAcO,aACtB,CAEO,iBAAA4jB,GAENj3B,KAAKwV,QAAQyT,QAAUjpB,KAAKwV,QAAQ8T,MAAMzkB,OAAS,EAAI7E,KAAKwV,QAAQ2T,WACpEnpB,KAAKwV,QAAQ0T,QAAUlpB,KAAKwV,QAAQ2T,WAAa,EACjD,MAAM+N,EAAel3B,KAAKwV,QAAQ8T,MAAMtpB,KAAKwV,QAAQ2T,YACrDnpB,KAAKwV,QAAQwB,MAAwC,IAAhCkgB,EAAahY,QAAQra,MAC3C,CAED,eAAAsyB,CAAgBjgB,GAEdpW,uBAAAd,KAAYg3B,GAAA,KAACx2B,KAAK,kBAAmB,CAAE0W,UACnClX,KAAKwV,QAAQ2T,WAAa,EAAInpB,KAAKwV,QAAQ8T,MAAMzkB,QACnD7E,KAAKwV,QAAQ8T,MAAM9I,OAAOxgB,KAAKwV,QAAQ2T,WAAa,GAGtDnpB,KAAKwV,QAAQ8T,MAAM9lB,KAAK0T,EAAMgH,YAC9Ble,KAAKwV,QAAQ2T,WAAanpB,KAAKwV,QAAQ8T,MAAMzkB,OAAS,EAElD7E,KAAKwV,QAAQ8T,MAAMzkB,OAAS7E,KAAKiI,cAAckG,eACjDnO,KAAKwV,QAAQ8T,MAAMzhB,QACnB7H,KAAKwV,QAAQ2T,cAGfnpB,KAAKi3B,oBACLj3B,KAAKqlB,cAAc9P,kBAAkBvV,KAAKwV,QAC3C,CAED,sBAAA4hB,GAEEt2B,uBAAAd,KAAYg3B,GAAA,KAACx2B,KAAK,0BACdR,KAAKwV,QAAQ2T,aAAenpB,KAAKwV,QAAQ8T,MAAMzkB,OAAS,GAC1D7E,KAAKwV,QAAQ2T,aAEfnpB,KAAKwV,QAAQ8T,MAAM+N,MACnBr3B,KAAKi3B,mBACN,CAED,kBAAAK,CAAmBpgB,GAEjBpW,uBAAAd,KAAYg3B,GAAA,KAACx2B,KAAK,qBAAsB,CAAE0W,UAC1C,MAAM4e,EAAQ91B,KAAKwV,QAAQ8T,MAAM/I,WAAU9F,GAAKA,EAAEoD,mBAAqB3G,EAAM2G,mBACzEiY,GAAS,GACX91B,KAAKwV,QAAQ8T,MAAM9I,OAAOsV,EAAO,EAAG5e,EAAMgH,YAE5Cle,KAAKi3B,oBACLj3B,KAAKqlB,cAAc9P,kBAAkBvV,KAAKwV,QAC3C,CAED,IAAA+V,GAEEzqB,uBAAAd,KAAYg3B,GAAA,KAACx2B,KAAK,QACdR,KAAKwV,QAAQ0T,UACflpB,KAAKwV,QAAQ2T,aACbnpB,KAAKi3B,oBACLj3B,KAAKqlB,cAAc9P,kBAAkBvV,KAAKwV,UAE5C,MAAM+hB,EAAgBv3B,KAAKwV,QAAQ8T,MAAMtpB,KAAKwV,QAAQ2T,YAAYjL,WAElE,OADApd,uBAAAd,aAAaC,MAAM,OAAQs3B,GACpBA,CACR,CAED,IAAA9L,GAEE3qB,uBAAAd,KAAYg3B,GAAA,KAACx2B,KAAK,QACdR,KAAKwV,QAAQyT,UACfjpB,KAAKwV,QAAQ2T,aACbnpB,KAAKi3B,oBACLj3B,KAAKqlB,cAAc9P,kBAAkBvV,KAAKwV,UAE5C,MAAMgiB,EAAYx3B,KAAKwV,QAAQ8T,MAAMtpB,KAAKwV,QAAQ2T,YAAYjL,WAE9D,OADApd,uBAAAd,aAAaC,MAAM,OAAQu3B,GACpBA,CACR,CAED,KAAAC,CAAMvgB,GAEJpW,uBAAAd,KAAYg3B,GAAA,KAACx2B,KAAK,QAAS,CAAE0W,UAC7BlX,KAAKwV,QAAU,IAAIshB,gBAAgB5f,GACnClX,KAAKqlB,cAAc9P,kBAAkBvV,KAAKwV,QAC3C,uBC3FUkiB,cAgBX,WAAA73B,CAAY83B,GAdZ33B,KAAIa,KAAG,gBACP+2B,GAAA12B,IAAAlB,KAAUW,cAAcC,UAAS,cACjCi3B,GAA8B32B,IAAAlB,UAAA,GAC9B83B,GAAa52B,IAAAlB,UAAA,GACb+3B,GAA4C72B,IAAAlB,UAAA,GAC5Cg4B,GAA4C92B,IAAAlB,UAAA,GAW1Cc,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,cAAe,CAAEm3B,YACnCxkB,uBAAAnT,KAAI63B,GAAkB,IAAIrpB,cAAcmpB,aAAO,EAAPA,EAAS1vB,oBACjDjI,KAAKi4B,aAAe,IAAIpb,aAAa8a,aAAA,EAAAA,EAASvb,SAAUub,eAAAA,EAASzb,OAEjElc,KAAKqO,QAAU,IAAIgJ,oBAAoBvW,uBAAAd,KAAmB63B,GAAA,KAACxpB,SAC3DrO,KAAKwM,SAAW,IAAImlB,eAAe7wB,uBAAAd,KAAmB63B,GAAA,KAACvpB,WACvDtO,KAAKk4B,WAAa,IAAIxW,eAAe5gB,uBAAAd,KAAI63B,GAAA,KAAgB3vB,OAAQpH,uBAAAd,aAAoBuI,aAErFvI,KAAKm4B,UAAS,QACdhlB,uBAAAnT,KAAc83B,GAAA,IAAIjZ,WAClB7e,KAAKo4B,gBAAkB,IAAIrB,gBAAgBj2B,uBAAAd,KAAmB63B,GAAA,KAAC,aAAc73B,KAAKkX,MACnF,CAES,aAAAa,CAAc/D,EAAmB/K,SAEzCnI,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,gBAAiB,CAAE23B,UAAWn4B,KAAKm4B,UAAWnkB,MAAK/K,UACrE,MAAM8U,YAAEA,GAAgB/J,EAClBiI,EAAmB3a,OAAOwG,OAAO,CAAE,UAAE/G,EAAAf,KAAKkc,4BAAO/B,IAAKna,KAAKsd,iBACjE,OAAQtd,KAAKm4B,WACX,IAAoB,QACdn4B,KAAKkX,MAAMwJ,uBAAuBzX,GAAOpE,OAAS,GACpD7E,KAAKwM,SAAS4mB,UAAUpzB,KAAKkX,OAE/B,MAEF,IAAA,QACElX,KAAKkX,MAAM2J,kBAAkB5X,EAAO+K,EAAI8D,UAAWiG,EAAa9B,GAChEjc,KAAKq4B,oBACL,MACF,QACEv3B,uBAAAd,KAAI43B,GAAA,KAASn3B,KAAK,iBAAkB,oCAAqCT,KAAKm4B,cAGnF,CAES,aAAA9f,CAAcigB,EAAoBrvB,GAG1C,OADAnI,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,gBAAiB,CAAE23B,UAAWn4B,KAAKm4B,UAAWlvB,UACxDjJ,KAAKm4B,WACX,IAAoB,QACdn4B,KAAKkX,MAAMwJ,uBAAuBzX,GAAOpE,OAAS,GACpD7E,KAAKwM,SAAS4mB,UAAUpzB,KAAKkX,OAE/B,MAEF,IAAA,QACElX,KAAKkX,MAAM+J,sBAAsBhY,GACjCjJ,KAAKq4B,oBACL,MACF,QACEv3B,uBAAAd,KAAI43B,GAAA,KAASn3B,KAAK,iBAAkB,oCAAqCT,KAAKm4B,cAGnF,CAEe,WAAA5f,CAAY+f,EAAoBrvB,0DAG9C,OADAnI,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,cAAe,CAAE23B,UAAWn4B,KAAKm4B,UAAWlvB,UACtDjJ,KAAKm4B,WACX,IAAA,QACEn4B,KAAKkX,MAAMwJ,uBAAuBzX,IACL,UAAzBjJ,KAAKwV,QAAQ8T,MAAMrJ,IAAI,UAAE,IAAAlf,OAAA,EAAAA,EAAE8c,oBAAqB7d,KAAKkX,MAAM2G,yBACvD7d,KAAKu4B,wBAEb,MACF,IAAA,QACEv4B,KAAKkX,MAAMgK,iBAAiBjY,SACtBjJ,KAAKu4B,uBACX,MACF,QACEz3B,uBAAAd,KAAI43B,GAAA,KAASn3B,KAAK,eAAgB,kCAAmCT,KAAKm4B,iBAG/E,CAED,iBAAI9S,GAEF,OAAOvS,cAAcO,aACtB,CAED,SAAI6D,GAEF,OAAOpW,uBAAAd,KAAI83B,GAAA,IACZ,CAED,WAAItiB,GAEF,OAAOxV,KAAKo4B,gBAAgB5iB,OAC7B,CAED,mBAAI8H,GAEF,OAAOtd,KAAKi4B,aAAa3a,eAC1B,CAED,YAAIlB,GAEF,OAAOpc,KAAKi4B,aAAa7b,QAC1B,CACK,WAAAiB,CAAYjB,oDAIhB,OAFAtb,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,cAAe,CAAE4b,aACnCpc,KAAKi4B,aAAa5a,YAAYjB,GACvBpa,QAAQC,YAChB,CAED,mBAAIub,GAEF,OAAOxd,KAAKi4B,aAAaza,eAC1B,CACK,kBAAAJ,CAAmBI,oDAIvB,OAFA1c,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,qBAAsB,CAAEgd,oBAC1Cxd,KAAKi4B,aAAa7a,mBAAmBI,GAC9Bxb,QAAQC,YAChB,CAED,SAAIia,GAEF,OAAOlc,KAAKi4B,aAAa/b,KAC1B,CACK,QAAAiB,CAASjB,oDAIb,OAFApb,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,WAAY,CAAE0b,UAChClc,KAAKi4B,aAAa9a,SAASjB,GACpBla,QAAQC,YAChB,CAED,iBAAIgG,GAEF,OAAOnH,uBAAAd,KAAI63B,GAAA,IACZ,CAEK,IAAAnO,CAAKjR,oDAaT,OAXA3X,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,OAAQ,CAAEiY,eAC5BzY,KAAKkX,MAAM/N,MAAQ1G,KAAK2B,IAAIqU,EAAWia,YAAa5xB,uBAAAd,KAAI63B,GAAA,KAAgBvpB,UAAUpB,UAClFlN,KAAKkX,MAAM4H,OAASrc,KAAK2B,IAAIqU,EAAWka,aAAc7xB,uBAAAd,KAAI63B,GAAA,KAAgBvpB,UAAUrB,WACpFjN,KAAKo4B,gBAAgBd,mBAAmBt3B,KAAKkX,OAE7ClX,KAAKwM,SAASkd,KAAKjR,GAEnBzY,KAAKqO,QAAQuL,OAAOnB,GACpBzY,KAAKqO,QAAQ0J,cAAgB/X,KAAK+X,cAAc8R,KAAK7pB,MACrDA,KAAKqO,QAAQgK,cAAgBrY,KAAKqY,cAAcwR,KAAK7pB,MACrDA,KAAKqO,QAAQkK,YAAcvY,KAAKuY,YAAYsR,KAAK7pB,MAC1CgC,QAAQC,YAChB,CAED,iBAAAo2B,GAEEv3B,uBAAAd,KAAY43B,GAAA,KAAC33B,MAAM,oBAAqB,CAAEye,OAAQ1e,KAAKkX,MAAM8J,gBAC7DhhB,KAAKwM,SAAS8mB,kBAAkBtzB,KAAKkX,MAAM8J,cAC5C,CAEK,oBAAAuX,oDAEJz3B,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,wBAClBR,KAAKwM,SAAS4mB,UAAUpzB,KAAKkX,OAC7B,MAAMshB,EAAW,IAAI52B,gBAErB,GADA5B,KAAKo4B,gBAAgBjB,gBAAgBn3B,KAAKkX,OACS,WAA/CpW,uBAAAd,KAAI63B,GAAA,KAAgBtpB,SAASR,cAA4B,CAC3D0qB,aAAa33B,uBAAAd,KAAIg4B,GAAA,MACjB,IAAId,EAAel3B,KAAKkX,MAAMgH,WAC9B/K,uBAAAnT,KAAIg4B,GAAgBtS,YAAW,IAAWtjB,UAAApC,UAAA,OAAA,GAAA,YAExC,IACEk3B,QAAqBl3B,KAAKk4B,WAAW5rB,OAAO4qB,GAC5Cl3B,KAAKo4B,gBAAgBd,mBAAmBJ,GACpCl3B,KAAKkX,MAAM2G,mBAAqBqZ,EAAarZ,mBAC/C7d,KAAKkX,MAAM9C,QAAU8iB,EAAa9iB,SAEpCokB,EAASv2B,QAAQjC,KAAKkX,MACvB,CAAC,MAAOxW,GACPI,uBAAAd,KAAY43B,GAAA,KAACl3B,MAAM,uBAAwB,CAAEA,UAC7CV,KAAKqlB,cAAc7Q,UAAU9T,GAC7B83B,EAASt2B,OAAOxB,EACjB,MAC+C,iBAA/CI,uBAAAd,KAAI63B,GAAA,KAAgBtpB,SAASR,cAAmCjN,uBAAAd,KAAI63B,GAAA,KAAgBtpB,SAASP,mBAAqB,GAAE,IACxH,MACCwqB,EAASv2B,QAAQjC,KAAKkX,OAKxB,aAHMshB,EAASz2B,QACf/B,KAAKqlB,cAAclR,aAAanU,KAAKkX,MAAM9C,SAC3CtT,uBAAAd,KAAI43B,GAAA,KAAS33B,MAAM,uBAAwBD,KAAKkX,MAAM9C,SAC/CokB,EAASz2B,UACjB,CAEK,OAAOuI,oDAEXxJ,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,SAAU,CAAE8J,cAC9B,MAAMouB,QAAiB14B,KAAKk4B,WAAW5rB,OAAOtM,KAAKkX,MAAMgH,WAAY5T,GAMrE,OALItK,KAAKkX,MAAM2G,mBAAqB6a,EAAS7a,kBAC3C7d,KAAKkX,MAAMoK,YAAYoX,EAAStkB,SAElCpU,KAAKo4B,gBAAgBd,mBAAmBoB,GACxC53B,uBAAAd,KAAY43B,GAAA,KAAC33B,MAAM,SAAUD,KAAKkX,OAC3BlX,KAAKkX,QACb,CAEK,OAAA9M,CAAQ+K,EAAqCmP,oDAEjDxjB,uBAAAd,KAAI43B,GAAA,KAASp3B,KAAK,UAAW,CAAE2U,kBAAiBmP,uBAChD,MAAMoU,QAAiB14B,KAAKk4B,WAAW9tB,QAAQpK,KAAKkX,MAAO/B,EAAiBmP,GAG5E,OAFAhjB,OAAOwG,OAAOhH,uBAAAd,KAAW83B,GAAA,KAAEY,GAC3B53B,uBAAAd,KAAY43B,GAAA,KAAC33B,MAAM,UAAWD,KAAKkX,OAC5BlX,KAAKkX,QACb,CAEK,iBAAAgU,CAAkB1gB,oDAEtB,MAAM8T,EAAmB,GACzB9T,EAAQhJ,SAAQ,CAACyZ,EAAGqF,aAElB,IAAI7B,GAAO,EACX,MAAMC,EAAS,IAAIZ,OAAO7C,EAAEgB,OAAShC,EAAiBgB,EAAEnD,WAAa,GAErE,GADImD,EAAE2C,KAAIc,EAAOd,GAAK3C,EAAE2C,MACP,QAAZ7c,EAAAka,EAAEgD,gBAAU,IAAAld,OAAA,EAAAA,EAAA8D,QAGf,OAFAyZ,EAAO9a,KAAK,UAAU8c,EAAc,2BACpC7B,GAAO,GAGG,QAAZrW,EAAA6S,EAAEgD,gBAAU,IAAA7V,GAAAA,EAAA5G,SAAQ,CAACmd,EAAIC,KACvB,IAAKD,EAGH,OAFAL,EAAO9a,KAAK,UAAU8c,EAAc,uBAAuB1B,UAC3DH,GAAO,GAGT,MAAMnF,EAAoB,CACxB/V,EAAGob,EAAGpb,GAAK,EACXW,EAAGya,EAAGza,GAAK0a,EACXhc,EAAG,EACHD,EAAG,GAEL,OAAawT,OAATwI,eAAAA,EAAI/b,IAA2B,OAAT+b,aAAA,EAAAA,EAAI/b,IAC5B0b,EAAO9a,KAAK,UAAU8c,EAAc,4BAA4B1B,UAChEH,GAAO,KAIPnF,EAAQ1W,EAAI+b,EAAG/b,EAEJuT,OAATwI,eAAAA,EAAIhc,IAA2B,OAATgc,aAAA,EAAAA,EAAIhc,IAC5B2b,EAAO9a,KAAK,UAAU8c,EAAc,4BAA4B1B,UAChEH,GAAO,KAIPnF,EAAQ3W,EAAIgc,EAAGhc,OAEb8b,GACFC,EAAOT,SAASza,KAAK8V,KACtB,IAECmF,GACFze,KAAKkX,MAAMgJ,UAAUxB,EACtB,IAGCJ,EAAOzZ,QACT7E,KAAKqlB,cAAc7Q,UAAW,IAAInE,MAAMiO,EAAO9X,KAAK,QAEtD,IACE,MAAMkyB,QAAiB14B,KAAKu4B,uBAE5B,OADAj3B,OAAOwG,OAAOhH,uBAAAd,KAAW83B,GAAA,KAAEY,GACpB14B,KAAKkX,KACb,CAAC,MAAOxW,GAEP,MADAV,KAAKqlB,cAAc7Q,UAAU9T,GACvBA,CACP,IACF,CAEK,MAAAqkB,CAAOjG,EAAgB3V,oDAE3BrI,uBAAAd,KAAI43B,GAAA,KAASp3B,KAAK,SAAU,CAAEse,SAAQ3V,UACtC,MAAMwvB,EAAiB,IAAI/2B,gBAiB3B,OAhBA5B,KAAKkX,MAAM4H,OAASA,EACpB9e,KAAKkX,MAAM/N,MAAQA,EACnBnJ,KAAKwM,SAASuY,OAAO/kB,KAAKkX,OACtBlX,KAAKkX,MAAMgI,QAAQra,QACrB4zB,aAAa33B,uBAAAd,KAAI+3B,GAAA,MACjB5kB,uBAAAnT,KAAI+3B,GAAgBrS,YAAW,IAAWtjB,UAAApC,UAAA,OAAA,GAAA,YAExC,MAAM44B,QAAoB54B,KAAKk4B,WAAWnT,OAAO/kB,KAAKkX,OACtDyhB,EAAe12B,QAAQ22B,OACtB93B,uBAAAd,KAAI63B,GAAA,KAAgBtpB,SAASN,oBAAmB,MAEnD0qB,EAAe12B,QAAQjC,KAAKkX,OAE9B/D,uBAAAnT,KAAc83B,SAAMa,EAAe52B,aACnCjB,uBAAAd,KAAI43B,GAAA,KAAS33B,MAAM,SAAU,CAAEiX,MAAOlX,KAAKkX,QAC3ClX,KAAKqlB,cAAclR,aAAanU,KAAKkX,MAAM9C,SACpCpU,KAAKkX,QACb,CAEK,IAAAqU,oDASJ,OAPAzqB,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,QAClB2S,uBAAAnT,QAAcA,KAAKo4B,gBAAgB7M,OAAe,KAClDvrB,KAAKwM,SAAS4mB,UAAUtyB,uBAAAd,KAAW83B,GAAA,MACnC3kB,uBAAAnT,KAAI83B,SAAgB93B,KAAKk4B,WAAW5rB,OAAOxL,uBAAAd,KAAW83B,GAAA,WACtD93B,KAAKo4B,gBAAgBd,mBAAmBx2B,uBAAAd,KAAW83B,GAAA,MACnD93B,KAAKqlB,cAAclR,aAAarT,uBAAAd,KAAW83B,GAAA,KAAC1jB,SAC5CtT,uBAAAd,KAAY43B,GAAA,KAAC33B,MAAM,OAAQa,uBAAAd,KAAW83B,GAAA,MAC/Bh3B,uBAAAd,KAAI83B,GAAA,OACZ,CAEK,IAAArM,oDASJ,OAPA3qB,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,QAClB2S,uBAAAnT,QAAcA,KAAKo4B,gBAAgB3M,OAAe,KAClDzrB,KAAKwM,SAAS4mB,UAAUtyB,uBAAAd,KAAW83B,GAAA,MACnC3kB,uBAAAnT,KAAI83B,SAAgB93B,KAAKk4B,WAAW5rB,OAAOxL,uBAAAd,KAAW83B,GAAA,WACtD93B,KAAKo4B,gBAAgBd,mBAAmBx2B,uBAAAd,KAAW83B,GAAA,MACnD93B,KAAKqlB,cAAclR,aAAarT,uBAAAd,KAAW83B,GAAA,KAAC1jB,SAC5CtT,uBAAAd,KAAY43B,GAAA,KAAC33B,MAAM,OAAQa,uBAAAd,KAAW83B,GAAA,MAC/Bh3B,uBAAAd,KAAI83B,GAAA,OACZ,CAEK,KAAArW,oDAQJ,OANA3gB,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,SAClBR,KAAKkX,MAAMuK,QACXzhB,KAAKo4B,gBAAgBjB,gBAAgBn3B,KAAKkX,OAC1ClX,KAAKwM,SAAS4mB,UAAUpzB,KAAKkX,OAC7BlX,KAAKqlB,cAAclR,aAAanU,KAAKkX,MAAM9C,SAC3CtT,uBAAAd,KAAY43B,GAAA,KAAC33B,MAAM,QAASD,KAAKkX,OAC1BlX,KAAKkX,QACb,CAEK,OAAAyS,oDAKJ,OAHA7oB,uBAAAd,KAAY43B,GAAA,KAACp3B,KAAK,WAClBR,KAAKqO,QAAQwL,SACb7Z,KAAKwM,SAASmd,UACP3nB,QAAQC,YAChB,mFClWU42B,YAgBX,WAAAh5B,CAAY83B,GAdZ33B,KAAIa,KAAG,cACPi4B,GAAA53B,IAAAlB,KAAUW,cAAcC,UAAS,cACjCm4B,GAA8B73B,IAAAlB,UAAA,GAC9Bg5B,GAAa93B,IAAAlB,UAAA,GACbi5B,GAA4C/3B,IAAAlB,UAAA,GAY1Cc,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,cAAe,CAAEm3B,YACnCxkB,uBAAAnT,KAAI+4B,GAAkB,IAAIvqB,cAAcmpB,aAAO,EAAPA,EAAS1vB,oBACjDjI,KAAKi4B,aAAe,IAAIpb,aAAa8a,aAAA,EAAAA,EAASvb,SAAUub,eAAAA,EAASzb,OAEjElc,KAAKqO,QAAU,IAAIgJ,oBAAoBvW,uBAAAd,KAAmB+4B,GAAA,KAAC1qB,SAC3DrO,KAAKwM,SAAW,IAAImoB,cAAc7zB,uBAAAd,KAAmB+4B,GAAA,KAACzqB,WACtDtO,KAAKk4B,WAAa,IAAIlT,aAAalkB,uBAAAd,KAAI+4B,GAAA,KAAgB7wB,OAAQpH,uBAAAd,aAAoBuI,aAEnFvI,KAAKm4B,UAAS,QACdhlB,uBAAAnT,KAAcg5B,GAAA,IAAIna,WAClB7e,KAAKo4B,gBAAkB,IAAIrB,gBAAgBj2B,uBAAAd,KAAmB+4B,GAAA,KAAC,aAAc/4B,KAAKkX,MACnF,CAED,iBAAImO,GAEF,OAAOvS,cAAcO,aACtB,CAED,SAAI6D,GAEF,OAAOpW,uBAAAd,KAAIg5B,GAAA,IACZ,CAED,WAAIxjB,GAEF,OAAOxV,KAAKo4B,gBAAgB5iB,OAC7B,CAED,iBAAIvN,GAEF,OAAOnH,uBAAAd,KAAI+4B,GAAA,IACZ,CAED,mBAAIzb,GAEF,OAAOtd,KAAKi4B,aAAa3a,eAC1B,CAED,YAAIlB,GAEF,OAAOpc,KAAKi4B,aAAa7b,QAC1B,CACD,WAAAiB,CAAYjB,GAKV,OAHAtb,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,cAAe,CAAE4b,aACnCpc,KAAKi4B,aAAa5a,YAAYjB,GAC9Btb,uBAAAd,KAAI84B,GAAA,KAAS74B,MAAM,cAAeD,KAAKi4B,aAAa7b,UAC7Cpc,KAAKk4B,WAAW7a,YAAYrd,KAAKi4B,aAAa7b,SACtD,CAED,mBAAIoB,GAEF,OAAOxd,KAAKi4B,aAAaza,eAC1B,CACD,kBAAAJ,CAAmB8b,GAKjB,OAHAp4B,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,qBAAsB,CAAE04B,aAC1Cl5B,KAAKi4B,aAAa7a,mBAAmB8b,GACrCp4B,uBAAAd,KAAI84B,GAAA,KAAS74B,MAAM,qBAAsBD,KAAKi4B,aAAaza,iBACpDxd,KAAKk4B,WAAW9a,mBAAmBpd,KAAKi4B,aAAaza,gBAC7D,CAED,SAAItB,GAEF,OAAOlc,KAAKi4B,aAAa/b,KAC1B,CACD,QAAAiB,CAASjB,GAKP,OAHApb,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,WAAY,CAAE0b,UAChClc,KAAKi4B,aAAa9a,SAASjB,GAC3Bpb,uBAAAd,KAAI84B,GAAA,KAAS74B,MAAM,WAAYD,KAAKi4B,aAAa/b,OAC1Clc,KAAKk4B,WAAW/a,SAASnd,KAAKi4B,aAAa/b,MACnD,CAES,QAAAid,CAAS/kB,GAEjBtT,uBAAAd,KAAY84B,GAAA,KAAC74B,MAAM,WAAY,CAAEmU,YACjCpU,KAAKkX,MAAMoK,YAAYlN,EACxB,CAES,aAAA2D,CAAc/D,EAAmB/K,SAEzCnI,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,gBAAiB,CAAE23B,UAAWn4B,KAAKm4B,UAAWnkB,MAAK/K,UACrE,IAAI8U,YAAEA,GAAgB/J,EACtB,MAAMiI,EAAmB3a,OAAOwG,OAAO,CAAE,UAAE/G,EAAAf,KAAKkc,4BAAO/B,IAAKna,KAAKsd,iBAC/C,UAAdtd,KAAKm4B,YACPpa,EAAc,UAEhB/d,KAAKkX,MAAM2J,kBAAkB5X,EAAO+K,EAAI8D,UAAWiG,EAAa9B,GAChEjc,KAAKq4B,mBACN,CAES,aAAAhgB,CAAcigB,EAAoBrvB,GAE1CnI,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,gBAAiB,CAAE23B,UAAWn4B,KAAKm4B,UAAWlvB,UAChEjJ,KAAKkX,MAAM+J,sBAAsBhY,GACjCjJ,KAAKq4B,mBACN,CAEe,WAAA9f,CAAY+f,EAAoBrvB,oDAE9C,IACEnI,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,cAAe,CAAE23B,UAAWn4B,KAAKm4B,UAAWlvB,UAC9DjJ,KAAKkX,MAAMgK,iBAAiBjY,SACtBjJ,KAAKo5B,6BACZ,CAAC,MAAO14B,GACPV,KAAKqlB,cAAc7Q,UAAU9T,EAC9B,IACF,CAES,UAAA24B,CAAWrlB,GAEnBlT,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,aAAc,CAAEwT,QAClChU,KAAKwM,SAAS6pB,aAAariB,EAAIuhB,MAAOvhB,EAAIsiB,QAC3C,CAEK,IAAA5M,CAAKjR,oDAET3X,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,OAAQ,CAAEiY,eAC5B,MAAM6gB,EAAanqB,OAAOoqB,iBAAiB9gB,GAC3CzY,KAAKkX,MAAM/N,MAAQ1G,KAAK2B,IAAIo1B,SAASF,EAAWnwB,MAAMlC,QAAQ,KAAK,KAAMnG,uBAAAd,KAAI+4B,GAAA,KAAgBzqB,UAAUpB,UACvGlN,KAAKkX,MAAM4H,OAASrc,KAAK2B,IAAIo1B,SAASF,EAAWxa,OAAO7X,QAAQ,KAAK,KAAMnG,uBAAAd,KAAI+4B,GAAA,KAAgBzqB,UAAUrB,WACzGjN,KAAKo4B,gBAAgBd,mBAAmBt3B,KAAKkX,OAE7ClX,KAAKwM,SAASkd,KAAKjR,GAEnBzY,KAAKqO,QAAQuL,OAAOnB,GACpBzY,KAAKqO,QAAQ0J,cAAgB/X,KAAK+X,cAAc8R,KAAK7pB,MACrDA,KAAKqO,QAAQgK,cAAgBrY,KAAKqY,cAAcwR,KAAK7pB,MACrDA,KAAKqO,QAAQkK,YAAcvY,KAAKuY,YAAYsR,KAAK7pB,MAEjDA,KAAKqlB,cAAchR,oBAAoBrU,KAAKm5B,SAAStP,KAAK7pB,OAC1DA,KAAKqlB,cAAcxR,oBAAoB7T,KAAKq5B,WAAWxP,KAAK7pB,aAEtDA,KAAKk4B,WAAWxO,KAAK1pB,KAAKkX,MAAM4H,OAAQ9e,KAAKkX,MAAM/N,aACnDnJ,KAAKqd,YAAYrd,KAAKoc,gBACtBpc,KAAKmd,SAASnd,KAAKkc,aACnBlc,KAAKod,mBAAmBpd,KAAKwd,mBACpC,CAED,iBAAA6a,GAEEv3B,uBAAAd,KAAY84B,GAAA,KAAC74B,MAAM,oBAAqB,CAAEye,OAAQ1e,KAAKkX,MAAM8J,gBAC7D,MAAMA,EAAgBhhB,KAAKkX,MAAM8J,cAC7BA,GACFhhB,KAAKwM,SAAS8mB,kBAAkBtS,EAEnC,CAEK,2BAAAoY,oDAGJ,GADAt4B,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,+BACiC,WAA/CM,uBAAAd,KAAI+4B,GAAA,KAAgBxqB,SAASR,cAA4B,CAC3D,MAAM0rB,EAAgBz5B,KAAKkX,MAAM0J,uBACjC5gB,KAAKkX,MAAMiK,qBACXnhB,KAAKo4B,gBAAgBjB,gBAAgBn3B,KAAKkX,OAC1ClX,KAAKwM,SAASkqB,sBACd,MAAMtiB,QAAgBpU,KAAKk4B,WAAWlO,WAAWyP,GACjDz5B,KAAKkX,MAAMoK,YAAYlN,GACvBpU,KAAKo4B,gBAAgBd,mBAAmBt3B,KAAKkX,MAC9C,CAED,OADApW,uBAAAd,KAAY84B,GAAA,KAAC74B,MAAM,8BAA+BD,KAAKkX,OAChDlX,KAAKkX,QACb,CAEK,WAAAoU,oDAEJ,OAAOtrB,KAAKk4B,WAAW5M,gBACxB,CAEK,OAAOhhB,oDAEXxJ,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,SAAU,CAAE8J,cAC9B,IACE,GAAmD,WAA/CxJ,uBAAAd,KAAI+4B,GAAA,KAAgBxqB,SAASR,cAA4B,CAC3D,MAAM0rB,EAAgBz5B,KAAKkX,MAAM0J,uBACjC5gB,KAAKkX,MAAMiK,qBACX,MAAM/M,QAAgBpU,KAAKk4B,WAAWlO,WAAWyP,GAIjD,OAHAz5B,KAAKkX,MAAMmK,yBACXrhB,KAAKkX,MAAMoK,YAAYlN,GACvBtT,uBAAAd,KAAY84B,GAAA,KAAC74B,MAAM,SAAUD,KAAKkX,OAC3BlX,KAAKkX,KACb,CACC,OAAOlX,KAAKk4B,WAAW5rB,OAAOtM,KAAKkX,MAAO5M,EAE7C,CAAC,MAAO5J,GAGP,OAFAI,uBAAAd,KAAY84B,GAAA,KAACp4B,MAAM,SAAU,CAAEA,UAC/BV,KAAKqlB,cAAc7Q,UAAU9T,GACtBsB,QAAQE,OAAOxB,EACvB,IACF,CAEK,OAAA0J,CAAQ+K,oDAQZ,OANArU,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,UAAW,CAAE2U,oBAC/BnV,KAAKo4B,gBAAgBjB,gBAAgBn3B,KAAKkX,OAC1ClX,KAAKwV,QAAQ8T,MAAM9lB,KAAKxD,KAAKkX,MAAMgH,YACnC/K,uBAAAnT,KAAcg5B,SAAMh5B,KAAKk4B,WAAW9tB,QAAQpK,KAAKkX,MAAO/B,QACxDrU,uBAAAd,KAAY84B,GAAA,KAAC74B,MAAM,UAAWD,KAAKkX,OACnClX,KAAKo4B,gBAAgBjB,gBAAgBn3B,KAAKkX,OACnClX,KAAKkX,QACb,CAEK,MAAAiT,CAAOhqB,EAAYgjB,oDAEvBriB,uBAAAd,KAAI84B,GAAA,KAASt4B,KAAK,SAAU,CAAEL,OAAMgjB,aACpCnjB,KAAKwV,QAAQ8T,MAAM9lB,KAAKxD,KAAKkX,MAAMgH,YACnC,MAAMzD,QAAUza,KAAKk4B,WAAW/N,OAAOnqB,KAAKkX,MAAO/W,EAAMgjB,GAEzD,OADAnjB,KAAKo4B,gBAAgBjB,gBAAgB1c,GAC9BA,IACR,CAEK,iBAAAyQ,CAAkB1gB,oDAEtB1J,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,oBAAqB,CAAEgK,YACzC,MAAM8T,EAAmB,GACnBob,EAAkBlvB,EAAQpE,KAAI,CAAC6U,EAAGqF,aACtC,MAAMqZ,EAAM,IAAI7b,OAAO7C,EAAEgB,OAAShC,EAAiBgB,EAAEnD,WAAa,GAC9DmD,EAAE2C,KAAI+b,EAAI/b,GAAK3C,EAAE2C,IACjB3C,EAAE8C,cAAa4b,EAAI5b,YAAc9C,EAAE8C,cACtB,QAAZhd,EAAAka,EAAEgD,gBAAU,IAAAld,OAAA,EAAAA,EAAA8D,SACfyZ,EAAO9a,KAAK,UAAU8c,EAAc,sBAEtC,IAAI7B,GAAO,EA+BX,OA9BY,QAAZrW,EAAA6S,EAAEgD,gBAAU,IAAA7V,GAAAA,EAAA5G,SAAQ,CAACmd,EAAIC,KAEvB,GADAH,GAAO,GACFE,EAEH,YADAL,EAAO9a,KAAK,UAAU8c,EAAc,uBAAuB1B,KAG7D,MAAMtF,EAAoB,CACxB/V,EAAGob,EAAGpb,GAAK,EACXW,EAAGya,EAAGza,GAAK0a,EACXhc,EAAG,EACHD,EAAG,GAEQwT,OAATwI,eAAAA,EAAI/b,IAA2B,OAAT+b,aAAA,EAAAA,EAAI/b,IAC5B0b,EAAO9a,KAAK,UAAU8c,EAAc,4BAA4B1B,KAChEH,GAAO,GAGPnF,EAAQ1W,EAAI+b,EAAG/b,EAEJuT,OAATwI,eAAAA,EAAIhc,IAA2B,OAATgc,aAAA,EAAAA,EAAIhc,IAC5B2b,EAAO9a,KAAK,UAAU8c,EAAc,4BAA4B1B,KAChEH,GAAO,GAGPnF,EAAQ3W,EAAIgc,EAAGhc,EAEb8b,GACFkb,EAAI1b,SAASza,KAAK8V,EACnB,IAEIqgB,CAAG,IAERrb,EAAOzZ,QACT7E,KAAKqlB,cAAc7Q,UAAW,IAAInE,MAAMiO,EAAO9X,KAAK,QAEtDkzB,EAAgBtzB,KAAI6U,GAAKjb,KAAKkX,MAAMgJ,UAAUjF,KAC9C,MAAMmQ,QAAqBprB,KAAKk4B,WAAWhN,kBAAkBwO,GAG7D,OAFA15B,KAAKkX,MAAMoK,YAAY8J,GACvBtqB,uBAAAd,KAAY84B,GAAA,KAAC74B,MAAM,oBAAqBD,KAAKkX,OACtClX,KAAKkX,QACb,CAEK,MAAA6N,CAAOjG,EAAgB3V,oDAE3BrI,uBAAAd,KAAI84B,GAAA,KAASt4B,KAAK,SAAU,CAAEse,SAAQ3V,UACtC,MAAMwvB,EAAiB,IAAI/2B,gBAC3B5B,KAAKkX,MAAM4H,OAASA,EACpB9e,KAAKkX,MAAM/N,MAAQA,EACnB,MAAMqY,EAAcxhB,KAAKkX,MAAMgH,WAiB/B,OAhBAle,KAAKwM,SAASuY,OAAOvD,GACrBiX,aAAa33B,uBAAAd,KAAIi5B,GAAA,MACjB9lB,uBAAAnT,KAAIi5B,GAAgBvT,YAAW,IAAWtjB,UAAApC,UAAA,OAAA,GAAA,YAExC,IACE,MAAM44B,QAAoB54B,KAAKk4B,WAAWnT,OAAOvD,GACjDmX,EAAe12B,QAAQ22B,EACxB,CAAC,MAAOl4B,GACPI,uBAAAd,KAAI84B,GAAA,KAASp4B,MAAM,SAAU,CAAEoe,SAAQ3V,QAAOzI,UAC9Ci4B,EAAez2B,OAAOxB,EACvB,MACAI,uBAAAd,KAAI+4B,GAAA,KAAgBxqB,SAASN,oBAAmB,KAEnDkF,uBAAAnT,KAAcg5B,SAAML,EAAe52B,aACnC/B,KAAKqlB,cAAclR,aAAanU,KAAKkX,MAAM9C,SAC3CtT,uBAAAd,KAAY84B,GAAA,KAAC74B,MAAM,SAAUD,KAAKkX,OAC3BlX,KAAKkX,QACb,CAEK,IAAAqU,oDAGJ,GADAzqB,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,QACdR,KAAKwV,QAAQ0T,QAEf,OADA/V,uBAAAnT,QAAcA,KAAKo4B,gBAAgB7M,OAAe,KAC3CvrB,KAAKk4B,WAAW3M,KAAKvrB,KAAKkX,OAGjC,MAAM,IAAI7G,MAAM,sBAEnB,CAEK,IAAAob,oDAGJ,GADA3qB,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,QACdR,KAAKwV,QAAQyT,QAGf,OAFA9V,uBAAAnT,QAAcA,KAAKo4B,gBAAgB3M,OAAe,KAClD3qB,uBAAAd,KAAY84B,GAAA,KAAC74B,MAAM,OAAQa,uBAAAd,KAAWg5B,GAAA,MAC/Bh5B,KAAKk4B,WAAWzM,KAAKzrB,KAAKkX,OAGjC,MAAM,IAAI7G,MAAM,sBAEnB,CAEK,KAAAoR,oDAKJ,OAHA3gB,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,SAClBR,KAAKkX,MAAMuK,QACXzhB,KAAKo4B,gBAAgBjB,gBAAgBn3B,KAAKkX,OACnClX,KAAKk4B,WAAWzW,MAAMzhB,KAAKkX,SACnC,CAEK,OAAAyS,oDAMJ,OAJA7oB,uBAAAd,KAAY84B,GAAA,KAACt4B,KAAK,WAClBR,KAAKqO,QAAQwL,SACb7Z,KAAKwM,SAASmd,UACd3pB,KAAKk4B,WAAWvO,UACT3nB,QAAQC,YAChB,oECrWU23B,WAsBX,WAAA/5B,gBAnBAg6B,GAAmC34B,IAAAlB,UAAA,GACnC85B,GAAgC54B,IAAAlB,UAAA,GAChC+5B,GAA0C74B,IAAAlB,UAAA,GAC1Cg6B,GAAqC94B,IAAAlB,UAAA,GACrCi6B,GAAiC/4B,IAAAlB,UAAA,GACjCk6B,GAA4Bh5B,IAAAlB,UAAA,GAC5Bm6B,GAAmCj5B,IAAAlB,UAAA,GACnCo6B,GAA6Bl5B,IAAAlB,UAAA,GAC7Bq6B,GAAmCn5B,IAAAlB,UAAA,GACnCs6B,GAAgCp5B,IAAAlB,UAAA,GAChCu6B,GAAkCr5B,IAAAlB,UAAA,GAClCw6B,GAAqBt5B,IAAAlB,UAAA,GAMrBy6B,GAAAv5B,IAAAlB,KAAUW,cAAcC,UAAS,eA8IjC85B,GAAkBx5B,IAAAlB,MAACwE,YAEjB1D,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,iBAAkB,CAAEgE,WACtC,MAAMm2B,EAASnB,SAASh1B,EAAOoZ,GAAG3W,QAAQ,QAAS,IAAIA,QAAQjH,KAAK46B,KAAM,KACpEjwB,EAAiB,QAAT5J,EAAAf,KAAK6K,YAAI,IAAA9J,OAAA,EAAAA,EAAE4J,MACzB3K,KAAK66B,aAAelwB,EAAMgwB,GACtB36B,KAAK66B,eACP76B,KAAK66B,aAAajd,GAAK+c,EAAOr0B,WAC9BxF,uBAAAd,KAAuBm6B,GAAA,KAAC5G,UAAY,IACb,UAAnBvzB,KAAK66B,oBAAc,IAAAzyB,OAAA,EAAAA,EAAA0yB,cACrBh6B,uBAAAd,aAAwBic,MAAM8e,QAAU,OACxC/6B,KAAK66B,aAAaC,WAAWt5B,SAAQ,CAACw5B,EAAMlF,oBAEtC/0B,EAAAf,KAAK66B,mCAAc/J,SAAUkK,EAC/Bl6B,uBAAAd,KAAIm6B,GAAA,KAAoB5G,WAAa,iBAAkBuC,IAAU91B,KAAK46B,+BAAiCI,WAEvGl6B,uBAAAd,KAAIm6B,GAAA,KAAoB5G,WAAa,iBAAkBuC,IAAU91B,KAAK46B,SAAWI,UAClF,IAGHx2B,EAAOwuB,YAAYlyB,uBAAAd,KAAIm6B,GAAA,OAE1B,IAoBHc,GAAmB/5B,IAAAlB,MAACgU,IAElBlT,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,kBAAmB,CAAEwT,QACvCA,EAAIwD,iBACJxD,EAAIsE,kBACJxX,uBAAAd,aAAmBc,uBAAAd,gBAAAqG,KAAArG,MAAoBc,uBAAAd,gBAAAqG,KAAArG,MACvCc,uBAAAd,KAAIk7B,GAAA,IAAAC,IAAJ90B,KAAArG,KAAsB,IAGxBo7B,GAAkBl6B,IAAAlB,MAACgU,IAEjBlT,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,iBAAkB,CAAEwT,QACtCA,EAAIwD,iBACJxD,EAAIsE,kBACJtY,KAAKqlB,cAAcnQ,cACnBpU,uBAAAd,KAAIk7B,GAAA,IAAAG,IAAJh1B,KAAArG,KAAiB,IAiCnBs7B,GAAep6B,IAAAlB,MAAOgU,GAA6B5R,UAAApC,UAAA,OAAA,GAAA,YAEjDc,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,cAAe,CAAEwT,QACnCA,EAAIwD,iBACJxD,EAAIsE,kBACJ,IACExX,uBAAAd,KAAIk7B,GAAA,IAAAG,IAAJh1B,KAAArG,MACA,IAAIM,EAAU,kBACd,GAAIQ,uBAAAd,KAAIg6B,GAAA,KAAsBuB,UAAW,CACvCj7B,EAAU,IAAKQ,uBAAAd,aAA0Bu7B,iCACzC,MAAMC,EAAS16B,uBAAAd,gBAAAqG,KAAArG,KAA4Bc,uBAAAd,KAAIg6B,GAAA,KAAsBuB,WACrEz6B,uBAAAd,KAA8B+5B,GAAA,KAAC/G,YAAYwI,GAC3C16B,uBAAAd,KAAgBk7B,GAAA,IAAAO,IAAAp1B,KAAhBrG,KAAiBw7B,GACjB1hB,SAAS4hB,YAAY,QACrBF,EAAOpG,QACR,CACDp1B,KAAKqlB,cAAcxQ,UAAU,CAAEvU,UAASq7B,QAAS,MAClD,CAAC,MAAOj7B,GACPI,uBAAAd,aAAaU,MAAM,cAAeA,GAClCV,KAAKqlB,cAAc7Q,UAAU9T,EAC9B,CACF,MAEDk7B,GAAiB16B,IAAAlB,MAACgU,IAEhBlT,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,gBAAiB,CAAEwT,QACrCA,EAAIwD,iBACJxD,EAAIsE,kBACJtY,KAAKqlB,cAAchQ,YACnBvU,uBAAAd,KAAIk7B,GAAA,IAAAG,IAAJh1B,KAAArG,KAAiB,IAGnB67B,GAAoB36B,IAAAlB,MAACgU,kBAEnBlT,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,mBAAoB,CAAEwT,QACxCA,EAAIwD,iBACJxD,EAAIsE,kBACJ,MACMwjB,EADS9nB,EAAIxP,OACM+2B,WACV,QAAXx6B,EAAAf,KAAK6K,YAAM,IAAA9J,OAAA,EAAAA,EAAA4J,QAASmxB,KAAiC,QAAnB1zB,EAAApI,KAAK66B,oBAAc,IAAAzyB,OAAA,EAAAA,EAAA0oB,SAAwC,QAA/B/hB,EAAmB,QAAnBzG,EAAAtI,KAAK66B,oBAAc,IAAAvyB,OAAA,EAAAA,EAAAwyB,kBAAY,IAAA/rB,OAAA,EAAAA,EAAAO,SAASwsB,MACxG97B,KAAK6K,KAAKF,MAAM6uB,SAA0B,QAAjBvqB,EAAAjP,KAAK66B,oBAAY,IAAA5rB,OAAA,EAAAA,EAAE2O,KAAekT,MAAQgL,EACnE97B,KAAKqlB,cAAcrQ,eAAehV,KAAK6K,OAEzC/J,uBAAAd,aAAwBic,MAAM8e,QAAU,MAAM,IAGhDgB,GAAmB76B,IAAAlB,MAACgU,IAElBlT,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,kBAAmB,CAAEwT,QACvCA,EAAIwD,iBACJxD,EAAIsE,kBACJxX,uBAAAd,KAAIk7B,GAAA,IAAAG,IAAJh1B,KAAArG,MACA,MAAMwE,EAASwP,EAAIxP,OACfA,EAAOoZ,KAAO9c,uBAAAd,KAAyBg6B,GAAA,KAACpc,GAC1C9c,uBAAAd,KAAoB06B,GAAA,KAAAr0B,KAApBrG,KAAqBwE,GAErB1D,uBAAAd,KAAIk7B,GAAA,IAAAC,IAAJ90B,KAAArG,KACD,IAGHg8B,GAAmB96B,IAAAlB,MAACgU,IAElBA,EAAIwD,iBACJxD,EAAIsE,iBAAiB,IAGvB2jB,GAAA/6B,IAAAlB,MAAkB,KAEhBc,uBAAAd,KAAIk7B,GAAA,IAAAC,IAAJ90B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAAG,IAAJh1B,KAAArG,KAAiB,IAzSjBc,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,eAClBR,KAAK46B,KAAO/zB,aACZ7G,KAAKyL,OAAS,CACZP,OAAQ,EACRF,KAAM,EACNC,MAAO,EACPF,IAAK,GAEPjK,uBAAAd,KAAIk7B,GAAA,IAAAgB,IAAJ71B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAAiB,IAAJ91B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAAkB,IAAJ/1B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAAmB,IAAJh2B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAAoB,IAAJj2B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAAqB,IAAJl2B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAAsB,IAAJn2B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAAuB,IAAJp2B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAAwB,IAAJr2B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAAyB,IAAJt2B,KAAArG,MACAc,uBAAAd,KAAIk7B,GAAA,IAAA0B,IAAJv2B,KAAArG,KACD,CAED,iBAAIqlB,GAEF,OAAOvS,cAAcO,aACtB,CAqFD,IAAAqW,CAAKjR,EAAyBhN,EAA8BoxB,GAE1D/7B,uBAAAd,KAAIy6B,GAAA,KAASj6B,KAAK,OAAQ,CAAEiY,aAAYhN,SAAQoxB,2BAChDpkB,EAAWua,YAAYlyB,uBAAAd,KAAI65B,GAAA,MAC3B/4B,uBAAAd,aAAwBgzB,YAAYlyB,uBAAAd,KAAoB85B,GAAA,MAExDh5B,uBAAAd,aAAqBgzB,YAAYlyB,uBAAAd,KAAgBk6B,GAAA,MAEjDp5B,uBAAAd,aAA+BgzB,YAAYlyB,uBAAAd,KAAyBg6B,GAAA,MACpEl5B,uBAAAd,aAAqBgzB,YAAYlyB,uBAAAd,KAA8B+5B,GAAA,MAE/Dj5B,uBAAAd,aAAqBgzB,YAAYlyB,uBAAAd,KAAqBi6B,GAAA,MAEtDn5B,uBAAAd,aAAkBgzB,YAAYlyB,uBAAAd,KAAoBq6B,GAAA,MAClDv5B,uBAAAd,aAAkBgzB,YAAYlyB,uBAAAd,KAAiBs6B,GAAA,MAC/Cx5B,uBAAAd,aAAkBgzB,YAAYlyB,uBAAAd,KAAmBu6B,GAAA,MACjDz5B,uBAAAd,aAAkBkY,UAAUia,IAAI,SAChCrxB,uBAAAd,aAAqBgzB,YAAYlyB,uBAAAd,KAAiBo6B,GAAA,MAClDjnB,uBAAAnT,KAAIw6B,IAAe,EAAK,KAExB15B,uBAAAd,aAAwBic,MAAM8e,QAAU,OACxCj6B,uBAAAd,aAAqBgzB,YAAYlyB,uBAAAd,KAAuBm6B,GAAA,MACxDn6B,KAAKyL,OAASA,EACdzL,KAAK68B,uBAAyBA,EAC9B/7B,uBAAAd,KAAIk7B,GAAA,IAAA4B,IAAJz2B,KAAArG,MAEAA,KAAK+kB,QACN,CA4LD,MAAAA,GAEEjkB,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,UAClB,MAAMu8B,EAAat2B,yBAAyBzG,KAAKyL,OAAOT,MAClDgyB,EAAcv2B,yBAAyBzG,KAAKyL,OAAOR,OACzDnK,uBAAAd,KAAoB85B,GAAA,KAAC7d,MAAM8gB,WAAa,GAAIA,MAC5Cj8B,uBAAAd,KAAoB85B,GAAA,KAAC7d,MAAM+gB,YAAc,GAAIA,KAC9C,CAED,MAAA/H,CAAO7gB,WAELtT,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,SAAU,CAAE4T,YAC9BpU,KAAK6K,KAAOuJ,EACZ,MAAM6oB,eAAiB,CAACnH,EAAekF,KAErC,MAAMkC,EAAOpjB,SAASoY,cAAc,QAQpC,OAPAgL,EAAKtf,GAAK,QAASkY,IAAU91B,KAAK46B,OAC9BI,EACFkC,EAAKC,YAAcnC,EAAKlK,MAExBoM,EAAK3J,UAAY,SAEnBzyB,uBAAAd,KAAYy6B,GAAA,KAACx6B,MAAM,SAAU,CAAEi9B,SACxBA,CAAI,EAGY,YAIvB,GAFAp8B,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,oBAClBM,uBAAAd,KAAyBg6B,GAAA,KAACzG,UAAY,GACvB,UAAXvzB,KAAK6K,YAAM,IAAA9J,OAAA,EAAAA,EAAA4J,MAAO,CACpB,MAAMA,EAAQ3K,KAAK6K,KAAKF,MAClByyB,EAAatjB,SAASujB,yBAC5B1yB,EAAMnJ,SAAQ,CAACw5B,EAAMlF,eAEnB,GAAmB,MAAfkF,EAAKlK,OAAiBkK,EAAKlK,MAAMxhB,SAAS,MAC5C8tB,EAAWpK,YAAYiK,eAAenH,SACjC,GAAIA,IAAUnrB,EAAM9F,OAAS,EAClCu4B,EAAWpK,YAAYiK,eAAenH,EAAOkF,QACxC,CACLl6B,uBAAAd,KAAyBg6B,GAAA,KAAChH,YAAYoK,GAClCp9B,KAAKs9B,WACPt9B,KAAKs9B,SAAWtC,GAElB,MAAMkC,EAAOD,eAAenH,EAAOkF,IAGf,QAAfj6B,EAAAf,KAAKs9B,gBAAU,IAAAv8B,OAAA,EAAAA,EAAA+5B,cAAeE,EAAKF,aAA+B,QAAf1yB,EAAApI,KAAKs9B,gBAAU,IAAAl1B,OAAA,EAAAA,EAAA0oB,SAAUkK,EAAKlK,QACpF9wB,KAAKs9B,SAAWtC,IAEG,QAAjB1yB,EAAAtI,KAAK66B,oBAAY,IAAAvyB,OAAA,EAAAA,EAAEsV,MAAOkY,EAAMxvB,YAClC42B,EAAKhlB,UAAUia,IAAI,iBACnBnyB,KAAK66B,kBAAe1kB,GAGpB+mB,EAAKhlB,UAAUia,IAAI,cAErBrxB,uBAAAd,KAAyBg6B,GAAA,KAAChH,YAAYkK,GACtCp8B,uBAAAd,aAA+BwZ,WAAa0jB,EAAKK,WACjDz8B,uBAAAd,KAAYy6B,GAAA,KAACx6B,MAAM,6BAA8B,CAAEi9B,OAAMI,SAAUt9B,KAAKs9B,UACzE,IAEJ,GAEHE,IACoB,QAAhBp1B,UAAArH,EAAAf,KAAK6K,2BAAMF,aAAK,IAAAvC,OAAA,EAAAA,EAAEvD,QACpB/D,uBAAAd,KAAqBi6B,GAAA,KAAChe,MAAMwhB,YAAY,iBAAkB,QAG1D38B,uBAAAd,KAAqBi6B,GAAA,KAAChe,MAAMwhB,YAAY,iBAAkB,OAE7D,CAED,KAAAhc,GAEE3gB,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,SAClBM,uBAAAd,KAAyBg6B,GAAA,KAACzG,UAAY,GACtCzyB,uBAAAd,KAAuBm6B,GAAA,KAAC5G,UAAY,EACrC,CAED,OAAA5J,GAEE7oB,uBAAAd,KAAYy6B,GAAA,KAACj6B,KAAK,WAClBM,uBAAAd,KAAIk7B,GAAA,IAAAwC,IAAJr3B,KAAArG,MACAc,uBAAAd,KAAI65B,GAAA,KAAoBzE,QACzB,uYA7XCjiB,uBAAAnT,QAA0B8Z,SAASoY,cAAc,OAAM,KACvDpxB,uBAAAd,KAAuB65B,GAAA,KAACjc,GAAK,cAAe5d,KAAK46B,OACjD95B,uBAAAd,aAAwBkY,UAAUia,IAAI,aACxC,EAACgK,GAAA,SAAAA,mCAIChpB,uBAAAnT,QAAuB8Z,SAASoY,cAAc,OAAM,KACpDpxB,uBAAAd,KAAoB85B,GAAA,KAAClc,GAAK,sBAAuB5d,KAAK46B,OACtD95B,uBAAAd,aAAqBkY,UAAUia,IAAI,qBACrC,EAACiK,GAAA,SAAAA,6CAICjpB,uBAAAnT,QAAiC8Z,SAASoY,cAAc,OAAM,KAC9DpxB,uBAAAd,KAA8B+5B,GAAA,KAACnc,GAAK,sBAAuB5d,KAAK46B,OAChE95B,uBAAAd,aAA+BkY,UAAUia,IAAI,qBAC/C,EAACkK,GAAA,SAAAA,wCAIClpB,uBAAAnT,QAA4B8Z,SAASoY,cAAc,OAAM,KACzDpxB,uBAAAd,KAAyBg6B,GAAA,KAACpc,GAAK,iBAAkB5d,KAAK46B,OACtD95B,uBAAAd,aAA0BkY,UAAUia,IAAI,iBACxCrxB,uBAAAd,aAA0By0B,aAAa,eAAgB,OACzD,EAAC6H,GAAA,SAAAA,oCAICnpB,uBAAAnT,QAAwB8Z,SAASoY,cAAc,OAAM,KACrDpxB,uBAAAd,KAAqBi6B,GAAA,KAACrc,GAAK,YAAa5d,KAAK46B,OAC7C95B,uBAAAd,aAAsBkY,UAAUia,IAAI,YACpCrxB,uBAAAd,KAAqBi6B,GAAA,KAAC1G,UAAY,KACpC,EAACgJ,GAAA,SAAAA,+BAICppB,uBAAAnT,QAAmB8Z,SAASoY,cAAc,OAAM,KAChDpxB,uBAAAd,KAAgBk6B,GAAA,KAACtc,GAAK,YAAa5d,KAAK46B,OACxC95B,uBAAAd,aAAiBkY,UAAUia,IAAI,YAC/BrxB,uBAAAd,KAAgBk6B,GAAA,KAAC3G,UAAY,QAC/B,EAACiJ,GAAA,SAAAA,sCAICrpB,uBAAAnT,QAA0B8Z,SAASoY,cAAc,OAAM,KACvDpxB,uBAAAd,KAAuBm6B,GAAA,KAACvc,GAAK,cAAe5d,KAAK46B,OACjD95B,uBAAAd,aAAwBkY,UAAUia,IAAI,aACxC,EAACsK,GAAA,SAAAA,oCAICtpB,uBAAAnT,QAAoB8Z,SAASoY,cAAc,OAAM,KACjDpxB,uBAAAd,KAAiBo6B,GAAA,KAACxc,GAAK,aAAc5d,KAAK46B,OAC1C95B,uBAAAd,aAAkBkY,UAAUia,IAAI,YAClC,EAACuK,GAAA,SAAAA,mCAICvpB,uBAAAnT,QAAuB8Z,SAASoY,cAAc,UAAS,KACvDpxB,uBAAAd,KAAoBq6B,GAAA,KAACzc,GAAK,WAAY5d,KAAK46B,OAC3C95B,uBAAAd,aAAqBkY,UAAUia,IAAI,wBACnCrxB,uBAAAd,KAAoBq6B,GAAA,KAAC9G,UAAY,SACnC,EAACoJ,GAAA,SAAAA,gCAICxpB,uBAAAnT,QAAoB8Z,SAASoY,cAAc,UAAS,KACpDpxB,uBAAAd,KAAiBs6B,GAAA,KAAC1c,GAAK,QAAS5d,KAAK46B,OACrC95B,uBAAAd,aAAkBkY,UAAUia,IAAI,wBAChCrxB,uBAAAd,KAAiBs6B,GAAA,KAAC/G,UAAY,MAChC,EAACqJ,GAAA,SAAAA,kCAICzpB,uBAAAnT,QAAsB8Z,SAASoY,cAAc,UAAS,KACtDpxB,uBAAAd,KAAmBu6B,GAAA,KAAC3c,GAAK,UAAW5d,KAAK46B,OACzC95B,uBAAAd,aAAoBkY,UAAUia,IAAI,wBAClCrxB,uBAAAd,KAAmBu6B,GAAA,KAAChH,UAAY,QAClC,EAAC4H,GAAA,SAAAA,6BAyDCr6B,uBAAAd,aAAwBic,MAAM8e,QAAU,MAC1C,EAAC4C,GAAA,SAAAA,uBAIC78B,uBAAAd,aAAkBkY,UAAUia,IAAI,QAChCrxB,uBAAAd,aAAkBkY,UAAUkd,OAAO,SACnCjiB,uBAAAnT,KAAIw6B,IAAe,EAAI,IACzB,EAACa,GAAA,SAAAA,wBAGCv6B,uBAAAd,aAAkBkY,UAAUia,IAAI,SAChCrxB,uBAAAd,aAAkBkY,UAAUkd,OAAO,QACnCjiB,uBAAAnT,KAAIw6B,IAAe,EAAK,IAC1B,gDAoBuB94B,GAErB,MAAMk8B,EAAyD,QAAjD9jB,SAASC,gBAAgB8jB,aAAa,OAC9CC,EAAWhkB,SAASoY,cAAc,YACxC4L,EAAS7hB,MAAM6Y,SAAW,OAC1BgJ,EAAS7hB,MAAM8e,QAAU,WACzB+C,EAAS7hB,MAAM2hB,EAAQ,QAAU,QAAU,UAC3C,MAAMG,EAAY5uB,OAAO6uB,aAAelkB,SAASC,gBAAgBL,UAIjE,OAHAokB,EAAS7hB,MAAMlR,IAAM,GAAIgzB,MACzBD,EAASrJ,aAAa,WAAY,IAClCqJ,EAASp8B,MAAQA,EACVo8B,CACT,qCAEYA,GAEV,GAAIG,UAAUC,UAAUC,MAAM,gBAAiB,CAC7C,MAAMC,EAAQtkB,SAASukB,cACvBD,EAAME,mBAAmBR,GACzB,MAAMS,EAAYpvB,OAAOqvB,eACrBD,IACFA,EAAUE,kBACVF,EAAUG,SAASN,GACnBN,EAASa,kBAAkB,EAAG,QAEjC,MACCb,EAASc,QAEb,EAAC9B,GAAA,SAAAA,2BA4ECh8B,uBAAAd,KAAuB65B,GAAA,KAAC9lB,iBAAiB,cAAejT,uBAAAd,KAAIg8B,GAAA,KAAkBnS,KAAK7pB,OACnFc,uBAAAd,KAAqBi6B,GAAA,KAAClmB,iBAAiB,cAAejT,uBAAAd,KAAIi7B,GAAA,KAAkBpR,KAAK7pB,OACjFc,uBAAAd,KAAoBq6B,GAAA,KAACtmB,iBAAiB,cAAejT,uBAAAd,KAAIo7B,GAAA,KAAiBvR,KAAK7pB,OAC/Ec,uBAAAd,KAAiBs6B,GAAA,KAACvmB,iBAAiB,cAAejT,uBAAAd,KAAIs7B,GAAA,KAAczR,KAAK7pB,OACzEc,uBAAAd,KAAmBu6B,GAAA,KAACxmB,iBAAiB,cAAejT,uBAAAd,KAAI47B,GAAA,KAAgB/R,KAAK7pB,OAC7Ec,uBAAAd,KAAyBg6B,GAAA,KAACjmB,iBAAiB,cAAejT,uBAAAd,KAAI+7B,GAAA,KAAkBlS,KAAK7pB,OACrFc,uBAAAd,KAAuBm6B,GAAA,KAACpmB,iBAAiB,cAAejT,uBAAAd,KAAI67B,GAAA,KAAmBhS,KAAK7pB,OACpF8Z,SAAS/F,iBAAiB,cAAejT,uBAAAd,KAAoBi8B,GAAA,KAACpS,KAAK7pB,MACrE,EAAC09B,GAAA,SAAAA,8BAIC58B,uBAAAd,KAAuB65B,GAAA,KAAC9lB,iBAAiB,cAAejT,uBAAAd,KAAqBg8B,GAAA,MAC7El7B,uBAAAd,KAAqBi6B,GAAA,KAACjgB,oBAAoB,cAAelZ,uBAAAd,KAAqBi7B,GAAA,MAC9En6B,uBAAAd,KAAoBq6B,GAAA,KAACrgB,oBAAoB,cAAelZ,uBAAAd,KAAoBo7B,GAAA,MAC5Et6B,uBAAAd,KAAiBs6B,GAAA,KAACtgB,oBAAoB,cAAelZ,uBAAAd,KAAiBs7B,GAAA,MACtEx6B,uBAAAd,KAAmBu6B,GAAA,KAACvgB,oBAAoB,cAAelZ,uBAAAd,KAAmB47B,GAAA,MAC1E96B,uBAAAd,KAAyBg6B,GAAA,KAAChgB,oBAAoB,cAAelZ,uBAAAd,KAAqB+7B,GAAA,MAClFj7B,uBAAAd,KAAuBm6B,GAAA,KAACngB,oBAAoB,cAAelZ,uBAAAd,KAAsB67B,GAAA,MACjF/hB,SAASE,oBAAoB,cAAelZ,uBAAAd,KAAoBi8B,GAAA,KAClE,QC3UW4C,OAYX,WAAAh/B,CAAYi/B,EAA0BnH,EAAwCoH,EAAiB,0BAV/F/+B,KAAAg/B,OAASr+B,cAAcC,oBAEvBq+B,GAA2B/9B,IAAAlB,UAAA,GAC3Bk/B,GAA4Bh+B,IAAAlB,UAAA,GAC5Bm/B,GAAuBj+B,IAAAlB,UAAA,GACvBo/B,GAAwBl+B,IAAAlB,UAAA,GACxBq/B,GAA8Cn+B,IAAAlB,UAAA,GAE9Cs/B,GAA2Cp+B,IAAAlB,UAAA,GA6Q3Cu/B,GAAmBr+B,IAAAlB,MAACwV,IAElBxV,KAAKmrB,OAAOtU,YAAYrB,EAAQ,IAGlCgqB,GAAgBt+B,IAAAlB,MAAC2V,IAEf3V,KAAKmrB,OAAOzV,SAASC,EAAK,IAhR1BxC,uBAAAnT,KAA+Bq/B,GAAA,IAAIz9B,qBACnC5B,KAAKy/B,oBAAsBj4B,UAAU,CAAA,EAAImwB,EAAQqH,OAAQzvB,GACzDvP,KAAKg/B,OAAOx+B,KAAK,cAAe,CAAEs+B,cAAanH,UAASoH,mBAExD/+B,KAAK8+B,YAAcA,EACnB9+B,KAAK8+B,YAAY5mB,UAAUia,IAAI4M,GAC/B/+B,KAAK8+B,YAAY5mB,UAAUia,IAAI,QAC/BnyB,KAAKmrB,OAAO3U,WAAWxW,KAAK8+B,aAE5B,MAAMY,EAAe5lB,SAASoY,cAAc,SAC5CwN,EAAa1M,YAAYlZ,SAAS6lB,q8WAClC3/B,KAAK8+B,YAAY9L,YAAY0M,GAE7BvsB,uBAAAnT,QAAmB8Z,SAASoY,cAAc,OAAM,KAChDpxB,uBAAAd,aAAiBkY,UAAUia,IAAI,UAC/BrxB,uBAAAd,aAAiBic,MAAM8e,QAAU,OACjC/6B,KAAK8+B,YAAY9L,YAAYlyB,uBAAAd,KAAgBi/B,GAAA,MAE7C9rB,uBAAAnT,QAAoB8Z,SAASoY,cAAc,OAAM,KACjDpxB,uBAAAd,aAAkBkY,UAAUia,IAAI,WAChCrxB,uBAAAd,aAAkBic,MAAM8e,QAAU,OAClC/6B,KAAK8+B,YAAY9L,YAAYlyB,uBAAAd,KAAiBk/B,GAAA,MAE9Cp+B,uBAAAd,KAA0B4/B,GAAA,IAAAC,IAAAx5B,KAA1BrG,KAA2B23B,EAC5B,CAED,uBAAI8H,GAEF,OAAO3+B,uBAAAd,KAAIs/B,GAAA,IACZ,CAED,uBAAIG,CAAoBK,GAEtB3sB,uBAAAnT,KAAIs/B,GAAwBh+B,OAAOwG,OAAO,CAAE,EAAEyH,EAA4BuwB,QAC1En/B,cAAcS,eAAeN,uBAAAd,KAAIs/B,GAAA,KAClC,CAED,yBAAIS,GAEF,OAAOj/B,uBAAAd,KAA4Bq/B,GAAA,KAACt9B,OACrC,CAED,SAAImV,GAEF,OAAOlX,KAAKggC,UAAU9oB,KACvB,CAED,aAAI8oB,GAEF,OAAOl/B,uBAAAd,KAAIm/B,GAAA,IACZ,CAED,iBAAIl3B,GAEF,OAAOjI,KAAKggC,UAAU/3B,aACvB,CACD,iBAAIA,CAAcA,GAEhBjI,KAAKg/B,OAAOx+B,KAAK,oBAAqB,CAAEyH,kBACxCnH,uBAAAd,gBAAAqG,KAAArG,KAA2B,CAAEiI,kBAC7BjI,KAAKigC,YACN,CAED,aAAI9H,GAEF,OAAOn4B,KAAKggC,UAAU7H,SACvB,CACD,aAAIA,CAAUvzB,GAGZ,GADA5E,KAAKggC,UAAU7H,UAAYvzB,EAEzB,UADM5E,KAAKggC,UAAU7H,UAEnBn4B,KAAK8+B,YAAY5mB,UAAUkd,OAAO,QAClCp1B,KAAK8+B,YAAY5mB,UAAUia,IAAI,SAC/BnyB,KAAK8+B,YAAY5mB,UAAUkd,OAAO,eAGlCp1B,KAAK8+B,YAAY5mB,UAAUia,IAAI,QAC/BnyB,KAAK8+B,YAAY5mB,UAAUkd,OAAO,SAClCp1B,KAAK8+B,YAAY5mB,UAAUkd,OAAO,UAGtCp1B,KAAKg/B,OAAO/+B,MAAM,gBAAiBD,KAAK8+B,YACzC,CAED,UAAI3T,GAEF,OAAO/U,YAAY/C,aACpB,CAED,kBAAI6sB,GAEF,OAAOptB,cAAcO,aACtB,CAED,WAAImC,GAEF,OAAOxV,KAAKggC,UAAUxqB,OACvB,CAED,WAAInH,GAEF,OAAOrO,KAAKggC,UAAU3xB,OACvB,CAED,mBAAIiP,GAEF,OAAOtd,KAAKggC,UAAU1iB,eACvB,CAED,YAAIlB,GAEF,OAAOpc,KAAKggC,UAAU5jB,QACvB,CACD,YAAIA,CAAS+jB,GAEXngC,KAAKg/B,OAAOx+B,KAAK,eAAgB,CAAE2/B,OACnCngC,KAAKggC,UAAU3iB,YAAY8iB,EAC5B,CAED,SAAIjkB,GAEF,OAAOlc,KAAKggC,UAAU9jB,KACvB,CACD,SAAIA,CAAMA,GAERlc,KAAKg/B,OAAOx+B,KAAK,YAAa,CAAE0D,EAAGgY,IACnClc,KAAKggC,UAAU7iB,SAASjB,EACzB,CAED,mBAAIsB,GAEF,OAAOxd,KAAKggC,UAAUxiB,eACvB,CACD,mBAAIA,CAAgByM,GAElBjqB,KAAKg/B,OAAOx+B,KAAK,sBAAuB,CAAE4/B,IAAKnW,IAC/CjqB,KAAKggC,UAAU5iB,mBAAmB6M,EACnC,CAED,YAAIoW,GAEF,OAAOrgC,KAAKiI,cAAcM,YAAYoE,QAAQvB,MAC/C,CACD,YAAIi1B,CAASC,GAEXtgC,KAAKiI,cAAcM,YAAYoE,QAAQvB,OAASk1B,EAChDx/B,uBAAAd,KAAI4/B,GAAA,IAAAC,IAAJx5B,KAAArG,KAA2B,CAAEiI,cAAejI,KAAKiI,gBACjDjI,KAAKigC,YACN,CAgJK,UAAAA,oDAEJjgC,KAAKg/B,OAAOx+B,KAAK,oBACXM,uBAAAd,KAAI4/B,GAAA,IAAAW,IAAJl6B,KAAArG,MACNc,uBAAAd,KAAI4/B,GAAA,IAAAY,IAAJn6B,KAAArG,MACAc,uBAAAd,KAAI4/B,GAAA,IAAAa,IAAJp6B,KAAArG,QACD,CAEK,WAAAsrB,oDAEJ,GAAItrB,KAAKggC,UAAU1U,YACjB,OAAOtrB,KAAKggC,UAAU1U,gBAGzB,CAEK,IAAAC,oDAMJ,OAJAvrB,KAAKg/B,OAAOx+B,KAAK,cACXM,uBAAAd,KAA4Bq/B,GAAA,KAACt9B,cAC7B/B,KAAKggC,UAAUzU,OACrBvrB,KAAKg/B,OAAO/+B,MAAM,OAAQD,KAAKkX,OACxBlX,KAAKkX,QACb,CAEK,IAAAuU,oDAMJ,OAJAzrB,KAAKg/B,OAAOx+B,KAAK,cACXM,uBAAAd,KAA4Bq/B,GAAA,KAACt9B,cAC7B/B,KAAKggC,UAAUvU,OACrBzrB,KAAKg/B,OAAO/+B,MAAM,OAAQD,KAAKkX,OACxBlX,KAAKkX,QACb,CAEK,KAAAuK,oDAOJ,OALAzhB,KAAKg/B,OAAOx+B,KAAK,eACXM,uBAAAd,KAA4Bq/B,GAAA,KAACt9B,cAC7B/B,KAAKggC,UAAUve,QACrBzhB,KAAKmrB,OAAOlU,YAAYjX,KAAKkX,OAC7BlX,KAAKg/B,OAAO/+B,MAAM,QAASD,KAAKkX,OACzBlX,KAAKkX,QACb,CAEK,MAAA6N,0DAEJ/kB,KAAKg/B,OAAOx+B,KAAK,gBACXM,uBAAAd,KAA4Bq/B,GAAA,KAACt9B,QAC/B/B,KAAKiI,cAAcqG,UAAUtB,WAAW5B,SACxB,QAAlBrK,EAAAD,uBAAAd,KAAIo/B,GAAA,YAAc,IAAAr+B,GAAAA,EAAAgkB,UAEpB,MAAMuU,EAAanqB,OAAOoqB,iBAAiBv5B,KAAK8+B,aAC1ChgB,EAASrc,KAAK2B,IAAIo1B,SAASF,EAAWxa,OAAO7X,QAAQ,KAAK,KAAMjH,KAAKiI,cAAcqG,UAAUrB,WAC7F9D,EAAQ1G,KAAK2B,IAAIo1B,SAASF,EAAWnwB,MAAMlC,QAAQ,KAAK,KAAMjH,KAAKiI,cAAcqG,UAAUpB,UAGjG,aAFMlN,KAAKggC,UAAUjb,OAAOjG,EAAQ3V,GACpCnJ,KAAKg/B,OAAO/+B,MAAM,SAAUD,KAAKkX,OAC1BlX,KAAKkX,QACb,CAEK,OAAO5M,oDAMX,OAJAtK,KAAKg/B,OAAOx+B,KAAK,SAAU,CAAE8J,oBACvBxJ,uBAAAd,KAA4Bq/B,GAAA,KAACt9B,cAC7B/B,KAAKggC,UAAU1zB,OAAOhC,GAC5BtK,KAAKg/B,OAAO/+B,MAAM,SAAUD,KAAKkX,OAC1BlX,KAAKkX,QACb,CAEK,OAAA9M,CAAQ0b,oDAOZ,OALA9lB,KAAKg/B,OAAOx+B,KAAK,SAAU,CAAEslB,iBACvBhlB,uBAAAd,KAA4Bq/B,GAAA,KAACt9B,cAC7B/B,KAAKggC,UAAU51B,QAAQ0b,aAAA,EAAAA,EAAQ3Q,gBAAiB2Q,eAAAA,EAAQxb,WAC9DtK,KAAKmrB,OAAOhU,cAAcnX,KAAKkX,MAAMiJ,UACrCngB,KAAKg/B,OAAO/+B,MAAM,UAAWD,KAAKkX,OAC3BlX,KAAKkX,QACb,CAEK,MAAAiT,CAAOhqB,EAAmCgjB,oDAI9C,GAFAnjB,KAAKg/B,OAAOx+B,KAAK,SAAU,CAAEL,OAAMgjB,mBAC7BriB,uBAAAd,KAA4Bq/B,GAAA,KAACt9B,QAC/B/B,KAAKggC,UAAU7V,OAAQ,CACzB,IAAIuW,EAaJ,OAXEA,EADEvgC,aAAgBwgC,KACHxgC,EAEQ,iBAATA,EACC,IAAIwgC,KAAK,CAACxgC,IAGV,IAAIwgC,KAAK,CAACjyB,KAAKE,UAAUzO,WAEpCH,KAAKggC,UAAU7V,OAAOuW,EAAcvd,GAC1CnjB,KAAKmrB,OAAO/T,aAAapX,KAAKkX,MAAM9C,SACpCpU,KAAKg/B,OAAO/+B,MAAM,SAAUD,KAAKkX,OAC1BlX,KAAKkX,KACb,CACD,OAAOlV,QAAQE,OAAO,yDACvB,CAEK,iBAAAgpB,CAAkB1gB,oDAOtB,OALAxK,KAAKg/B,OAAOx+B,KAAK,oBAAqB,CAAEgK,kBAClC1J,uBAAAd,KAA4Bq/B,GAAA,KAACt9B,cAC7B/B,KAAKggC,UAAU9U,kBAAkB1gB,GACvCxK,KAAKmrB,OAAO/T,aAAapX,KAAKkX,MAAM9C,SACpCpU,KAAKg/B,OAAO/+B,MAAM,oBAAqBD,KAAKkX,OACrClX,KAAKkX,QAEb,kLA5PqBygB,SAGpB,GADA33B,KAAKg/B,OAAOx+B,KAAK,uBAAwB,CAAEm3B,cACtCA,aAAA,EAAAA,EAAS1vB,eACZ,MAAM,IAAIoI,MAAM,0BAMlB,IAAIuwB,EAJJ5gC,KAAKkgC,eAAe3sB,qBAChBzS,uBAAAd,KAAem/B,GAAA,MACjBr+B,uBAAAd,KAAIm/B,GAAA,KAAYxV,UAIhBiX,EAD6C,UAAf,QAA5B7/B,EAAA42B,EAAQ1vB,cAAcC,cAAM,IAAAnH,OAAA,EAAAA,EAAEqM,UACb,IAAIsqB,cAAcC,GAElB,IAAIkB,YAAYlB,GAErCxkB,uBAAAnT,KAAIm/B,GAAc79B,OAAOwG,OAAO84B,EAAkBjJ,EAAQqI,gBAC1DhgC,KAAKg/B,OAAO/+B,MAAM,uBAAwBa,uBAAAd,KAAem/B,GAAA,KAC3D,EAACoB,GAAA,SAAAA,+EAQC,OAJAvgC,KAAKg/B,OAAOx+B,KAAK,sBAAuB,SACxC2S,uBAAAnT,KAA+Bq/B,GAAA,IAAIz9B,qBACnCd,uBAAAd,aAAiBic,MAAM8e,QAAU,UACjCj6B,uBAAAd,KAAI4/B,GAAA,IAAAiB,IAAJx6B,KAAArG,MACOA,KAAKggC,UAAUtW,KAAK1pB,KAAK8+B,aAC7B7a,MAAK,IAAW7hB,UAAApC,UAAA,OAAA,GAAA,YAEfA,KAAKg/B,OAAOx+B,KAAK,sBAAuB,QACxCR,KAAK8+B,YAAYgC,OAAS9gC,KAC1Bc,uBAAAd,KAAIq/B,GAAA,KAAyBp9B,UAC7BjC,KAAKmrB,OAAOzU,YACd,MACCqN,OAAOrjB,IAENV,KAAKg/B,OAAOt+B,MAAM,sBAAuBA,GACzCI,uBAAAd,KAA4Bq/B,GAAA,KAACn9B,OAAOxB,GACpCI,uBAAAd,KAAe4/B,GAAA,IAAAmB,IAAA16B,KAAfrG,KAAgBU,EAAM,IAEvBsgC,SAAQ,KAEPhhC,KAAKg/B,OAAO/+B,MAAM,sBAAuB,WACzCa,uBAAAd,aAAiBic,MAAM8e,QAAU,OAC1Bj6B,uBAAAd,KAA4Bq/B,GAAA,KAACt9B,gEAQxC,GAFkB,QAAlBhB,EAAAD,uBAAAd,KAAIo/B,GAAA,YAAc,IAAAr+B,GAAAA,EAAA4oB,UAClB3pB,KAAKg/B,OAAOx+B,KAAK,uBAAwB,CAAEwM,WAAYhN,KAAKiI,cAAcqG,UAAUtB,aAChFhN,KAAKiI,cAAcqG,UAAUtB,WAAW5B,OAAQ,CAElD,IAAIK,EACJ,OAFA0H,uBAAAnT,KAAmBo/B,GAAA,IAAIxF,gBAEf55B,KAAKiI,cAAcM,YAAYkE,MACrC,IAAK,OACHhB,EAASzL,KAAKiI,cAAcM,YAAYkC,KAAKgB,OAC7C,MACF,IAAK,OACHA,EAASzL,KAAKiI,cAAcM,YAAYgE,KAAKd,OAC7C,MACF,QACEA,EAAS,CACPV,IAAK,GACLC,KAAM,GACNC,MAAO,GACPC,OAAQ,IAIdpK,uBAAAd,KAAgBo/B,GAAA,KAAC1V,KAAK1pB,KAAK8+B,YAAarzB,EAAQzL,KAAKiI,cAAcqG,UACpE,CACH,EAACuyB,GAAA,SAAAA,uBAIC//B,uBAAAd,aAAkBic,MAAM8e,QAAU,OAClCj6B,uBAAAd,KAAiBk/B,GAAA,KAAC3L,UAAY,EAChC,gCAEW9e,GAET3T,uBAAAd,aAAkBic,MAAM8e,QAAU,UAClCj6B,uBAAAd,aAAkBkY,UAAUia,IAAI,aAChCrxB,uBAAAd,aAAkBkY,UAAUkd,OAAO,YACnCt0B,uBAAAd,KAAiBk/B,GAAA,KAAC3D,UAA2B,iBAAR9mB,EAAmBA,EAAMA,EAAInU,OACpE,gCAEWwU,GAEThU,uBAAAd,aAAkBic,MAAM8e,QAAU,UAClCj6B,uBAAAd,aAAkBkY,UAAUia,IAAI,YAChCrxB,uBAAAd,aAAkBkY,UAAUkd,OAAO,aACnCt0B,uBAAAd,aAAkBu7B,UAAYzmB,EAAMxU,QACpColB,YAAW,KAET5kB,uBAAAd,KAAI4/B,GAAA,IAAAiB,IAAJx6B,KAAArG,KAAoB,GACnB8U,EAAM6mB,SAAW,KACtB,EAAC8E,GAAA,SAAAA,uBAICzgC,KAAKkgC,eAAe9qB,mBAAmBpV,KAAKoK,QAAQyf,KAAK7pB,OACzDA,KAAKkgC,eAAe5qB,iBAAiBtV,KAAKyhB,MAAMoI,KAAK7pB,OACrDA,KAAKkgC,eAAexrB,iBAAiB5T,uBAAAd,KAAe4/B,GAAA,IAAAmB,IAAClX,KAAK7pB,OAC1DA,KAAKkgC,eAAejrB,sBAAsBnU,uBAAAd,KAAkB4/B,GAAA,IAAAqB,IAACpX,KAAK7pB,OAClEA,KAAKkgC,eAAe7rB,oBAAoBvT,uBAAAd,KAAc4/B,GAAA,IAAAsB,IAACrX,KAAK7pB,OAC5DA,KAAKkgC,eAAenrB,iBAAiBjU,uBAAAd,KAAe4/B,GAAA,IAAAuB,IAACtX,KAAK7pB,OAC1DA,KAAKkgC,eAAe3rB,wBAAwBzT,uBAAAd,KAAkB4/B,GAAA,IAAAiB,IAAChX,KAAK7pB,OACpEA,KAAKkgC,eAAezqB,yBAAyB3U,uBAAAd,KAAqBu/B,GAAA,KAAC1V,KAAK7pB,OACxEA,KAAKkgC,eAAetqB,gBAAgB9U,uBAAAd,KAAkBw/B,GAAA,KAAC3V,KAAK7pB,MAC9D,+BAYUoU,SAGR,GADApU,KAAKg/B,OAAOx+B,KAAK,WAAY,CAAE4T,YAC3BpU,KAAKiI,cAAcqG,UAAUtB,WAAW5B,QACtCgJ,GAAWA,EAAQ,iCAAkC,CACvD,MAAMgtB,EAAOhtB,EAAQ,iCACL,QAAhBrT,EAAAD,uBAAAd,KAAgBo/B,GAAA,YAAA,IAAAr+B,GAAAA,EAAEk0B,OAAOmM,EAC1B,CAEHphC,KAAKmrB,OAAOhX,aAAaC,EAC3B,mCAEcvJ,GAEZ7K,KAAKg/B,OAAOx+B,KAAK,eAAgB,CAAEqK,SACnC7K,KAAKmqB,OAAO,IAAIwW,KAAK,CAACjyB,KAAKE,UAAU/D,IAAQ,CAAE4B,KAAqB,kCAAG,gCACzE","x_google_ignoreList":[36]}